<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Github Badge 使用教程</title>
    <url>/p/2280.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Github Badge即在Github README文件中常出现的小图标，用于实时显示相关信息。<br>  <a id="more"></a></p>
<h2 id="一、使用效果"><a href="#一、使用效果" class="headerlink" title="一、使用效果"></a>一、使用效果</h2><p><img src="https://github.com/Olvi73/Blog-Photo/raw/master/github%20badge.png" alt="使用效果"></p>
<p>使用这类Badge后，能让README更加美观，同时让人能实时了解到项目相关的变化。  </p>
<h2 id="二、如何使用"><a href="#二、如何使用" class="headerlink" title="二、如何使用"></a>二、如何使用</h2><p><strong>以显示github仓库stars数为例</strong></p>
<ul>
<li><p>打开<a href="https://shields.io/" target="_blank" rel="noopener">Shields.io官网</a></p>
</li>
<li><p>选择Social选项，然后点击Github Repo stars，进入以下界面<br><img src="https://github.com/Olvi73/Blog-Photo/raw/master/Repo%20page.png" alt></p>
</li>
<li><p>填写相应的<code>user</code>即github用户，<code>repo</code>想要显示stars的仓库名，<code>style</code>图标风格选择，<code>override label</code>替换输出图标的<code>stars</code>内容，<code>named logo</code>表示可添加在stars前的小logo  </p>
</li>
<li><p>然后可以选择不同的复制类型，以下是markdown的语法复制结果  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![GitHub Repo stars](https://img.shields.io/github/stars/hexojs/hexo?style=flat-square)</span><br></pre></td></tr></table></figure>
</li>
<li><p>最后将复制的语句粘贴到README文件中就行了  </p>
</li>
</ul>
<p><strong>普通效果</strong>:<img src="https://img.shields.io/github/stars/hexojs/hexo" alt="GitHub Repo stars"><br><strong>flat-square效果</strong>：<img src="https://img.shields.io/github/stars/hexojs/hexo?style=flat-square" alt="GitHub Repo stars"><br><strong>override label改成Hexo</strong>：<img src="https://img.shields.io/github/stars/hexojs/hexo?label=Hexo" alt="GitHub Repo stars"><br><strong>添加Hexo小logo</strong>：<img src="https://img.shields.io/github/stars/hexojs/hexo?logo=Hexo" alt="GitHub Repo stars">  </p>
<h2 id="三、自定义Badge内容"><a href="#三、自定义Badge内容" class="headerlink" title="三、自定义Badge内容"></a>三、自定义Badge内容</h2><p>在官网的YourBadge中，制作自定义Badge<br><img src="https://github.com/Olvi73/Blog-Photo/raw/master/Your%20Badge.png" alt><br>如输入label：<code>Olvi73</code> message：<code>Blog</code> color：<code>orange</code>   </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可供选择的颜色</span></span><br><span class="line">brightgreen</span><br><span class="line">green</span><br><span class="line">yellowgreen</span><br><span class="line">yellow</span><br><span class="line">orange</span><br><span class="line">red</span><br><span class="line">lightgrey</span><br><span class="line">blue</span><br></pre></td></tr></table></figure>

<p>显示效果：<br><img src="https://img.shields.io/badge/Olvi73-Blog-orange" alt><br><img src="https://img.shields.io/badge/%E6%95%99%E7%A8%8B-%E5%BE%BD%E6%A0%87%E4%BD%BF%E7%94%A8-brightgreen" alt><br>如果想要在自定义徽标上添加链接可以使用以下格式  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[![badge-link]][link]</span><br><span class="line"></span><br><span class="line">以下两句放在文档最后，或者直接将链接写在上面的代码中</span><br><span class="line"></span><br><span class="line">[badge-link]: https://img.shields.io/badge/%E6%95%99%E7%A8%8B-%E5%BE%BD%E6%A0%87%E4%BD%BF%E7%94%A8-brightgreen</span><br><span class="line">[link]: https://olvi73.github.io/2020/10/12/Github%20Badge%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</span><br></pre></td></tr></table></figure>

<p>带有链接的显示效果：<a href="https://olvi73.github.io/2020/10/12/Github%20Badge%20%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"><img src="https://img.shields.io/badge/%E6%95%99%E7%A8%8B-%E5%BE%BD%E6%A0%87%E4%BD%BF%E7%94%A8-brightgreen" alt="badge-link"></a></p>
<h2 id="四、常见问题"><a href="#四、常见问题" class="headerlink" title="四、常见问题"></a>四、常见问题</h2><p>徽标的访问速度过慢，导致在README中打开不了，或者无法显示。<br><strong>官网提示</strong>：  </p>
<blockquote>
<p>If your GitHub badge errors, it might be because you hit GitHub’s rate limits. You can increase Shields.io’s rate limit by adding the Shields GitHub application using your GitHub account.  </p>
</blockquote>
<p><strong>解决方法</strong>：授权Shields.io到你的github账号即可 <a href="https://img.shields.io/github-auth" target="_blank" rel="noopener">授权地址</a></p>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Hexo</title>
    <url>/p/1c53.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>This is my very first post.<br> <a id="more"></a></p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>生成静态文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<p>启动服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>部署网站到Github</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Git教程</title>
    <url>/p/a15e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Git教程</p>
<a id="more"></a>

<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png" alt="git">  </p>
<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">常用 Git 命令清单</a></p>
</blockquote>
<h3 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h3><ul>
<li><p>设置用户信息  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Olvi73&quot;</span><br><span class="line">git config --global user.email &quot;Olvi73@gmail.com&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看配置信息  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --list</span><br><span class="line">git config user.name</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>上述命令设置的信息会保存在<code>~/.gitconfig</code>中</p>
<h3 id="2-本地初始化Git仓库"><a href="#2-本地初始化Git仓库" class="headerlink" title="2.本地初始化Git仓库"></a>2.本地初始化Git仓库</h3><p>获取Git仓库的方式： </p>
<ol>
<li>本地初始化Git仓库</li>
<li>从远程仓库克隆</li>
</ol>
<h4 id="2-1-本地初始化Git仓库"><a href="#2-1-本地初始化Git仓库" class="headerlink" title="2.1 本地初始化Git仓库"></a>2.1 本地初始化Git仓库</h4><p>初始化命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<h4 id="2-2-从远程仓库克隆"><a href="#2-2-从远程仓库克隆" class="headerlink" title="2.2 从远程仓库克隆"></a>2.2 从远程仓库克隆</h4><p>克隆命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone 远程仓库地址</span><br><span class="line">例如</span><br><span class="line">git clone https://github.com/torvalds/linux.git</span><br></pre></td></tr></table></figure>

<h3 id="3-工作目录、暂存区及版本库"><a href="#3-工作目录、暂存区及版本库" class="headerlink" title="3. 工作目录、暂存区及版本库"></a>3. 工作目录、暂存区及版本库</h3><p><strong>版本库</strong>：<code>.git</code>隐藏文件夹就是版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等。<br><strong>工作目录（工作区）</strong>：包含<code>.git</code>文件夹的目录就是工作目录，主要用于存放开发的代码。<br><strong>暂存区</strong>：<code>.git</code>文件夹中有很多文件，其中有一个<code>index</code>文件就是暂存区，也可以叫做<code>stage</code>。暂存区是一个临时保存修改文件的地方。</p>
<p>工作区-&gt;<code>git add</code>-&gt;暂存区-&gt;<code>git commit</code>-&gt;版本库</p>
<h4 id="3-1-Git工作目录下文件的两种状态"><a href="#3-1-Git工作目录下文件的两种状态" class="headerlink" title="3.1 Git工作目录下文件的两种状态"></a>3.1 Git工作目录下文件的两种状态</h4><ul>
<li><strong>untracked</strong> 未跟踪（未被纳入版本控制）  </li>
<li><strong>tracked</strong> 已跟踪（被纳入版本控制）  <ul>
<li><strong>Unmodified</strong> 未修改状态</li>
<li><strong>Modified</strong> 已修改状态</li>
<li><strong>Staged</strong> 已暂存状态</li>
</ul>
</li>
</ul>
<h3 id="4-本地仓库操作"><a href="#4-本地仓库操作" class="headerlink" title="4. 本地仓库操作"></a>4. 本地仓库操作</h3><h4 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br><span class="line">git status -s //输出更加简洁</span><br></pre></td></tr></table></figure>

<h4 id="将未跟踪-untracked-的文件加入暂存区"><a href="#将未跟踪-untracked-的文件加入暂存区" class="headerlink" title="将未跟踪(untracked)的文件加入暂存区"></a>将未跟踪(untracked)的文件加入暂存区</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add helloworld.txt</span><br></pre></td></tr></table></figure>

<h4 id="将已跟踪的文件变成未跟踪文件"><a href="#将已跟踪的文件变成未跟踪文件" class="headerlink" title="将已跟踪的文件变成未跟踪文件"></a>将已跟踪的文件变成未跟踪文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset helloworld.txt</span><br></pre></td></tr></table></figure>

<h4 id="将暂存区的文件修改提交到本地仓库"><a href="#将暂存区的文件修改提交到本地仓库" class="headerlink" title="将暂存区的文件修改提交到本地仓库"></a>将暂存区的文件修改提交到本地仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;init repo&quot;</span><br></pre></td></tr></table></figure>

<h4 id="commit-内容"><a href="#commit-内容" class="headerlink" title="commit 内容"></a>commit 内容</h4><table>
<thead>
<tr>
<th>Leading active verb</th>
<th>Explanation</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>Add</td>
<td>Create a capability e.g. feature, test, dependency.</td>
<td>添加功能</td>
</tr>
<tr>
<td>Cut</td>
<td>Remove a capability e.g. feature, test, dependency.</td>
<td>移除功能</td>
</tr>
<tr>
<td>Fix</td>
<td>Fix an issue e.g. bug, typo, accident, misstatement.</td>
<td>解决问题</td>
</tr>
<tr>
<td>Bump</td>
<td>Increase the version of something e.g. dependency.</td>
<td>版本升级</td>
</tr>
<tr>
<td>Make</td>
<td>Change the build process, or tooling, or infra.</td>
<td>改变工具</td>
</tr>
<tr>
<td>Start</td>
<td>Begin doing something; e.g. create a feature flag.</td>
<td>开始</td>
</tr>
<tr>
<td>Stop</td>
<td>End doing something; e.g. remove a feature flag.</td>
<td>停止</td>
</tr>
<tr>
<td>Refactor</td>
<td>A code change that MUST be just a refactoring.</td>
<td>必须重构</td>
</tr>
<tr>
<td>Reformat</td>
<td>Refactor of formatting, e.g. omit whitespace.</td>
<td>格式化</td>
</tr>
<tr>
<td>Optimize</td>
<td>Refactor of performance, e.g. speed up code.</td>
<td>优化</td>
</tr>
<tr>
<td>Document</td>
<td>Refactor of documentation, e.g. help files.</td>
<td>重构文档</td>
</tr>
</tbody></table>
<blockquote>
<p><a href="https://juejin.cn/post/6939766986125623304" target="_blank" rel="noopener">commit</a></p>
</blockquote>
<ul>
<li><code>feat</code> 功能feature的意思，也是最常用的。当你的功能有变更的时候，都可以采用这种类型的type  </li>
<li><code>fix</code> 当然指的是bug修复  </li>
<li><code>docs</code> 更新了文档，或者更新了注释  </li>
<li><code>style</code> 代码格式调整，比如执行了format、更改了tab显示等  </li>
<li><code>refactor</code> 重构代码。指的是代码结构的调整，比如使用了一些设计模式重新组织了代码  </li>
<li><code>perf</code> 对项目或者模块进行了性能优化。比如一些jvm的参数改动，把stringbuffer改为stringbuilder等  </li>
<li><code>test</code> 这个简单，就是增加了单元测试和自动化相关的代码  </li>
<li><code>build</code> 影响编译的一些更改，比如更改了maven插件、增加了npm的过程等  </li>
<li><code>ci</code> 持续集成方面的更改。现在有些build系统喜欢把ci功能使用yml描述。如有这种更改，建议使用ci  </li>
<li><code>chore</code> 其他改动。比如一些注释修改或者文件清理。不影响src和test代码文件的，都可以放在这里  </li>
<li><code>revert</code> 回滚了一些前面的代码</li>
</ul>
<h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rm helloworld.txt</span><br></pre></td></tr></table></figure>

<h4 id="将文件添加至忽略列表"><a href="#将文件添加至忽略列表" class="headerlink" title="将文件添加至忽略列表"></a>将文件添加至忽略列表</h4><p>一般我们总会有些文件无需纳入Git管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。在这种情况下，我们可以在工作目录中创建一个名为<code>.gitignore</code>的文件（文件名称固定），列出要忽略的文件模式。</p>
<p>以斜杠<code>/</code>开头表示目录；<br>以星号<code>*</code>通配多个字符；<br>以问号<code>?</code>通配单个字符<br>以方括号<code>[]</code>包含单个字符的匹配列表；<br>以叹号<code>!</code>表示不忽略(跟踪)匹配到的文件或目录；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/res/ 过滤整个文件夹</span><br><span class="line">*.a 过滤所有.a文件</span><br><span class="line">/res/a.c 过滤某个具体文件</span><br><span class="line">!b.a 不过滤b.a文件</span><br></pre></td></tr></table></figure>

<h4 id="查看日志记录"><a href="#查看日志记录" class="headerlink" title="查看日志记录"></a>查看日志记录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br><span class="line">输入q退出界面</span><br></pre></td></tr></table></figure>

<h3 id="5-远程仓库操作"><a href="#5-远程仓库操作" class="headerlink" title="5. 远程仓库操作"></a>5. 远程仓库操作</h3><ol>
<li>查看远程仓库</li>
<li>添加远程仓库</li>
<li>从远程仓库克隆</li>
<li>移除无效的远程仓库</li>
<li>从远程仓库抓取与拉取</li>
<li>推送到远程仓库</li>
</ol>
<h4 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote</span><br><span class="line">git remote -v</span><br><span class="line">git remote show origin  origin是git remote的name</span><br></pre></td></tr></table></figure>

<h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote [shortname] [url]</span><br></pre></td></tr></table></figure>

<h4 id="从远程仓库克隆"><a href="#从远程仓库克隆" class="headerlink" title="从远程仓库克隆"></a>从远程仓库克隆</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone [url]</span><br></pre></td></tr></table></figure>

<h4 id="移除远程仓库"><a href="#移除远程仓库" class="headerlink" title="移除远程仓库"></a>移除远程仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote rm [name]</span><br></pre></td></tr></table></figure>

<h4 id="从远程仓库抓取与拉取"><a href="#从远程仓库抓取与拉取" class="headerlink" title="从远程仓库抓取与拉取"></a>从远程仓库抓取与拉取</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch  抓取不merge</span><br><span class="line">git pull  抓取并merge</span><br></pre></td></tr></table></figure>

<p>注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal:refusing to merge unrelated histories），解决此问题可以在<code>git pull</code>命令后面加上参数<code>--allow-unrelated-histories</code></p>
<h4 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>

<h3 id="6-Git分支"><a href="#6-Git分支" class="headerlink" title="6. Git分支"></a>6. Git分支</h3><ol>
<li>查看分支</li>
<li>创建分支</li>
<li>切换分支</li>
<li>推送至远程仓库分支</li>
<li>合并分支</li>
<li>删除分支</li>
</ol>
<h4 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch	列出所有本地分支</span><br><span class="line">git branch -r	列出所有远程分支</span><br><span class="line">git branch -a	列出所有本地分支和远程分支</span><br></pre></td></tr></table></figure>

<h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch [branch name]</span><br></pre></td></tr></table></figure>

<h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout [name]</span><br></pre></td></tr></table></figure>

<h4 id="推送至远程仓库分支"><a href="#推送至远程仓库分支" class="headerlink" title="推送至远程仓库分支"></a>推送至远程仓库分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin [branch name]</span><br></pre></td></tr></table></figure>

<h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge [branch name]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Valine评论插件</title>
    <url>/p/551f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo常用插件之Valine评论插件</p>
<a id="more"></a>

<blockquote>
<p><a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">Valine</a></p>
</blockquote>
<h5 id="1-注册-登录-LeanCloud"><a href="#1-注册-登录-LeanCloud" class="headerlink" title="1.注册/登录 LeanCloud"></a>1.注册/登录 LeanCloud</h5><p><a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">登录</a><br><a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">注册</a></p>
<h5 id="2-获取APP-ID-和-APP-Key"><a href="#2-获取APP-ID-和-APP-Key" class="headerlink" title="2.获取APP ID 和 APP Key"></a>2.获取APP ID 和 APP Key</h5><h5 id="3-配置next"><a href="#3-配置next" class="headerlink" title="3.配置next"></a>3.配置next</h5><p>打开根目录下的theme/next下的<code>_config.yml</code>配置文件,填入<code>appid</code>和<code>appkey</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier. See: https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 全站搜索插件</title>
    <url>/p/f0f4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo常用插件之全站搜索</p>
<a id="more"></a>

<blockquote>
<p><a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a><br> <a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">hexo-generator-searchdb</a></p>
</blockquote>
<h5 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search  --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<h5 id="2-配置hexo站点主配置文件-config-yml-在文件末尾添加"><a href="#2-配置hexo站点主配置文件-config-yml-在文件末尾添加" class="headerlink" title="2.配置hexo站点主配置文件_config.yml,在文件末尾添加"></a>2.配置hexo站点主配置文件<code>_config.yml</code>,在文件末尾添加</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<h5 id="3-修改next主题配置文件-config-yml，启用-local-search"><a href="#3-修改next主题配置文件-config-yml，启用-local-search" class="headerlink" title="3.修改next主题配置文件_config.yml，启用 local_search"></a>3.修改next主题配置文件<code>_config.yml</code>，启用 <code>local_search</code></h5><p>将 <code>enable</code> 的 <code>false</code> 改为 <code>true</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Admin插件安装</title>
    <url>/p/48be.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>后台管理插件–Hexo Admin安装  </p>
<a id="more"></a>
<blockquote>
<p>GitHub 地址: <a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">click here</a>  </p>
</blockquote>
<h4 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h4><p>For 2.x, use version <code>0.3.0</code> of this plugin. Version <code>1.x</code> and beyond only support Hexo v3.x.</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol>
<li><code>npm install --save hexo-admin</code>  </li>
<li><code>hexo s</code>  </li>
<li><code>http://localhost:4000/admin/</code></li>
<li>某些css或js的CDN国内某些网络供应商无法访问 <a href="https://github.com/jaredly/hexo-admin/issues/209" target="_blank" rel="noopener">Issue#209</a></li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 文章加密插件</title>
    <url>/p/9575.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo常用插件之文章加密</p>
<a id="more"></a>

<blockquote>
<p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt" target="_blank" rel="noopener">D0n9X1n/hexo-blog-encrypt</a><br>  <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">中文文档</a></p>
</blockquote>
<h5 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>

<h5 id="2-快速使用"><a href="#2-快速使用" class="headerlink" title="2.快速使用"></a>2.快速使用</h5><ul>
<li>将 <code>password</code> 添加到您的文章信息头就像这样：</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-03</span><span class="number">-13</span> <span class="number">21</span><span class="string">:12:21</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">hello</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 永久链接插件</title>
    <url>/p/a233.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo常用插件之永久链接</p>
<a id="more"></a>

<blockquote>
<p><a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a></p>
</blockquote>
<h5 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<h5 id="2-配置hexo站点主配置文件-config-yml-修改permalink属性"><a href="#2-配置hexo站点主配置文件-config-yml-修改permalink属性" class="headerlink" title="2.配置hexo站点主配置文件_config.yml,修改permalink属性"></a>2.配置hexo站点主配置文件<code>_config.yml</code>,修改<code>permalink</code>属性</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">p/:abbrlink.html</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">    <span class="attr">alg:</span> <span class="string">crc16</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">    <span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure>

<h5 id="3-重新加载所有文章"><a href="#3-重新加载所有文章" class="headerlink" title="3.重新加载所有文章"></a>3.重新加载所有文章</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>IT</title>
    <url>/p/6f36.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> Quotes by Stephen King.<br>  <a id="more"></a></p>
<blockquote>
<h2 id="Your-hair-is-winter-fire"><a href="#Your-hair-is-winter-fire" class="headerlink" title="Your hair is winter fire,"></a><strong><em>Your hair is winter fire,</em></strong></h2><h3 id="January-embers"><a href="#January-embers" class="headerlink" title="January embers."></a><strong><em>January embers.</em></strong></h3><h3 id="My-heart-burns-there-too"><a href="#My-heart-burns-there-too" class="headerlink" title="My heart burns there, too."></a><strong><em>My heart burns there, too.</em></strong></h3><h3 id="Stephen-King-IT"><a href="#Stephen-King-IT" class="headerlink" title="-Stephen King, IT"></a><strong><em>-Stephen King, IT</em></strong></h3></blockquote>
]]></content>
      <categories>
        <category>Quotes</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo 代码块中tab替换space</title>
    <url>/p/4bd9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>将 Hexo文章代码块中的tab替换成space</p>
<a id="more"></a>

<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li>打开站点配置文件<code>_config.yml</code>  </li>
<li>修改<code>tab_replace: &#39;    &#39;</code></li>
</ol>
<h4 id="配置后"><a href="#配置后" class="headerlink" title="配置后"></a>配置后</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">'    '</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的基本语法</title>
    <url>/p/ad8f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br>  <a id="more"></a><br>Markdown 语言在 2004 由John Gruber创建。</p>
<p>Markdown 编写的文档可以导出 HTML等多种格式的文档。</p>
<p>Markdown 编写的文档后缀为 <strong>.md</strong>和 <strong>.markdown</strong>。</p>
<h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题           </span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<p><strong>特别注意符号 # 和文字中间的空格</strong></p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote>
<h2 id="二、字体格式"><a href="#二、字体格式" class="headerlink" title="二、字体格式"></a>二、字体格式</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*测试字体*</span><br><span class="line">**测试字体**</span><br><span class="line">***测试字体***</span><br><span class="line">~~测试字体~~</span><br></pre></td></tr></table></figure>

<p><em>测试倾斜字体</em><br><strong>测试加粗字体</strong><br><strong><em>测试倾斜加粗字体</em></strong><br><del>测试删除字体</del></p>
<p>字体与符号直接不用加空格，如果想改变双引号内的字体格式有以下几种方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***&quot;双引号里的文字&quot;***    错误使用</span><br><span class="line">&quot;***双引号里的文字***&quot;    直接改变文字格式，不改变引号格式</span><br><span class="line">***\&quot;双引号里的文字\&quot;***  使用转义字符\</span><br></pre></td></tr></table></figure>

<p><strong>*”双引号里的文字”*</strong>      错误使用<br>“<strong><em>双引号里的文字</em></strong>“      直接改变文字格式，不改变引号格式<br><strong><em>&quot;双引号里的文字&quot;</em></strong>    使用转义字符  \</p>
<h2 id="三、超链接"><a href="#三、超链接" class="headerlink" title="三、超链接"></a>三、超链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接悬停显示内容&quot;)</span><br></pre></td></tr></table></figure>

<p><a href="https://olvi73.github.io/" title="Github地址">Github主页</a></p>
<h2 id="四、插入图片"><a href="#四、插入图片" class="headerlink" title="四、插入图片"></a>四、插入图片</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![图片](图片链接 &quot;图片悬停显示内容&quot;)</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/Olvi73/Blog-Photo/raw/master/Markdown%E5%9B%BE%E7%89%87.jpg" alt="图片" title="测试图片"></p>
<h2 id="五、引用"><a href="#五、引用" class="headerlink" title="五、引用"></a>五、引用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;引用的内容</span><br><span class="line">&gt;&gt;引用的内容</span><br><span class="line">&gt;&gt;&gt;引用的内容</span><br></pre></td></tr></table></figure>

<blockquote>
<p>引用的内容</p>
<blockquote>
<p>引用的内容</p>
<blockquote>
<p>引用的内容</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">代码块</span><br><span class="line">可以显示一大块的代码</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p>在代码行中有反分号时，可以使用多个反分号来进行显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```` //使用4个反分号</span><br><span class="line">```</span><br><span class="line">代码块</span><br><span class="line">可以显示一大块的代码</span><br><span class="line">```</span><br><span class="line">````  //表示代码行结束</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">代码块</span><br><span class="line">可以显示一大块的代码</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="代码行"><a href="#代码行" class="headerlink" title="代码行"></a>代码行</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`代码行用于显示单行代码`</span><br></pre></td></tr></table></figure>

<p><code>代码行用于显示单行代码</code></p>
<h3 id="高亮代码"><a href="#高亮代码" class="headerlink" title="高亮代码"></a>高亮代码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">"我的第一个python程序：Hello World!"</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```python      //添加需要高亮的语言名称</span><br><span class="line">print(&quot;我的第一个python程序：Hello World!&quot;)</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"我的第一个c++程序：Hello World!"</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">              System.out.println(<span class="string">"我的第一个Java程序：Hello World!"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="七、序列"><a href="#七、序列" class="headerlink" title="七、序列"></a>七、序列</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ 这是一个无序序列</span><br><span class="line">1. 这是一个有序序列 //渲染后左侧的1.无法被选中</span><br></pre></td></tr></table></figure>

<ul>
<li>这是一个无序序列</li>
</ul>
<ol>
<li>这是一个有序序列</li>
</ol>
<h2 id="八、待办事项"><a href="#八、待办事项" class="headerlink" title="八、待办事项"></a>八、待办事项</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [x] java</span><br><span class="line">- [ ] c++</span><br><span class="line">- [x] python</span><br></pre></td></tr></table></figure>

<ul>
<li><input checked disabled type="checkbox"> java</li>
<li><input disabled type="checkbox"> c++</li>
<li><input checked disabled type="checkbox"> python</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>The Robin</title>
    <url>/p/9151.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> Quotes in HIMYM.</p>
<a id="more"></a>


    <div id="aplayer-ZXoekRXb" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="17757819" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>


<h2 id="Step-One"><a href="#Step-One" class="headerlink" title="Step One"></a>Step One</h2><p>Admit to yourself that you still have feelings for this girl.<br>“<strong><em>I am hopelessly,irretrievably in love with her. More than she knows.</em></strong>“</p>
<h2 id="Step-Two"><a href="#Step-Two" class="headerlink" title="Step Two"></a>Step Two</h2><p>Choose the completely wrong moment to make a drunken move after hanging out at a strip club. <strong><em>and get shot down on purpose.</em></strong></p>
<h2 id="Step-Three"><a href="#Step-Three" class="headerlink" title="Step Three"></a>Step Three</h2><p>Agree that you two don’t work,locking the door on any future you could have together.<br>“<strong><em>I’m done trying to get you, I can’t do it anymore.</em></strong> “<br>Which will drive Robin nuts.</p>
<h2 id="Step-Four"><a href="#Step-Four" class="headerlink" title="Step Four"></a>Step Four</h2><p>Robin goes nuts.</p>
<h2 id="Step-Five"><a href="#Step-Five" class="headerlink" title="Step Five"></a>Step Five</h2><p>Find the person who annoys Robin most in the world…<br>“<strong><em>Nobody asked for your help, Patrice!</em></strong>“<br>…and ask for her help.Explain everything to Patrice,and hope she agrees to help.</p>
<h2 id="Step-Six"><a href="#Step-Six" class="headerlink" title="Step Six"></a>Step Six</h2><p>Check with your doctor about possible broken ribs.</p>
<h2 id="Step-Seven"><a href="#Step-Seven" class="headerlink" title="Step Seven"></a>Step Seven</h2><p>Pretend to be dating Patrice.<br>“<strong><em>Nobody asked you here, Patrice!</em></strong>“<br>“<strong><em>Actually,I did</em></strong>“</p>
<h2 id="Step-Eight"><a href="#Step-Eight" class="headerlink" title="Step Eight"></a>Step Eight</h2><p>Wait until Robin inevitably breaks into your place to find the Playbook and show it to Patrice,which you’ll monitor via the hidden cameras you have in your apartment.</p>
<h2 id="Step-Nine"><a href="#Step-Nine" class="headerlink" title="Step Nine"></a>Step Nine</h2><p>After Patrice finds the Playbook,have your first big fight.<br>“<strong><em>This is going so well.Thank you so much.</em></strong>“<br>“<strong><em>I know, but what the heck are Lily and Ted doing here?</em></strong>“<br>“<strong><em>I don’t know.My friends have no boundaries.</em></strong>“</p>
<h2 id="Step-Ten"><a href="#Step-Ten" class="headerlink" title="Step Ten"></a>Step Ten</h2><p>Prove your loyalty to Patrice by burning the Playbook,and actually burn it.<br>“<strong><em>You don’t need it anymore.</em></strong>“</p>
<h2 id="Step-Eleven"><a href="#Step-Eleven" class="headerlink" title="Step Eleven"></a>Step Eleven</h2><p>Because your friends have no boundaries, they’ll inevitably have an intervention for Robin, which you’ll monitor via the hidden cameras you have in Marshall and Lily’s apartment.</p>
<h2 id="Step-Twelve"><a href="#Step-Twelve" class="headerlink" title="Step Twelve"></a>Step Twelve</h2><p>Tell only Ted about your plan to propose to Patrice.<br>“<strong><em>You can’t tell anybody. Agreed?</em></strong>“</p>
<h2 id="Step-Thirteen"><a href="#Step-Thirteen" class="headerlink" title="Step Thirteen"></a>Step Thirteen</h2><p>Wait and see if Ted tells Robin,and if he does…<br>“<strong><em>Barney’s getting engaged</em></strong>“<br>…it means your best bro in the world has let go of Robin and has given you his blessing.</p>
<h2 id="Step-Fourteen"><a href="#Step-Fourteen" class="headerlink" title="Step Fourteen"></a>Step Fourteen</h2><p>Robin arrives at her favorite spot in the city and finds the secret final page of the Playbook. The last play you’ll ever run.</p>
<h2 id="Step-Fifteen"><a href="#Step-Fifteen" class="headerlink" title="Step Fifteen"></a>Step Fifteen</h2><p>Robin realizes she’s standing underneath mistletoe.<br>“<strong><em>turn it over.</em></strong>“</p>
<h2 id="Step-Sixteen"><a href="#Step-Sixteen" class="headerlink" title="Step Sixteen"></a>Step Sixteen</h2><p><strong>Hope she say yes</strong>.</p>
<p>More:<a href="https://www.bilibili.com/video/av69058268/" target="_blank" rel="noopener"><strong><em>The Robin</em></strong></a></p>
<iframe src="//player.bilibili.com/player.html?aid=69058268&cid=119685586&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      <categories>
        <category>Quotes</category>
      </categories>
  </entry>
  <entry>
    <title>Sublime Text 3激活方法</title>
    <url>/p/6db0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Hexo常用工具之Sublime Text 3激活</p>
<a id="more"></a>
<p><a href="https://blog.csdn.net/x550392236/article/details/89712736" target="_blank" rel="noopener">原贴地址</a></p>
<p>2019/10/2 最新版已失效，老版本仍可用</p>
<h3 id="一、修改sunlime-text-exe文件"><a href="#一、修改sunlime-text-exe文件" class="headerlink" title="一、修改sunlime_text.exe文件"></a>一、修改sunlime_text.exe文件</h3><blockquote>
<p>1、打开<code>Sublime Sublime Text 3</code>安装目录，备份<code>sublime_text.exe</code><br>2、打开 <strong><a href="https://hexed.it" target="_blank" rel="noopener">https://hexed.it</a></strong><br>3、点击<code>Open File</code> ，选择<code>sublime_text.exe</code> ，查找中输入<code>94 97 0D</code><br>4、点击0x0058F144然后将文件中的数值改成<code>00 00 00</code>，然后点<code>Export</code>导出，将文件放到刚才的安装目录<br>5、打开Sublime text，然后点击菜单Help-&gt;Enter Lisence<br>输入以下内容</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/Olvi73/Blog-Photo/raw/master/Sublime%20Text%203.png" alt></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
      </tags>
  </entry>
  <entry>
    <title>【AcWing】77. 翻转单词顺序</title>
    <url>/p/63ce.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/73/" target="_blank" rel="noopener">77. 翻转单词顺序</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
<li>反向输出</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="模拟遍历"><a href="#模拟遍历" class="headerlink" title="模拟遍历"></a>模拟遍历</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">reverseWords</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">        <span class="built_in">string</span> a=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> m=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]!=<span class="string">' '</span>) a+=s[i];</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                v.push_back(a);</span><br><span class="line">                a=<span class="string">""</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        v.push_back(a);</span><br><span class="line">        a=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> n=v.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            a+=v[i]+<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a+=v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="yxc"><a href="#yxc" class="headerlink" title="yxc"></a>yxc</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">reverseWords</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        reverse(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i ++ ) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; s[j] != <span class="string">' '</span>) j ++ ;</span><br><span class="line">            reverse(s.<span class="built_in">begin</span>() + i, s.<span class="built_in">begin</span>() + j);</span><br><span class="line">            i = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>AcWing</tag>
        <tag>字符串</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【AcWing】92. 递归实现指数型枚举</title>
    <url>/p/f12e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/94/" target="_blank" rel="noopener">92. 递归实现指数型枚举</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>位运算</li>
</ol>
<h5 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(state&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line"><span class="comment">//右移i位，与上1，判断第i位是否使用</span></span><br></pre></td></tr></table></figure>

<p>5=101<br>5&gt;&gt;1&amp;1=0 </p>
<p>7=111<br>7&gt;&gt;1&amp;1=1</p>
<h5 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">dfs(u+<span class="number">1</span>,state|<span class="number">1</span>&lt;&lt;u);</span><br><span class="line"><span class="comment">//state或1，左移u位,表示第i位被使用</span></span><br></pre></td></tr></table></figure>

<p>2=10<br>2|1&lt;&lt;2=6=110  </p>
<p>6|1&lt;&lt;3=14=1110</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="keyword">if</span>(state&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(u+<span class="number">1</span>,state);</span><br><span class="line">    dfs(u+<span class="number">1</span>,state|<span class="number">1</span>&lt;&lt;u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】131. 分割回文串</title>
    <url>/p/b65c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/palindrome-partitioning/" target="_blank" rel="noopener">131. 分割回文串</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li><p>利用dp动态规划判断所有子集是否为回文串</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i][j]=(s[i]==s[j])&amp;&amp;f[i+<span class="number">1</span>][j<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>dfs/回溯遍历所有结果，将正确的结果保存到<code>ret</code>中</p>
</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><code>s.substr(pos, n)</code> pos:位置 n:长度</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; f;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt; ret;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; ans;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==n)</span><br><span class="line">        &#123;</span><br><span class="line">            ret.push_back(ans);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(f[i][j])</span><br><span class="line">            &#123;</span><br><span class="line">                ans.push_back(s.substr(i,j-i+<span class="number">1</span>));</span><br><span class="line">                dfs(s,j+<span class="number">1</span>);</span><br><span class="line">                ans.pop_back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt; <span class="title">partition</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        n = s.<span class="built_in">size</span>();</span><br><span class="line">        f.assign(n, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n, <span class="literal">true</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=(s[i]==s[j])&amp;&amp;f[i+<span class="number">1</span>][j<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(s,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>DFS</tag>
        <tag>回溯</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】1178. 猜字谜</title>
    <url>/p/7a83.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/number-of-valid-words-for-each-puzzle/" target="_blank" rel="noopener">1178. 猜字谜</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>位运算<ul>
<li>移位运算 <ul>
<li><strong>&gt;&gt;</strong> 右移</li>
<li><strong>&lt;&lt;</strong> 左移</li>
</ul>
</li>
<li>或 <strong>|</strong> <strong>or</strong>  </li>
<li>与 <strong>&amp;</strong> <strong>and</strong></li>
<li>异或 <strong>^</strong> <strong>xor</strong></li>
</ul>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">101010      101010      101010</span><br><span class="line">011100 &amp;    011100 |	011100 ^</span><br><span class="line">--------------------------------</span><br><span class="line">001000      111110      110110</span><br></pre></td></tr></table></figure>

<p>第一步：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">string</span>&amp; <span class="keyword">word</span>: words) &#123;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> ch: <span class="keyword">word</span>) &#123;</span><br><span class="line">        mask |= (<span class="number">1</span> &lt;&lt; (ch - <span class="string">'a'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (__builtin_popcount(mask) &lt;= <span class="number">7</span>) &#123;</span><br><span class="line">        ++frequency[mask];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>枚举words的每个word，将出现过的字母放在一个最大长度为26的二进制数上，出现过的第 $i$ 个字母，则将它所在的位置标记1，通过或运算除重。利用<code>__builtin_popcount</code>统计这个二进制数<code>mask</code>上有多少个1，因为<code>puzzles[i].length == 7</code>，所以<code>mask</code>出现1的次数最多不能超过7次。</p>
<p>第二步：<br>枚举所有子集作为谜面的谜底数量</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sub = k;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    sub = (sub - <span class="number">1</span>) &amp; k;</span><br><span class="line">&#125; <span class="keyword">while</span>(sub != k);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>判断条件<code>sub!=k</code> ，最后一次循环时<code>sub=-1</code>而<code>-1&amp;k=k</code><br>因为负数用补码储存<br>1的二进制 是0000 0001<br>-1的原码:1000 0001<br>反码:1111 1110<br>补码:1111 1111<br>所以-1使用的时候为1111 1111</p>
</blockquote>
<p>例如k = 10101的二进制子集有:<br>10101<br>10100<br>10001<br>10000<br>00101<br>00100<br>00001<br>00000</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> sub = k;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    sub = (sub - <span class="number">1</span>) &amp; k;</span><br><span class="line">    <span class="comment">// 首字母必须出现</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="number">1</span> &lt;&lt; (puzzle[<span class="number">0</span>] - <span class="string">'a'</span>)) &amp; sub)</span><br><span class="line">        ret[i] += count[sub];</span><br><span class="line">&#125; <span class="keyword">while</span> (sub != k);</span><br></pre></td></tr></table></figure>

<p><code>count</code>为上一步的<code>frequency</code>，<code>sub</code>为当前枚举的子集，如果<code>words</code>中有这个子集，<code>ans+=count[sub]</code>，否则相当于<code>ans+=0</code>，输出<code>ans</code></p>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://blog.csdn.net/a1351937368/article/details/77746574/" target="_blank" rel="noopener">位运算</a></li>
<li><code>__builtin_popcount</code>函数手动实现  <a href="https://leetcode-cn.com/problems/counting-bits/" target="_blank" rel="noopener">338. 比特位计数
</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">findNumOfValidWords</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; words, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; puzzles)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; frequency;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">string</span>&amp; <span class="keyword">word</span>: words) &#123;</span><br><span class="line">            <span class="keyword">int</span> mask = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> ch: <span class="keyword">word</span>) &#123;</span><br><span class="line">                mask |= (<span class="number">1</span> &lt;&lt; (ch - <span class="string">'a'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (__builtin_popcount(mask) &lt;= <span class="number">7</span>) &#123;</span><br><span class="line">                ++frequency[mask];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">string</span>&amp; puzzle: puzzles) &#123;</span><br><span class="line">            <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 枚举子集方法一</span></span><br><span class="line">            <span class="comment">// for (int choose = 0; choose &lt; (1 &lt;&lt; 6); ++choose) &#123;</span></span><br><span class="line">            <span class="comment">//     int mask = 0;</span></span><br><span class="line">            <span class="comment">//     for (int i = 0; i &lt; 6; ++i) &#123;</span></span><br><span class="line">            <span class="comment">//         if (choose &amp; (1 &lt;&lt; i)) &#123;</span></span><br><span class="line">            <span class="comment">//             mask |= (1 &lt;&lt; (puzzle[i + 1] - 'a'));</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">//     mask |= (1 &lt;&lt; (puzzle[0] - 'a'));</span></span><br><span class="line">            <span class="comment">//     if (frequency.count(mask)) &#123;</span></span><br><span class="line">            <span class="comment">//         total += frequency[mask];</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 枚举子集方法二</span></span><br><span class="line">            <span class="keyword">int</span> mask = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; ++i) &#123;</span><br><span class="line">                mask |= (<span class="number">1</span> &lt;&lt; (puzzle[i] - <span class="string">'a'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> subset = mask;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> s = subset | (<span class="number">1</span> &lt;&lt; (puzzle[<span class="number">0</span>] - <span class="string">'a'</span>));</span><br><span class="line">                <span class="keyword">if</span> (frequency.count(s)) &#123;</span><br><span class="line">                    total += frequency[s];</span><br><span class="line">                &#125;</span><br><span class="line">                subset = (subset - <span class="number">1</span>) &amp; mask;</span><br><span class="line">            &#125; <span class="keyword">while</span> (subset != mask);</span><br><span class="line">            </span><br><span class="line">            ans.push_back(total);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><a href="https://leetcode-cn.com/problems/number-of-valid-words-for-each-puzzle/solution/zhi-dao-liao-ru-he-mei-ju-yi-ge-er-jin-z-2rph/" target="_blank" rel="noopener">题解2</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">findNumOfValidWords</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; words, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; puzzles)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; count;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">string</span> &amp;<span class="keyword">word</span>: words) &#123;</span><br><span class="line">            <span class="keyword">int</span> mask = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> ch : <span class="keyword">word</span>)</span><br><span class="line">                mask |= (<span class="number">1</span> &lt;&lt; (ch - <span class="string">'a'</span>));</span><br><span class="line">            ++count[mask];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> n = puzzles.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">ret</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">string</span> &amp;puzzle = puzzles[i];</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> ch: puzzle) &#123;</span><br><span class="line">                k |= (<span class="number">1</span> &lt;&lt; (ch - <span class="string">'a'</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> sub = k;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                sub = (sub - <span class="number">1</span>) &amp; k;</span><br><span class="line">                <span class="comment">// 首字母必须出现</span></span><br><span class="line">                <span class="keyword">if</span> ((<span class="number">1</span> &lt;&lt; (puzzle[<span class="number">0</span>] - <span class="string">'a'</span>)) &amp; sub)</span><br><span class="line">                    ret[i] += count[sub];</span><br><span class="line">            &#125; <span class="keyword">while</span> (sub != k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>位运算</tag>
        <tag>二进制状态压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】1047. 删除字符串中的所有相邻重复项</title>
    <url>/p/7b95.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string/" target="_blank" rel="noopener">1047. 删除字符串中的所有相邻重复项</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>栈思想<br>遍历该字符串，如果当前字符和栈顶字符相同，就将其消去，否则就将其入栈即可。</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> stk;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> ch : S) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!stk.empty() &amp;&amp; stk.back() == ch) &#123;</span><br><span class="line">                stk.pop_back();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stk.push_back(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>栈</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】1423. 可获得的最大点数</title>
    <url>/p/3f6a.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/maximum-points-you-can-obtain-from-cards/" target="_blank" rel="noopener">1423. 可获得的最大点数</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h5 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h5><p>逆向思维，记数组 $cardPoints$ 的长度为 $n$，由于只能从开头和末尾拿 $k$ 张卡牌，所以最后剩下的必然是连续的 $n-k$ 张卡牌。<br>我们可以通过求出剩余卡牌点数之和的最小值，来求出拿走卡牌点数之和的最大值。</p>
<p><strong>算法</strong><br>由于剩余卡牌是连续的，使用一个固定长度为 $n-k$ 的滑动窗口对数组 $cardPoints$ 进行遍历，求出滑动窗口最小值，然后用所有卡牌的点数之和减去该最小值，即得到了拿走卡牌点数之和的最大值。</p>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://blog.csdn.net/qq_40803710/article/details/80273811" target="_blank" rel="noopener">accumulate函数</a><br><code>int sum = accumulate(cardPoints.begin(), cardPoints.begin() + windowSize, 0);</code></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="滑动窗口-1"><a href="#滑动窗口-1" class="headerlink" title="滑动窗口"></a>滑动窗口</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxScore</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cardPoints, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = cardPoints.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// 滑动窗口大小为 n-k</span></span><br><span class="line">        <span class="keyword">int</span> windowSize = n - k;</span><br><span class="line">        <span class="comment">// 选前 n-k 个作为初始值</span></span><br><span class="line">        <span class="keyword">int</span> sum = accumulate(cardPoints.<span class="built_in">begin</span>(), cardPoints.<span class="built_in">begin</span>() + windowSize, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> minSum = sum;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = windowSize; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">// 滑动窗口每向右移动一格，增加从右侧进入窗口的元素值，并减少从左侧离开窗口的元素值</span></span><br><span class="line">            sum += cardPoints[i] - cardPoints[i - windowSize];</span><br><span class="line">            minSum = <span class="built_in">min</span>(minSum, sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> accumulate(cardPoints.<span class="built_in">begin</span>(), cardPoints.<span class="built_in">end</span>(), <span class="number">0</span>) - minSum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>滑动窗口</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】1800. 最大升序子数组和</title>
    <url>/p/7af5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/maximum-ascending-subarray-sum/" target="_blank" rel="noopener">第233场周赛 1800. 最大升序子数组和</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>动态规划</li>
<li>前缀和</li>
<li>滑动窗口<ul>
<li><code>accumulate</code> <a href="https://olvi73.github.io/p/c99.html">【LeetCode】5691. 通过最少操作次数使数组的和相等</a></li>
</ul>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="前缀和、动态规划"><a href="#前缀和、动态规划" class="headerlink" title="前缀和、动态规划"></a>前缀和、动态规划</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxAscendingSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(nums)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;nums[i<span class="number">-1</span>]) ans[i]+=ans[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *max_element(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxAscendingSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>(), l = <span class="number">0</span>, r = <span class="number">1</span>, ans = INT_MIN;</span><br><span class="line">        <span class="keyword">while</span>(r &lt; n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[r] &gt; nums[r - <span class="number">1</span>])&#123;<span class="comment">// 单调递增</span></span><br><span class="line">                r++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> sum = accumulate(nums.<span class="built_in">begin</span>() + l, nums.<span class="built_in">begin</span>() + r, <span class="number">0</span>); <span class="comment">// 出现拐点就计算和</span></span><br><span class="line">            ans = <span class="built_in">max</span>(ans, sum);</span><br><span class="line">            l = r;</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sum = accumulate(nums.<span class="built_in">begin</span>() + l, nums.<span class="built_in">end</span>(), <span class="number">0</span>); <span class="comment">// 计算和</span></span><br><span class="line">        </span><br><span class="line">        ans = <span class="built_in">max</span>(ans, sum);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>dp</tag>
        <tag>滑动窗口</tag>
        <tag>前缀和</tag>
        <tag>accumulate</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】300. 最长递增子序列</title>
    <url>/p/15f7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/" target="_blank" rel="noopener">300. 最长递增子序列</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>dp</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://leetcode-cn.com/problems/russian-doll-envelopes/" target="_blank" rel="noopener">354. 俄罗斯套娃信封问题</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[j]&lt;nums[i])</span><br><span class="line">                dp[i]=<span class="built_in">max</span>(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *max_element(dp.<span class="built_in">begin</span>(),dp.<span class="built_in">end</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">dp</span><span class="params">(n,<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[j]&lt;nums[i])</span><br><span class="line">                dp[i]=<span class="built_in">max</span>(dp[i],dp[j]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *max_element(dp.<span class="built_in">begin</span>(),dp.<span class="built_in">end</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】304. 二维区域和检索 - 矩阵不可变</title>
    <url>/p/8b96.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/" target="_blank" rel="noopener">304. 二维区域和检索 - 矩阵不可变</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>二维前缀和</li>
<li>vector容器初始化<ul>
<li><a href="https://blog.csdn.net/veghlreywg/article/details/80400382" target="_blank" rel="noopener">一维</a> <code>sums.resize(n+1)</code></li>
<li><a href="https://blog.csdn.net/wang13342322203/article/details/94323165" target="_blank" rel="noopener">二维</a> <code>sums.resize(m+1, vector&lt;int&gt;(n + 1));</code></li>
</ul>
</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>二维前缀和模板 <a href="https://olvi73.github.io/p/7df7.html">Day23 AcWing 126. 最大的和</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumMatrix</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; sums;</span><br><span class="line">    NumMatrix(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(m&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> n=matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">            sums.resize(m+<span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) </span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n; j++)</span><br><span class="line">                    sums[i+<span class="number">1</span>][j+<span class="number">1</span>]=matrix[i][j]+sums[i][j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sumRegion</span><span class="params">(<span class="keyword">int</span> row1, <span class="keyword">int</span> col1, <span class="keyword">int</span> row2, <span class="keyword">int</span> col2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=col1+<span class="number">1</span>;k&lt;=col2+<span class="number">1</span>;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            s+=sums[row2+<span class="number">1</span>][k]-sums[row1][k];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>前缀和</tag>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】338. 比特位计数</title>
    <url>/p/8d18.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/counting-bits/" target="_blank" rel="noopener">338. 比特位计数</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>位运算</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><code>__builtin_popcount</code>的使用<br><a href="https://leetcode-cn.com/problems/number-of-valid-words-for-each-puzzle/" target="_blank" rel="noopener">1178. 猜字谜</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">countBits</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> temp=i;</span><br><span class="line">            <span class="keyword">while</span>(temp&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp&amp;=(temp<span class="number">-1</span>);</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans.push_back(cnt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】440. 字典序的第K小数字</title>
    <url>/p/3507.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/" target="_blank" rel="noopener">440. 字典序的第K小数字</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>画出字典树<br><img src="https://pic.leetcode-cn.com/9c7103ec5d2ffc01db37ee4448c58fb1150c628ba89121fa682343ff4c3a99c4-879aa52f0790db5c05c602e19e6fc5fdd9cf6cd823f10cae8fee2d8d06b40945-%E6%88%AA%E5%B1%8F2020-05-09%20%E4%B8%8A%E5%8D%8811.47.44.png" alt="字典树"></li>
<li>k表示要找到后面的第k个元素，起始下标是0</li>
<li>获取以prefix开头的数字个数，包括他本身<ul>
<li>如果数字个数大于k，下移，在prefix*10下的子树进行查找</li>
<li>如果数字个数小于等于k，右移，在prefix+1下的子树进行查找</li>
</ul>
</li>
</ol>
<p>问题的关键是求解 以prefix开头的数字个数，包括他本身</p>
<ul>
<li>根节点 <code>[prefix, prefix+1 )</code></li>
<li>第一层 <code>[prefix*10, (prefix+1)*10 )</code></li>
<li>第二层 <code>[prefix*100, min(n+1, (prefix+1)*100) )</code></li>
<li>…</li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findKthNumber</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> prefix = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//扣除掉第一个0节点</span></span><br><span class="line">        k--; <span class="comment">// k记录要找的数字在prefix后的第几个</span></span><br><span class="line">        <span class="keyword">while</span> (k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt = getCnt(n, prefix); <span class="comment">// 当前prefix 下有多少个元素;包含prefix</span></span><br><span class="line">            <span class="keyword">if</span> (cnt &lt;= k) &#123; <span class="comment">// 向右 第k个数不在以prefix为根节点的树上</span></span><br><span class="line">                k -= cnt;</span><br><span class="line">                prefix++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// 向下 在子树中</span></span><br><span class="line">                k--; <span class="comment">//刨除根节点</span></span><br><span class="line">                prefix*=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getCnt</span><span class="params">(LL n, LL prefix)</span></span>&#123;</span><br><span class="line">        LL cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (LL first = prefix, second = prefix+<span class="number">1</span>; first&lt;=n; first*=<span class="number">10</span>, second*=<span class="number">10</span>)&#123;</span><br><span class="line">            cnt+= <span class="built_in">min</span>(n + <span class="number">1</span>, second) - first;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>字典序</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】354. 俄罗斯套娃信封问题</title>
    <url>/p/ccb2.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/russian-doll-envelopes/" target="_blank" rel="noopener">354. 俄罗斯套娃信封问题</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>使用lambda表达式重载运算符</li>
<li>dp</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/" target="_blank" rel="noopener">300. 最长递增子序列</a></li>
<li><code>const auto&amp;</code>只读取不修改<br><code>auto&amp;</code>读取，可修改</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxEnvelopes</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; envelopes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (envelopes.empty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> n = envelopes.<span class="built_in">size</span>();</span><br><span class="line">        sort(envelopes.<span class="built_in">begin</span>(), envelopes.<span class="built_in">end</span>(), [](<span class="keyword">const</span> <span class="keyword">auto</span>&amp; e1, <span class="keyword">const</span> <span class="keyword">auto</span>&amp; e2) &#123;</span><br><span class="line">            <span class="keyword">if</span>(e1[<span class="number">0</span>]==e2[<span class="number">0</span>]) <span class="keyword">return</span> e1[<span class="number">1</span>]&gt;e2[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">return</span> e1[<span class="number">0</span>] &lt; e2[<span class="number">0</span>];</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">f</span><span class="params">(n, <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (envelopes[j][<span class="number">1</span>] &lt; envelopes[i][<span class="number">1</span>]) &#123;</span><br><span class="line">                    f[i] = <span class="built_in">max</span>(f[i], f[j] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *max_element(f.<span class="built_in">begin</span>(), f.<span class="built_in">end</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
        <tag>重载运算符</tag>
        <tag>lambda表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】495. 提莫攻击</title>
    <url>/p/53b4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/teemo-attacking/" target="_blank" rel="noopener">495. 提莫攻击</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>数组遍历</li>
</ol>
<p>考虑相邻两个攻击时间点<code>A[i]</code>和<code>A[i+1]</code>以及中毒时间<code>t</code>。<br>如果<code>A[i]+t&lt;=A[i+1]</code>，那么在第<code>i+1</code>次攻击时，第<code>i</code>次攻击造成的中毒的持续时间已经结束，即持续时间为<code>t</code><br>如果<code>A[i]+t&gt;A[i+1]</code>，那么在第<code>i+1</code>次攻击时，第<code>i</code>次攻击的中毒仍在持续，由于中毒状态不能叠加，因此持续时间为<code>A[i+1]-A[i]</code>。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findPoisonedDuration</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; timeSeries, <span class="keyword">int</span> duration)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=timeSeries.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">          total += <span class="built_in">min</span>(timeSeries[i + <span class="number">1</span>] - timeSeries[i], duration);</span><br><span class="line">        <span class="keyword">return</span> total + duration;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】54. 螺旋矩阵</title>
    <url>/p/9cce.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">54. 螺旋矩阵</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>偏移量技巧</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">输出：[1,2,3,6,9,8,7,4,5]</span><br></pre></td></tr></table></figure>

<p><img src="https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg" alt="matrix"></p>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/758/" target="_blank" rel="noopener">【每日一题3】AcWing 756. 蛇形矩阵</a></li>
<li><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/" target="_blank" rel="noopener">59. 螺旋矩阵 II</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">spiralOrder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n=matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">int</span> f[<span class="number">15</span>][<span class="number">15</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, d = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n * m; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            ans.push_back(matrix[x][y]);</span><br><span class="line">            f[x][y]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> a = x + dx[d], b = y + dy[d];</span><br><span class="line">            <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt;= m || b &lt; <span class="number">0</span> || b &gt;= n || f[a][b])</span><br><span class="line">            &#123;</span><br><span class="line">                d = (d + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">                a = x + dx[d], b = y + dy[d];</span><br><span class="line">            &#125;</span><br><span class="line">            x = a, y = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>模拟</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>偏移量技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5691. 通过最少操作次数使数组的和相等</title>
    <url>/p/c99.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/equal-sum-arrays-with-minimum-number-of-operations/" target="_blank" rel="noopener">5691. 通过最少操作次数使数组的和相等</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h5 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h5><p>设 $s1$ 和 $s2$ 分别是数组 $nums1$ 和 $nums2$ 的和。同时，保证 $s1&lt;s2$  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (sum1 &gt; sum2) &#123;</span><br><span class="line">    <span class="keyword">return</span> minOperations(nums2, nums1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为保证操作次数最小，应该尽量增加 $nums1$ 中元素的值，同时尽量减少 $nums2$ 中元素的值，因此：</p>
<ul>
<li><p>$nums1$ 的每个元素$x$可以增加的量为 $6-x \in [0,5]$</p>
</li>
<li><p>$nums2$ 的每个元素$x$可以减少的量为 $x-1 \in [0,5]$</p>
<p>记 $diff=s2-s1$，让 $nums1$ 中元素增加的值和 $nums2$ 中元素减少的值之和大于等于 $diff$ 。所以从数值5开始增加/减少量开始递减选取。</p>
</li>
</ul>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://blog.csdn.net/qq_40803710/article/details/80273811" target="_blank" rel="noopener">accumulate累加求和</a></li>
</ol>
<p><code>int sum1 = accumulate(nums1.begin(), nums1.end(), 0);</code><br>accumulate带有三个形参：头两个形参指定要累加的元素范围，第三个形参则是累加的初值。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minOperations</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum1 = accumulate(nums1.<span class="built_in">begin</span>(), nums1.<span class="built_in">end</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> sum2 = accumulate(nums2.<span class="built_in">begin</span>(), nums2.<span class="built_in">end</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (sum1 == sum2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum1 &gt; sum2) &#123;</span><br><span class="line">            <span class="keyword">return</span> minOperations(nums2, nums1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> diff = sum2 - sum1;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">freq</span><span class="params">(<span class="number">6</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num: nums1) &#123;</span><br><span class="line">            ++freq[<span class="number">6</span> - num];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num: nums2) &#123;</span><br><span class="line">            ++freq[num - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &gt;= <span class="number">1</span> &amp;&amp; diff &gt; <span class="number">0</span>; --i) &#123;</span><br><span class="line">            <span class="keyword">while</span> (freq[i] &amp;&amp; diff &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                ++ans;</span><br><span class="line">                --freq[i];</span><br><span class="line">                diff -= i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (diff &gt; <span class="number">0</span> ? <span class="number">-1</span> : ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>accumulate</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5690. 最接近目标价格的甜点成本</title>
    <url>/p/99ec.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/closest-dessert-cost/" target="_blank" rel="noopener">5690. 最接近目标价格的甜点成本</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>位运算</li>
<li>二进制状态压缩</li>
<li>暴力枚举</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">101010      101010      101010</span><br><span class="line">011100 &amp;    011100 |	011100 ^</span><br><span class="line">--------------------------------</span><br><span class="line">001000      111110      110110</span><br></pre></td></tr></table></figure>

<h5 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h5><p>枚举<code>baseCosts[i]</code>，表示选定一种基料</p>
<h5 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h5><blockquote>
<p>每种类型的配料<strong>最多两份</strong>。  </p>
</blockquote>
<p>压缩至二进制状态<code>1&lt;&lt;m</code>，压缩至四进制状态<code>1&lt;&lt;m *2</code><br>$4^m=2^{m*2}$<br>以四进制来储存所有配料选择的状态，如有两种配料  </p>
<table>
<thead>
<tr>
<th>配料种类</th>
<th>状态</th>
<th>二进制状态</th>
<th>十进制状态</th>
</tr>
</thead>
<tbody><tr>
<td>配料1</td>
<td>0 份</td>
<td>00</td>
<td>0</td>
</tr>
<tr>
<td>配料1</td>
<td>1 份</td>
<td>01</td>
<td>1</td>
</tr>
<tr>
<td>配料1</td>
<td>2 份</td>
<td>10</td>
<td>2</td>
</tr>
<tr>
<td>配料1</td>
<td>3 份(无效状态)</td>
<td>11</td>
<td>3</td>
</tr>
<tr>
<td>配料2</td>
<td>0 份</td>
<td>00</td>
<td>0</td>
</tr>
<tr>
<td>配料2</td>
<td>1 份</td>
<td>01</td>
<td>1</td>
</tr>
<tr>
<td>配料2</td>
<td>2 份</td>
<td>10</td>
<td>2</td>
</tr>
<tr>
<td>配料2</td>
<td>3 份(无效状态)</td>
<td>11</td>
<td>3</td>
</tr>
</tbody></table>
<p><code>int t = j &gt;&gt; k * 2 &amp; 3;</code><br>如 00<strong>11</strong>00 判断第$k$种配料是否是无效状态，一种配料占两个位置，做位运算<code>&amp;3</code>，因为<code>bin(3)=0xb11</code>  </p>
<p>无效状态直接跳过，继续枚举</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (t == <span class="number">3</span>) &#123;</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="keyword">continue</span>;</span><br></pre></td></tr></table></figure>

<h5 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h5><p>判断最接近<code>target</code>的甜点成本<code>res</code></p>
<ol>
<li><code>r</code>对<code>target</code>的绝对值比<code>res</code>小</li>
<li>绝对值相同，但是<code>r</code>的值更小</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://blog.csdn.net/a1351937368/article/details/77746574/" target="_blank" rel="noopener">位运算</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">closestCost</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; a, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; b, <span class="keyword">int</span> T)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = INT_MAX;</span><br><span class="line">        <span class="keyword">int</span> n = a.<span class="built_in">size</span>(), m = b.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">int</span> s = a[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1</span> &lt;&lt; m * <span class="number">2</span>; j ++ ) &#123;</span><br><span class="line">                <span class="keyword">int</span> r = s;</span><br><span class="line">                <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m; k ++ ) &#123;</span><br><span class="line">                    <span class="keyword">int</span> t = j &gt;&gt; k * <span class="number">2</span> &amp; <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">if</span> (t == <span class="number">3</span>) &#123;</span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    r += b[k] * t;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (flag) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(r - T) &lt; <span class="built_in">abs</span>(res - T) || <span class="built_in">abs</span>(r - T) == <span class="built_in">abs</span>(res - T) &amp;&amp; r &lt; res)</span><br><span class="line">                    res = r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>位运算</tag>
        <tag>二进制状态压缩</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5697. 检查二进制字符串字段</title>
    <url>/p/c081.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones/" target="_blank" rel="noopener">第231场周赛 5697. 检查二进制字符串字段</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><blockquote>
<p><strong>不含前导零</strong></p>
</blockquote>
<ol>
<li>第一个数必是<code>1</code>，所以从第二个数开始，出现数字<code>0</code>后就不能再出现<code>1</code></li>
<li>统计数字<code>1</code>的个数，和最长<code>1</code>的子串比较，两者等于则符合要求</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkOnesSegment</span><span class="params">(<span class="built_in">string</span> s)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;      </span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (s[i<span class="number">-1</span>]==<span class="string">'0'</span> &amp;&amp; s[i]==<span class="string">'1'</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//内存消耗：6 MB</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkOnesSegment</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]-<span class="string">'0'</span>==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">                cnt++;</span><br><span class="line">                res=<span class="built_in">max</span>(cnt,res);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num&gt;res) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5698. 构成特定和需要添加的最少元素、</title>
    <url>/p/f3ea.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/minimum-elements-to-add-to-form-a-given-sum/" target="_blank" rel="noopener">第231场周赛 5698. 构成特定和需要添加的最少元素</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>算出原数组与 $goal$ 的差值。</li>
<li>用 $limit$ 填补这个差值，计算次数</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 136 ms</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minElements</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> limit, <span class="keyword">int</span> goal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> preSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123;</span><br><span class="line">            preSum += nums[ i ];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> rest = goal - preSum;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="built_in">abs</span>(rest) % limit == <span class="number">0</span>)</span><br><span class="line">            count = ( <span class="built_in">abs</span>(rest) / limit );</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            count = <span class="number">1</span> + ( <span class="built_in">abs</span>(rest) / limit );</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 212 ms</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minElements</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> limit, <span class="keyword">int</span> goal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> i:nums)</span><br><span class="line">        &#123;</span><br><span class="line">            s+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> target=<span class="built_in">abs</span>(goal-s);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=limit;i;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(target)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line">                temp=target;</span><br><span class="line">                <span class="keyword">if</span>(target/i&gt;<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    target%=i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(target&gt;=<span class="number">0</span>) res+=temp/i;</span><br><span class="line">                <span class="keyword">if</span>(target&lt;i)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(target==<span class="number">0</span>) <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5702. 找出星型图的中心节点</title>
    <url>/p/1cbb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/find-center-of-star-graph/" target="_blank" rel="noopener">第232场周赛 5702. 找出星型图的中心节点</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>找规律<br>除中心节点外，其他点只会出现1次</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findCenter</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; edges)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=edges.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">100010</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(++cnt[edges[i][<span class="number">0</span>]]&gt;<span class="number">1</span>) <span class="keyword">return</span> edges[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span>(++cnt[edges[i][<span class="number">1</span>]]&gt;<span class="number">1</span>) <span class="keyword">return</span> edges[i][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5703. 最大平均通过率</title>
    <url>/p/b043.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/maximum-average-pass-ratio/" target="_blank" rel="noopener">第232场周赛 5703. 最大平均通过率</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li><a href="https://www.acwing.com/problem/" target="_blank" rel="noopener">多路归并</a></li>
<li>优先队列  </li>
</ol>
<p>$$\frac{b+1}{a+1} - \frac{b}{a} = \frac{a-b}{a(a+1)}$$</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">maxAverageRatio</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; classes, <span class="keyword">int</span> extraStudents)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">            <span class="keyword">double</span> v;</span><br><span class="line">            <span class="keyword">int</span> a, b;</span><br><span class="line">            <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Node&amp; t) <span class="keyword">const</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> v &lt; t.v;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        priority_queue&lt;Node&gt; heap;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; c: classes) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = c[<span class="number">1</span>], b = c[<span class="number">0</span>];</span><br><span class="line">            sum += (<span class="keyword">double</span>)b / a;</span><br><span class="line">            heap.push(&#123;(a - b) / (a * (a + <span class="number">1.0</span>)), a, b&#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (extraStudents -- ) &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = heap.top();</span><br><span class="line">            heap.pop();</span><br><span class="line">            sum += t.v;</span><br><span class="line">            <span class="keyword">int</span> a = t.a + <span class="number">1</span>, b = t.b + <span class="number">1</span>;</span><br><span class="line">            heap.push(&#123;(a - b) / (a * (a + <span class="number">1.0</span>)), a, b&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum / classes.<span class="built_in">size</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>多路归并</tag>
        <tag>队列</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5704. 好子数组的最大分数</title>
    <url>/p/329c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/maximum-score-of-a-good-subarray/" target="_blank" rel="noopener">第232场周赛 5704. 好子数组的最大分数</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>单调栈</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/133/" target="_blank" rel="noopener">131. 直方图中最大的矩形</a></li>
<li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/" target="_blank" rel="noopener">84. 柱状图中最大的矩形</a></li>
<li><a href="https://www.acwing.com/activity/content/code/content/43105/" target="_blank" rel="noopener">单调栈模板</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maximumScore</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        vector&lt;int&gt; h(n + 2, -1), l(n + 2), r(n + 2), stk(n + 2);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) h[i] = nums[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> tt = <span class="number">0</span>;</span><br><span class="line">        stk[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">while</span> (h[stk[tt]] &gt;= h[i]) tt -- ;</span><br><span class="line">            l[i] = stk[tt];</span><br><span class="line">            stk[ ++ tt] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        tt = <span class="number">0</span>, stk[<span class="number">0</span>] = n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; i -- ) &#123;</span><br><span class="line">            <span class="keyword">while</span> (h[stk[tt]] &gt;= h[i]) tt -- ;</span><br><span class="line">            r[i] = stk[tt];</span><br><span class="line">            stk[ ++ tt] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        k ++ ;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            <span class="keyword">if</span> (l[i] &lt; k &amp;&amp; r[i] &gt; k)</span><br><span class="line">                res = <span class="built_in">max</span>(res, (r[i] - l[i] - <span class="number">1</span>) * h[i]);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>单调栈</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】5701. 仅执行一次字符串交换能否使两个字符串相等</title>
    <url>/p/d80b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/check-if-one-string-swap-can-make-strings-equal/" target="_blank" rel="noopener">第232场周赛 5701. 仅执行一次字符串交换能否使两个字符串相等</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>单次遍历统计所有不同的字符个数</li>
<li>如果统计不同的字符个数为2，将两个字符位置交换后，字符串相等，则输出<code>true</code></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">areAlmostEqual</span><span class="params">(<span class="built_in">string</span> s1, <span class="built_in">string</span> s2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1==s2) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> len=s1.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s1[i]!=s2[i]) </span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                vec.push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt==<span class="number">2</span>&amp;&amp;s2[vec[<span class="number">0</span>]]==s1[vec[<span class="number">1</span>]]&amp;&amp;s2[vec[<span class="number">1</span>]]==s1[vec[<span class="number">0</span>]]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>LeetCode周赛</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】59. 螺旋矩阵 II</title>
    <url>/p/fc6d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/spiral-matrix-ii/" target="_blank" rel="noopener">59. 螺旋矩阵 II</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>偏移量技巧</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：n = 3</span><br><span class="line">输出：[[1,2,3],[8,9,4],[7,6,5]]</span><br></pre></td></tr></table></figure>

<p><img src="https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg" alt="matrix"></p>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/758/" target="_blank" rel="noopener">【每日一题3】AcWing 756. 蛇形矩阵</a></li>
<li><a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">54. 螺旋矩阵</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">generateMatrix</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="title">matrix</span><span class="params">(n,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n,<span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, d = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n * n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            matrix[x][y]=cnt;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">int</span> a = x + dx[d], b = y + dy[d];</span><br><span class="line">            <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt;= n || b &lt; <span class="number">0</span> || b &gt;= n || matrix[a][b])</span><br><span class="line">            &#123;</span><br><span class="line">                d = (d + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">                a = x + dx[d], b = y + dy[d];</span><br><span class="line">            &#125;</span><br><span class="line">            x = a, y = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> matrix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>模拟</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>偏移量技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】665. 非递减数列</title>
    <url>/p/25ac.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/non-decreasing-array/" target="_blank" rel="noopener">665. 非递减数列</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h4 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h4><p>输入 <code>[3,4,2,3]</code><br>输出 <code>false</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkPossibility</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.<span class="built_in">size</span>()<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;nums[i+<span class="number">1</span>])   c++;</span><br><span class="line">            <span class="keyword">if</span>(c&gt;<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://blog.csdn.net/qq_45228537/article/details/100210480" target="_blank" rel="noopener">is_sorted()</a>：判断函数是否被排序好，默认升序，C++11特性  </li>
<li>sort()：将函数进行排序处理，默认升序</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//优化后只遍历一次nums数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkPossibility</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>(), cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = nums[i], y = nums[i + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; y &lt; nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                    nums[i + <span class="number">1</span>] = x;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//未优化，多次遍历nums数组</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">checkPossibility</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = nums[i], y = nums[i + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">                nums[i] = y;</span><br><span class="line">                <span class="keyword">if</span> (is_sorted(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                nums[i] = x; <span class="comment">// 复原</span></span><br><span class="line">                nums[i + <span class="number">1</span>] = x;</span><br><span class="line">                <span class="keyword">return</span> is_sorted(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>is_sorted</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】766. 托普利茨矩阵</title>
    <url>/p/a21b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/toeplitz-matrix/" target="_blank" rel="noopener">766. 托普利茨矩阵</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>遍历</li>
<li>判断每个元素和它右下角的元素相等</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>1.<a href="https://www.acwing.com/problem/content/756/" target="_blank" rel="noopener">AcWing 754. 平方矩阵 II</a></p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isToeplitzMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>(), n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (matrix[i][j] != matrix[i - <span class="number">1</span>][j - <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】832. 翻转图像</title>
    <url>/p/91a0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/flipping-an-image/" target="_blank" rel="noopener">832. 翻转图像</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>找规律</li>
<li>异或</li>
</ol>
<p>情况一：A[$i$][$left$]=0,A[$i$][$right$]=0。对第 $i$ 行进行水平翻转之后，A[$i$][$left$]=0,A[$i$][$right$]=0。进行反转之后，A[$i$][$left$]=1,A[$i$][$right$]=1。</p>
<p>情况二：A[$i$][$left$]=1,A[$i$][$right$]=1。对第 $i$ 行进行水平翻转之后，A[$i$][$left$]=1,A[$i$][$right$]=1。进行反转之后，A[$i$][$left$]=0,A[$i$][$right$]=0。</p>
<p>情况三：A[$i$][$left$]=0,A[$i$][$right$]=1。对第 $i$ 行进行水平翻转之后，A[$i$][$left$]=1,A[$i$][$right$]=0。进行反转之后，A[$i$][$left$]=0,A[$i$][$right$]=1。</p>
<p>情况四：A[$i$][$left$]=1,A[$i$][$right$]=0。对第 $i$ 行进行水平翻转之后，A[$i$][$left$]=0,A[$i$][$right$]=1。进行反转之后，A[$i$][$left$]=1,A[$i$][$right$]=0。</p>
<p>情况一和情况二 元素被反转</p>
<p>情况三和情况四 元素值发生了两次改变，恢复原状</p>
<p>遍历矩阵的每一行。对于矩阵的第 $i$ 行，初始化 $left=0$ 和 $right=n−1$，进行如下操作：  </p>
<ul>
<li><p>当$left&lt;right$,判断A[$i$][$left$]和A[$i$][$right$]是否相等，如果相等则对A[$i$][$left$]和A[$i$][$right$]的值进行反转，如果不相等则不进行任何操作</p>
</li>
<li><p>将 $left$ 的值加1，将 $right$ 的值减1，重复上述操作，直到 $left \ge right$</p>
</li>
<li><p>如果 $n$ 是奇数，则上述操作结束时，$left$ 和 $right$ 的值相等，都指向第 $i$ 行的中间元素，此时需要对中间元素的值进行反转。</p>
</li>
</ul>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>$n$为偶数时，<code>n^=1</code> <code>n=n+1</code> 例：<code>n=0 n^=1 -&gt; n=1</code><br>$n$为奇数时，<code>n^=1</code> <code>n=n-1</code> 例：<code>n=1 n^=1 -&gt; n=0</code>  </li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">flipAndInvertImage</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> left = <span class="number">0</span>, right = n - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">                <span class="keyword">if</span> (A[i][left] == A[i][right]) &#123;</span><br><span class="line">                    A[i][left] ^= <span class="number">1</span>;</span><br><span class="line">                    A[i][right] ^= <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                left++;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">                A[i][left] ^= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>异或</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】896. 单调数列</title>
    <url>/p/ae3c.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/monotonic-array/" target="_blank" rel="noopener">896. 单调数列</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>遍历判断</li>
<li>逻辑运算   <ul>
<li><code>||</code> 如果两个操作数中有任意一个非零，则条件为真</li>
</ul>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="精简版-两次遍历数组，逻辑运算-64ms"><a href="#精简版-两次遍历数组，逻辑运算-64ms" class="headerlink" title="精简版 两次遍历数组，逻辑运算 64ms"></a>精简版 两次遍历数组，逻辑运算 64ms</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMonotonic</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> is_sorted(A.<span class="built_in">begin</span>(), A.<span class="built_in">end</span>()) || is_sorted(A.rbegin(), A.rend());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="一次遍历，逻辑运算-64ms"><a href="#一次遍历，逻辑运算-64ms" class="headerlink" title="一次遍历，逻辑运算 64ms"></a>一次遍历，逻辑运算 64ms</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMonotonic</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> inc = <span class="literal">true</span>, dec = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> n = A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (A[i] &gt; A[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                inc = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (A[i] &lt; A[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                dec = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inc || dec;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="一次遍历，无逻辑运算-88ms"><a href="#一次遍历，无逻辑运算-88ms" class="headerlink" title="一次遍历，无逻辑运算 88ms"></a>一次遍历，无逻辑运算 88ms</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMonotonic</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">size</span>=A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">size</span>==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> last=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">size</span><span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=A[i]-A[i+<span class="number">1</span>];</span><br><span class="line">            <span class="comment">//记录首次出现变化的时候，是递增还是递减</span></span><br><span class="line">            <span class="keyword">if</span>(flag&gt;<span class="number">0</span>&amp;&amp;last==<span class="number">0</span>) last=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(flag&lt;<span class="number">0</span>&amp;&amp;last==<span class="number">0</span>) last=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//出现变化与首次变化不同，则不是单调序列</span></span><br><span class="line">            <span class="keyword">if</span>(flag&gt;<span class="number">0</span>&amp;&amp;last==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(flag&lt;<span class="number">0</span>&amp;&amp;last==<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="一次遍历，无逻辑运算，优化版-72ms"><a href="#一次遍历，无逻辑运算，优化版-72ms" class="headerlink" title="一次遍历，无逻辑运算，优化版 72ms"></a>一次遍历，无逻辑运算，优化版 72ms</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMonotonic</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">size</span>=A.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">size</span>==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> last=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">size</span><span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=A[i]-A[i+<span class="number">1</span>];</span><br><span class="line">            <span class="comment">//记录首次出现变化的时候，是递增还是递减</span></span><br><span class="line">            <span class="keyword">if</span>(last==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(flag&gt;<span class="number">0</span>) last=<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span>(flag&lt;<span class="number">0</span>) last=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//出现变化与首次变化不同，则不是单调序列</span></span><br><span class="line">            <span class="keyword">if</span>(flag&gt;<span class="number">0</span>&amp;&amp;last==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(flag&lt;<span class="number">0</span>&amp;&amp;last==<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>逻辑运算</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】867.转置矩阵</title>
    <url>/p/6438.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://leetcode-cn.com/problems/transpose-matrix/" target="_blank" rel="noopener">867.转置矩阵</a></p>
<a id="more"></a>

<p><img src="https://assets.leetcode.com/uploads/2021/02/10/hint_transpose.png" alt="转置矩阵"></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>数组</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/756/" target="_blank" rel="noopener">【每日一题13】AcWing 754. 平方矩阵 II</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">transpose</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> m=matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">res</span><span class="params">(m, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n, <span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                res[j][i] = matrix[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】163MusicSA-统计你的听歌排行中出现最多的歌词</title>
    <url>/p/2dc9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>163 Music Self Analysis</p>
<a id="more"></a>
<blockquote>
<p>163 Music Self Analysis-通过python爬取听歌排行中的歌词信息，然后对歌词进行处理，最后生成词云或者其他可视化图形，完成分析。<br>参考代码地址：<br><a href="https://github.com/NacedWang/163MusicSpider" target="_blank" rel="noopener">NacedWang/163MusicSpider</a> 基础代码部分<br><a href="https://blog.csdn.net/u010890916/article/details/106879465/" target="_blank" rel="noopener">Samaritan·J</a> 实现爬取个人排行界面  </p>
</blockquote>
<p><del>由于原程序的数据库储存在Mysql中，但是本人之前所学的数据库为Sql Server，所以需要重新学习相关的知识。</del><br><del>多线程运行，可能会触发反爬虫引发其他错误，放弃。</del> <strong>已实现，真香</strong><br><del>为了实现无界面打开网页，寻找其他方法代替selenium</del>   <strong>直接设置<code>Option.headless=True</code>实现无界面打开</strong>  </p>
<h2 id="进度："><a href="#进度：" class="headerlink" title="进度："></a>进度：</h2><ul>
<li><p><strong>2020/10/13</strong>  </p>
<ul>
<li><input checked disabled type="checkbox"> MySql安装</li>
<li><input checked disabled type="checkbox"> 成功爬取个人排行信息到数据库</li>
<li><input checked disabled type="checkbox"> 找到无法click选择所有时间的问题  </li>
</ul>
</li>
<li><p><strong>2020/10/14</strong>  </p>
<ul>
<li><input checked disabled type="checkbox"> 通过歌曲id爬取歌词到数据库</li>
<li><input checked disabled type="checkbox"> 处理歌词信息，除去无用信息</li>
<li><input checked disabled type="checkbox"> 生成词云  </li>
</ul>
</li>
<li><p><strong>2020/10/15</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 正则表达式优化处理歌词代码，比原来的处理更加简单</li>
<li><input checked disabled type="checkbox"> 整合所有模块</li>
</ul>
</li>
<li><p><strong>2020/10/16</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 优化sql模块，去除不需要的方法</li>
<li><input checked disabled type="checkbox"> 调整MySql数据库，将之前测试用的表(如music2)全部改成正式表名(如music)</li>
<li><input checked disabled type="checkbox"> 调整图片输出位置，统一输出到wordcloud文件夹</li>
</ul>
</li>
<li><p><strong>2020/10/17</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 首次使用Pycharm，配置好conda环境</li>
<li><input checked disabled type="checkbox"> 优化数据库，添加以用户id为主键的列，全表保存。不再需要每次运行前清库，相同的歌曲不需要重复储存歌词</li>
<li><input checked disabled type="checkbox"> 根据数据库的调整，重新优化代码。只需在main中输入id，其他文件自动运行并输出</li>
<li><input checked disabled type="checkbox"> 处理歌词方法clearInf的if判断改成try、except</li>
<li><input checked disabled type="checkbox"> 使用Pycharm进行commit、push操作</li>
</ul>
</li>
<li><p><strong>2020/10/26</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 利用MySQL存储过程，处理数据</li>
<li><input checked disabled type="checkbox"> 统计相似度</li>
</ul>
</li>
<li><p><strong>2020/10/29</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 实现多线程爬取歌词</li>
</ul>
</li>
<li><p><strong>2020/10/30</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 实现sqlite，分离成PT版</li>
<li><input checked disabled type="checkbox"> 实现pyqt，主界面与爬取线程分开，防止卡死</li>
</ul>
</li>
</ul>
<blockquote>
<p>163MusicSA_PT</p>
</blockquote>
<ul>
<li><p><strong>2020/10/31</strong></p>
<ul>
<li><input checked disabled type="checkbox"> pyqt编写界面</li>
<li><input checked disabled type="checkbox"> 尝试打包成exe</li>
</ul>
</li>
<li><p><strong>2020/11/1</strong></p>
<ul>
<li><input checked disabled type="checkbox"> Nuitka打包失败</li>
<li><input checked disabled type="checkbox"> jieba，Wordcloud本地资源txt读取问题</li>
<li><input checked disabled type="checkbox"> pyinstaller打包成功 利用spec自定义选项</li>
<li><input checked disabled type="checkbox"> 多线程打包问题，webdriver自动弹出问题</li>
</ul>
</li>
<li><p><strong>2020/11/5</strong></p>
<ul>
<li><input checked disabled type="checkbox"> Nuitka打包成功，但是爬取功能失效</li>
</ul>
</li>
<li><p><strong>2020/11/15</strong></p>
<ul>
<li><input checked disabled type="checkbox"> 界面细节优化，逻辑优化</li>
</ul>
</li>
<li><p><strong>2021/1/21</strong>  </p>
<ul>
<li><input checked disabled type="checkbox"> 添加歌单匹配功能，未添加到界面中</li>
</ul>
</li>
<li><p><strong>2021/3/30</strong>  </p>
<ul>
<li><input checked disabled type="checkbox"> 重构匹配代码</li>
</ul>
</li>
</ul>
<h2 id="待完善："><a href="#待完善：" class="headerlink" title="待完善："></a>待完善：</h2><ul>
<li><ul>
<li><input disabled type="checkbox"> 可视化相似的歌曲(pyecharts)  </li>
<li><input disabled type="checkbox"> 将歌单匹配功能写入GUI中</li>
<li><input disabled type="checkbox"> 爬取评论</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】@property的使用</title>
    <url>/p/cf8f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>解决的问题</strong>：在对输入的数据进行限制的同时，对该函数能够像调用类中的对象一样方便</p>
<a id="more"></a>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote>
<p><a href="https://www.liaoxuefeng.com/wiki/897692888725344/923030547069856" target="_blank" rel="noopener">@廖雪峰</a><br><a href="https://www.cnblogs.com/FlyingLiao/p/11334097.html" target="_blank" rel="noopener">@人生与戏</a><br><a href="https://www.cnblogs.com/mashuqi/p/11354449.html" target="_blank" rel="noopener">@北方卧龙</a></p>
</blockquote>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__s =<span class="number">60</span></span><br><span class="line"><span class="meta">    @property             #加上@property修饰器</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__s</span><br><span class="line"><span class="meta">    @score.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">score</span><span class="params">(self,value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span> <span class="keyword">or</span> value &gt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'分数必须介于0-100之间'</span>)</span><br><span class="line">        self.__s=value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setscore</span><span class="params">(self,value)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> value &lt; <span class="number">0</span> <span class="keyword">or</span> value &gt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'分数必须介于0-100之间'</span>)</span><br><span class="line">        self.__s=value</span><br><span class="line">p=test()</span><br></pre></td></tr></table></figure>

<h2 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p.score</span><br><span class="line">Out[<span class="number">55</span>]: <span class="number">60</span></span><br><span class="line"></span><br><span class="line">p.setscore(<span class="number">80</span>)       <span class="comment">#不使用property的调用</span></span><br><span class="line"></span><br><span class="line">p.score</span><br><span class="line">Out[<span class="number">57</span>]: <span class="number">80</span></span><br><span class="line"></span><br><span class="line">p.score=<span class="number">100</span>          <span class="comment">#使用了property和setter的调用</span></span><br><span class="line"></span><br><span class="line">p.score</span><br><span class="line">Out[<span class="number">59</span>]: <span class="number">100</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】出现bound method 错误</title>
    <url>/p/2919.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Python调用类方法时的常见错误</p>
<a id="more"></a>

<p>错误提示：<br><code>&lt;bound method Mlei.GetInfo of &lt;__main__.Mlei object at 0x00000131F0235EB0&gt;&gt;</code>  </p>
<p>源代码：  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mlei</span>:</span></span><br><span class="line">    name=<span class="string">"Leya"</span></span><br><span class="line">    sex=<span class="string">"woman"</span></span><br><span class="line">    __age=<span class="number">25</span></span><br><span class="line">    __weight=<span class="number">50</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">GetInfo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> print(<span class="string">"name:%s,sex:%s"</span>%(self.name,self.sex))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__GetMoreInfo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> print(<span class="string">"age:%s,weight:%s"</span>%(self.__age,self.__weight))</span><br><span class="line">c1=Mlei()</span><br><span class="line">c2=Mlei()</span><br><span class="line">print(<span class="string">"访问公有类属性："</span>,c1.name,c1.sex)</span><br><span class="line">print(<span class="string">"访问公有类方法："</span>,end=<span class="string">' '</span>)</span><br><span class="line">c1.GetInfo</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">访问公有类属性： Leya woman</span><br><span class="line">访问公有类方法： &lt;bound method Mlei.GetInfo of &lt;__main__.Mlei object at 0x00000131F0235EB0&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>错误原因：调用方法时，没有加上括号，正确调用方法<code>c1.GetInfo()</code></p>
]]></content>
      <categories>
        <category>Error</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】解决pyqt5界面运行时卡死</title>
    <url>/p/453e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>GUI编程常见问题</p>
<a id="more"></a>

<blockquote>
<p><a href="https://blog.csdn.net/wbdxz/article/details/86290139" target="_blank" rel="noopener">SeniorZ-PyQt5+socket编程界面卡住未响应</a></p>
</blockquote>
<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>在使用Qt Desinger设计gui界面后，在python中运行界面使用按钮时，界面出现假卡死。  </p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>gui界面运行后会作为主线程，若在主线程中进行耗时操作，就会导致界面出现假死的情况</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>使用多线程，将耗时操作放在其他线程进行，主线程就不会受到影响</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMainForm</span><span class="params">(QMainWindow, Ui_MainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">    super(MyMainForm, self).__init__(parent)</span><br><span class="line">    self.setupUi(self)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#新线程</span></span><br><span class="line">    self.th = <span class="literal">None</span></span><br><span class="line">    <span class="comment">#耗时操作</span></span><br><span class="line">    self.musicSpider_Button.clicked.connect(self.musicSpider)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">musicSpider</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.th = threading.Thread(target=self.ms)</span><br><span class="line">        <span class="comment"># 设置线程为守护线程，防止退出主线程时，子线程仍在运行</span></span><br><span class="line">        self.th.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 新线程启动</span></span><br><span class="line">        self.th.start()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ms</span><span class="params">(self)</span>:</span></span><br><span class="line">        musicSpider(self.user_idEdit.text())</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Qt Designer</tag>
      </tags>
  </entry>
  <entry>
    <title>【Python】解决Sqlite多线程检测</title>
    <url>/p/1e25.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Python连接Sqlite问题</p>
<a id="more"></a>
<h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p><code>ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id *** and this is thread id ***.</code></p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">connection = sqlite3.connect(<span class="string">'data.db'</span>)</span><br></pre></td></tr></table></figure>

<p>在导入连接数据库的module时，自动连接了数据库，但是为了GUI界面不卡死，在执行对应语句的时候使用的是新建的线程。<br>而sqlite在进行执行增删改操作的时候，操作所在线程必须和connection所在线程一致，但是对于查找操作允许多线程。  </p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">connection = sqlite3.connect(<span class="string">'data.db'</span>, check_same_thread=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<p>将检测同线程关闭，为了不产生其他麻烦，要确保在进行数据库操作的时候只有一个线程在增删改数据库。  </p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Qt Designer</tag>
        <tag>Sqlite</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季12】15. 二维数组中的查找 &amp; 74. 搜索二维矩阵</title>
    <url>/p/19dd.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/16/" target="_blank" rel="noopener">Day12 AcWing 15. 二维数组中的查找</a><br><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/" target="_blank" rel="noopener">Day12 LeetCode 74. 搜索二维矩阵</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>二分查找<ul>
<li>一次二分查找：若将矩阵每一行拼接在上一行的末尾，则会得到一个升序数组，我们可以在该数组上二分找到目标元素。代码实现时，可以二分升序数组的下标，将其映射到原矩阵的行和列上。</li>
</ul>
</li>
<li>单调性扫描</li>
</ol>
<h5 id="74-搜索二维矩阵"><a href="#74-搜索二维矩阵" class="headerlink" title="74. 搜索二维矩阵"></a>74. 搜索二维矩阵</h5><p><img src="https://assets.leetcode.com/uploads/2020/10/05/mat.jpg" alt="搜索二维矩阵"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure>

<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="搜索二维矩阵-amp-二维数组中的查找"><a href="#搜索二维矩阵-amp-二维数组中的查找" class="headerlink" title="搜索二维矩阵 &amp; 二维数组中的查找"></a>搜索二维矩阵 &amp; 二维数组中的查找</h5><h6 id="单调性扫描"><a href="#单调性扫描" class="headerlink" title="单调性扫描"></a>单调性扫描</h6><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m=matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n=matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> i=m<span class="number">-1</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&gt;=<span class="number">0</span>&amp;&amp;j&lt;n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j]&gt;target) i--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(matrix[i][j]&lt;target) j++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h6 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h6><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = matrix.<span class="built_in">size</span>(), n = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>, high = m * n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (high - low) / <span class="number">2</span> + low;</span><br><span class="line">            <span class="keyword">int</span> x = matrix[mid / n][mid % n];</span><br><span class="line">            <span class="keyword">if</span> (x &lt; target) &#123;</span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; target) &#123;</span><br><span class="line">                high = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 夏季9】3404. 谁是你的潜在朋友</title>
    <url>/p/b621.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/3407/" target="_blank" rel="noopener">3404. 谁是你的潜在朋友</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">210</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> u=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;u;</span><br><span class="line">        a[i]=u;</span><br><span class="line">        b[u]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t=b[a[i]]<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;<span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"BeiJu"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季13】93. 递归实现组合型枚举 &amp;  90. 子集 II</title>
    <url>/p/2434.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/95/" target="_blank" rel="noopener">Day13 AcWing 93. 递归实现组合型枚举</a><br><a href="https://leetcode-cn.com/problems/subsets-ii/" target="_blank" rel="noopener">Day13 LeetCode 90. 子集 II</a></p>
<a id="more"></a>

<h4 id="输入、输出"><a href="#输入、输出" class="headerlink" title="输入、输出"></a>输入、输出</h4><p>93. 递归实现组合型枚举</p>
<p><strong>输入样例：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure>

<p><strong>输出样例：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2 3 </span><br><span class="line">1 2 4 </span><br><span class="line">1 2 5 </span><br><span class="line">1 3 4 </span><br><span class="line">1 3 5 </span><br><span class="line">1 4 5 </span><br><span class="line">2 3 4 </span><br><span class="line">2 3 5 </span><br><span class="line">2 4 5 </span><br><span class="line">3 4 5</span><br></pre></td></tr></table></figure>

<p>90. 子集 II</p>
<p><strong>输入样例：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nums = [1,2,2]</span><br></pre></td></tr></table></figure>

<p><strong>输出样例：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[],[1],[1,2],[1,2,2],[2],[2,2]]</span><br></pre></td></tr></table></figure>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>递归</li>
<li>回溯</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="93-递归实现组合型枚举"><a href="#93-递归实现组合型枚举" class="headerlink" title="93. 递归实现组合型枚举"></a>93. 递归实现组合型枚举</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> path[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u &gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            path[u] = i;</span><br><span class="line">            dfs(u + <span class="number">1</span>, i + <span class="number">1</span>);</span><br><span class="line">            path[u] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="90-子集-II"><a href="#90-子集-II" class="headerlink" title="90. 子集 II"></a>90. 子集 II</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; cnt;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; ans;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">subsetsWithDup</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x: nums) cnt[x]++;</span><br><span class="line">        dfs(<span class="number">-10</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(u&gt;<span class="number">10</span>) ans.push_back(path);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; cnt[u]+<span class="number">1</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                dfs(u+<span class="number">1</span>);</span><br><span class="line">                path.push_back(u);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cnt[u]+<span class="number">1</span>;i++) path.pop_back();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>递归</tag>
        <tag>LeetCode</tag>
        <tag>回溯</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季15】592. 雨 &amp; 17.21. 直方图的水量</title>
    <url>/p/5540.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/594/" target="_blank" rel="noopener">Day15 AcWing 592. 雨</a><br><a href="https://leetcode-cn.com/problems/volume-of-histogram-lcci/" target="_blank" rel="noopener">Day15 LeetCode 17.21. 直方图的水量</a></p>
<a id="more"></a>

<p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png" alt="直方图的水量"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">left[1]:1</span><br><span class="line">left[2]:1</span><br><span class="line">left[3]:2</span><br><span class="line">left[4]:2</span><br><span class="line">left[5]:2</span><br><span class="line">left[6]:2</span><br><span class="line">left[7]:3</span><br><span class="line">left[8]:3</span><br><span class="line">left[9]:3</span><br><span class="line">left[10]:3</span><br><span class="line">left[11]:3</span><br><span class="line"></span><br><span class="line">right[10]:2</span><br><span class="line">right[9]:2</span><br><span class="line">right[8]:2</span><br><span class="line">right[7]:3</span><br><span class="line">right[6]:3</span><br><span class="line">right[5]:3</span><br><span class="line">right[4]:3</span><br><span class="line">right[3]:3</span><br><span class="line">right[2]:3</span><br><span class="line">right[1]:3</span><br><span class="line">right[0]:3</span><br></pre></td></tr></table></figure>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h5 id="雨"><a href="#雨" class="headerlink" title="雨"></a>雨</h5><h5 id="直方图的水量"><a href="#直方图的水量" class="headerlink" title="直方图的水量"></a>直方图的水量</h5><ol>
<li>从左往右遍历每个位置的<strong>左边最高</strong>的长方形height</li>
<li>从右往左遍历每个位置的<strong>右边最高</strong>的长方形height</li>
<li>遍历<code>height[i]</code>，取<code>left[i]</code> <code>right[i]</code>最小值，减去<code>height[i]</code></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="592-雨"><a href="#592-雨" class="headerlink" title="592. 雨"></a>592. 雨</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> h[N][N];</span><br><span class="line"><span class="keyword">int</span> dist[N][N];</span><br><span class="line"><span class="keyword">bool</span> st[N][N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y, d;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Node&amp; t) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; t.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> C = <span class="number">1</span>; C &lt;= T; C ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;h[i][j]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">        <span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">        priority_queue&lt;Node&gt; heap;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            heap.push(&#123;i, <span class="number">1</span>, h[i][<span class="number">1</span>]&#125;);</span><br><span class="line">            dist[i][<span class="number">1</span>] = h[i][<span class="number">1</span>];</span><br><span class="line">            heap.push(&#123;i, m, h[i][m]&#125;);</span><br><span class="line">            dist[i][m] = h[i][m];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; m; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            heap.push(&#123;<span class="number">1</span>, i, h[<span class="number">1</span>][i]&#125;);</span><br><span class="line">            dist[<span class="number">1</span>][i] = h[<span class="number">1</span>][i];</span><br><span class="line">            heap.push(&#123;n, i, h[n][i]&#125;);</span><br><span class="line">            dist[n][i] = h[n][i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (heap.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = heap.top();</span><br><span class="line">            heap.pop();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (st[t.x][t.y]) <span class="keyword">continue</span>;</span><br><span class="line">            st[t.x][t.y] = <span class="literal">true</span>;</span><br><span class="line">            res += t.d - h[t.x][t.y];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> x = t.x + dx[i], y = t.y + dy[i];</span><br><span class="line">                <span class="keyword">if</span> (x &gt;= <span class="number">1</span> &amp;&amp; x &lt;= n &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt;= m)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dist[x][y] &gt; <span class="built_in">max</span>(t.d, h[x][y]))</span><br><span class="line">                    &#123;</span><br><span class="line">                        dist[x][y] = <span class="built_in">max</span>(t.d, h[x][y]);</span><br><span class="line">                        heap.push(&#123;x, y, dist[x][y]&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, C, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="17-21-直方图的水量"><a href="#17-21-直方图的水量" class="headerlink" title="17.21. 直方图的水量"></a>17.21. 直方图的水量</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; <span class="built_in">height</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">height</span>.empty()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">height</span>.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">        vector&lt;int&gt; right(n),left(n);</span><br><span class="line">        left[<span class="number">0</span>]=<span class="built_in">height</span>[<span class="number">0</span>],right[n<span class="number">-1</span>]=<span class="built_in">height</span>[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">            <span class="comment">//left[i]=max(left[i-1],height[i]),printf("left[%d]:%d\n",i,left[i]);</span></span><br><span class="line">            left[i]=<span class="built_in">max</span>(left[i<span class="number">-1</span>],<span class="built_in">height</span>[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="comment">//right[i]=max(right[i+1],height[i]),printf("right[%d]:%d\n",i,right[i]);</span></span><br><span class="line">            right[i]=<span class="built_in">max</span>(right[i+<span class="number">1</span>],<span class="built_in">height</span>[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            res+=<span class="built_in">min</span>(left[i],right[i])-<span class="built_in">height</span>[i];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>最小生成树</tag>
        <tag>单源最短路径</tag>
        <tag>堆</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季14】1381. 阶乘 &amp; 1006. 笨阶乘</title>
    <url>/p/389d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1383/" target="_blank" rel="noopener">Day14 AcWing 1381. 阶乘</a><br><a href="https://leetcode-cn.com/problems/clumsy-factorial/" target="_blank" rel="noopener">Day14 LeetCode 1006. 笨阶乘</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>设$n!$末尾有$k$个0，求$\frac {n!}{10^k} mod 10$</li>
<li>栈模拟，将所有需要进行乘除的数字计算好，然后加入栈中计算加减，实现加减乘除的优先级计算。</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/199/" target="_blank" rel="noopener">AcWing 197. 阶乘分解</a></li>
<li><a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation" target="_blank" rel="noopener">150. 逆波兰表达式求值</a></li>
<li><a href="https://leetcode-cn.com/problems/basic-calculator" target="_blank" rel="noopener">224. 基本计算器</a></li>
<li><a href="https://leetcode-cn.com/problems/basic-calculator-ii" target="_blank" rel="noopener">227. 基本计算器 II</a></li>
<li><a href="olvi73.github.io/p/86b7.html">寒假每日一题Day16</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="1381-阶乘"><a href="#1381-阶乘" class="headerlink" title="1381. 阶乘"></a>1381. 阶乘</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> path[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u &gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, path[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            path[u] = i;</span><br><span class="line">            dfs(u + <span class="number">1</span>, i + <span class="number">1</span>);</span><br><span class="line">            path[u] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="1006-笨阶乘"><a href="#1006-笨阶乘" class="headerlink" title="1006. 笨阶乘"></a>1006. 笨阶乘</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">clumsy</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        stk.push(N);</span><br><span class="line">        N--;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>; <span class="comment">// 用于控制乘、除、加、减</span></span><br><span class="line">        <span class="keyword">while</span> (N &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (index % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                stk.top() *= N;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (index % <span class="number">4</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                stk.top() /= N;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (index % <span class="number">4</span> == <span class="number">2</span>) &#123;</span><br><span class="line">                stk.push(N);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stk.push(-N);</span><br><span class="line">            &#125;</span><br><span class="line">            index++;</span><br><span class="line">            N--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把栈中所有的数字依次弹出求和</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!stk.empty()) &#123;</span><br><span class="line">            sum += stk.top();</span><br><span class="line">            stk.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>栈</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季16】1222. 密码脱落 &amp; 1143. 最长公共子序列</title>
    <url>/p/7ee4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1224/" target="_blank" rel="noopener">Day16 AcWing 1222. 密码脱落</a><br><a href="https://leetcode-cn.com/problems/longest-common-subsequence/" target="_blank" rel="noopener">Day16 LeetCode 1143. 最长公共子序列</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>动态规划分析</li>
</ol>
<h5 id="密码脱落"><a href="#密码脱落" class="headerlink" title="密码脱落"></a>密码脱落</h5><p><img src="https://cdn.acwing.com/media/article/image/2020/02/16/7416_6b12137a50-dbeb2ca84e7ee6b21319802cbd0170d.png" alt="dp分析过程"></p>
<p>f[L+1,R-1] 被覆盖掉</p>
<h5 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">case1 text1不包含i, text2不包含j: f[i][j] = f[i-1][j-1]  //被覆盖掉</span><br><span class="line">case2 text1包含i,   text2不包含j: f[i][j] = f[i-1][j] + 1  </span><br><span class="line">case3 text1不包含i, text2包含j:   f[i][j] = f[i][j-1] + 1  </span><br><span class="line">case4 text1包含i,   text2包含j:   f[i][j] = f[i-1][j-1] + 1</span><br></pre></td></tr></table></figure>

<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="1222-密码脱落"><a href="#1222-密码脱落" class="headerlink" title="1222. 密码脱落"></a>1222. 密码脱落</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//区间dp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    n = <span class="built_in">strlen</span>(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len &lt;= n; len ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + len - <span class="number">1</span> &lt; n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = i + len - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">1</span>) f[i][j] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j] = <span class="built_in">max</span>(f[i + <span class="number">1</span>][j], f[i][j - <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span> (s[i] == s[j])</span><br><span class="line">                    f[i][j] = <span class="built_in">max</span>(f[i][j], f[i + <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n - f[<span class="number">0</span>][n - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//特殊解法，反转字符串求最长公共子序列</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">int</span> n=a.length();</span><br><span class="line">    b=a;</span><br><span class="line">    reverse(b.<span class="built_in">begin</span>(),b.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">int</span> f[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j]=<span class="built_in">max</span>(f[i<span class="number">-1</span>][j],f[i][j<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n-f[n][n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="1143-最长公共子序列"><a href="#1143-最长公共子序列" class="headerlink" title="1143. 最长公共子序列"></a>1143. 最长公共子序列</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">longestCommonSubsequence</span><span class="params">(<span class="built_in">string</span> text1, <span class="built_in">string</span> text2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=text1.<span class="built_in">size</span>(),m=text2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> f[n+<span class="number">1</span>][m+<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i<span class="number">-1</span>][j],f[i][j<span class="number">-1</span>]);</span><br><span class="line">                <span class="keyword">if</span>(text1[i<span class="number">-1</span>]==text2[j<span class="number">-1</span>])</span><br><span class="line">                f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> f[n][m];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季1】35. 反转链表 &amp; 92. 反转链表 II</title>
    <url>/p/2b05.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/447/" target="_blank" rel="noopener">Day1 AcWing 35. 反转链表</a><br><a href="https://leetcode-cn.com/problems/reverse-linked-list-ii/" target="_blank" rel="noopener">Day1 LeetCode 92. 反转链表 II</a></p>
<a id="more"></a>

<p><img src="https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg" alt="LeetCode 92. 反转链表 II"></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>链表</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="35-反转链表"><a href="#35-反转链表" class="headerlink" title="35. 反转链表"></a>35. 反转链表</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!head||!head-&gt;next) <span class="keyword">return</span> head;</span><br><span class="line">        <span class="keyword">auto</span> a=head,b=a-&gt;next;</span><br><span class="line">        <span class="keyword">while</span>(b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> c=b-&gt;next;</span><br><span class="line">            b-&gt;next=a;</span><br><span class="line">            a=b,b=c;</span><br><span class="line">        &#125;</span><br><span class="line">        head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="92-反转链表-II"><a href="#92-反转链表-II" class="headerlink" title="92. 反转链表 II"></a>92. 反转链表 II</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseBetween</span><span class="params">(ListNode* head, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (m == n) <span class="keyword">return</span> head;</span><br><span class="line">        ListNode *dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummy-&gt;next = head;</span><br><span class="line">        ListNode *p = dummy;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i ++ )</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        ListNode *a = p, *b = a-&gt;next, *c = b-&gt;next;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = m + <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            ListNode *d = c-&gt;next;</span><br><span class="line">            c-&gt;next = b;</span><br><span class="line">            b = c;</span><br><span class="line">            c = d;</span><br><span class="line">        &#125;</span><br><span class="line">        a-&gt;next-&gt;next = c;</span><br><span class="line">        a-&gt;next = b;</span><br><span class="line">        <span class="keyword">return</span> dummy-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>Algorithm</tag>
        <tag>链表</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季2】3267. 小明上学 &amp; 1603. 设计停车系统</title>
    <url>/p/627f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3270/" target="_blank" rel="noopener">Day2 AcWing 3267. 小明上学</a><br><a href="https://leetcode-cn.com/problems/design-parking-system/" target="_blank" rel="noopener">Day2 LeetCode 1603. 设计停车系统</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>水题 模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="3267-小明上学"><a href="#3267-小明上学" class="headerlink" title="3267. 小明上学"></a>3267. 小明上学</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> r,y,g;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">int</span> k,t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;r,&amp;y,&amp;g);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;t);</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>||k==<span class="number">1</span>) ans+=t;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">2</span>) ans+=t+r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="1603-设计停车系统"><a href="#1603-设计停车系统" class="headerlink" title="1603. 设计停车系统"></a>1603. 设计停车系统</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParkingSystem</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> repo[<span class="number">4</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    ParkingSystem(<span class="keyword">int</span> big, <span class="keyword">int</span> medium, <span class="keyword">int</span> small) &#123;</span><br><span class="line">        repo[<span class="number">1</span>]=big;</span><br><span class="line">        repo[<span class="number">2</span>]=medium;</span><br><span class="line">        repo[<span class="number">3</span>]=small;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">addCar</span><span class="params">(<span class="keyword">int</span> carType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(repo[carType]&gt;<span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            repo[carType]--;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your ParkingSystem object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * ParkingSystem* obj = new ParkingSystem(big, medium, small);</span></span><br><span class="line"><span class="comment"> * bool param_1 = obj-&gt;addCar(carType);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季4】3174. 旋转 &amp; 73. 矩阵置零</title>
    <url>/p/9239.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3177/" target="_blank" rel="noopener">Day4 AcWing 3174. 旋转</a><br><a href="https://leetcode-cn.com/problems/set-matrix-zeroes/" target="_blank" rel="noopener">Day4 LeetCode 73. 矩阵置零</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>数组</li>
<li>遍历</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="3174-旋转"><a href="#3174-旋转" class="headerlink" title="3174. 旋转"></a>3174. 旋转</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=m<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="73-矩阵置零"><a href="#73-矩阵置零" class="headerlink" title="73. 矩阵置零"></a>73. 矩阵置零</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setZeroes</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt; row;</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt; col;</span><br><span class="line">        <span class="keyword">int</span> m=matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> n=matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(matrix[i][j]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    row.insert(i);</span><br><span class="line">                    col.insert(j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> i:row)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) matrix[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j:col)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) matrix[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>数组</tag>
        <tag>遍历</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季3】3302. 表达式求值 &amp; 150. 逆波兰表达式求值</title>
    <url>/p/16b9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3305/" target="_blank" rel="noopener">Day3 AcWing 3302. 表达式求值</a><br><a href="https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/" target="_blank" rel="noopener">Day3 LeetCode 150. 逆波兰表达式求值</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>栈</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="3302-表达式求值"><a href="#3302-表达式求值" class="headerlink" title="3302. 表达式求值"></a>3302. 表达式求值</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; op;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eval</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> b = num.top(); num.pop();</span><br><span class="line">    <span class="keyword">auto</span> a = num.top(); num.pop();</span><br><span class="line">    <span class="keyword">auto</span> c = op.top(); op.pop();</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">'+'</span>) x = a + b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'-'</span>) x = a - b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'*'</span>) x = a * b;</span><br><span class="line">    <span class="keyword">else</span> x = a / b;</span><br><span class="line">    num.push(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; pr&#123;&#123;<span class="string">'+'</span>, <span class="number">1</span>&#125;, &#123;<span class="string">'-'</span>, <span class="number">1</span>&#125;, &#123;<span class="string">'*'</span>, <span class="number">2</span>&#125;, &#123;<span class="string">'/'</span>, <span class="number">2</span>&#125;&#125;;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> c = str[i];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = <span class="number">0</span>, j = i;</span><br><span class="line">            <span class="keyword">while</span> (j &lt; str.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isdigit</span>(str[j]))</span><br><span class="line">                x = x * <span class="number">10</span> + str[j ++ ] - <span class="string">'0'</span>;</span><br><span class="line">            i = j - <span class="number">1</span>;</span><br><span class="line">            num.push(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'('</span>) op.push(c);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">')'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (op.top() != <span class="string">'('</span>) eval();</span><br><span class="line">            op.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (op.<span class="built_in">size</span>() &amp;&amp; pr[op.top()] &gt;= pr[c]) eval();</span><br><span class="line">            op.push(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (op.<span class="built_in">size</span>()) eval();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num.top() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="150-逆波兰表达式求值"><a href="#150-逆波兰表达式求值" class="headerlink" title="150. 逆波兰表达式求值"></a>150. 逆波兰表达式求值</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">evalRPN</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; tokens)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tokens.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tokens[i] == <span class="string">"+"</span> || tokens[i] == <span class="string">"-"</span> || tokens[i] == <span class="string">"*"</span> || tokens[i] == <span class="string">"/"</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> num1 = st.back();</span><br><span class="line">                st.pop_back();</span><br><span class="line">                <span class="keyword">int</span> num2 = st.back();</span><br><span class="line">                st.pop_back();</span><br><span class="line">                <span class="keyword">if</span> (tokens[i] == <span class="string">"+"</span>) st.push_back(num2 + num1);</span><br><span class="line">                <span class="keyword">if</span> (tokens[i] == <span class="string">"-"</span>) st.push_back(num2 - num1);</span><br><span class="line">                <span class="keyword">if</span> (tokens[i] == <span class="string">"*"</span>) st.push_back(num2 * num1);</span><br><span class="line">                <span class="keyword">if</span> (tokens[i] == <span class="string">"/"</span>) st.push_back(num2 / num1);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                st.push_back(stoi(tokens[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> result = st.back();</span><br><span class="line">        st.pop_back(); <span class="comment">// optional</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>栈</tag>
        <tag>表达式求值</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季5】85. 不用加减乘除做加法 &amp; 191. 位1的个数</title>
    <url>/p/6adb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/81/" target="_blank" rel="noopener">Day5 AcWing 85. 不用加减乘除做加法</a><br><a href="https://leetcode-cn.com/problems/number-of-1-bits/" target="_blank" rel="noopener">Day5 LeetCode 191. 位1的个数</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>位运算</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="85-不用加减乘除做加法"><a href="#85-不用加减乘除做加法" class="headerlink" title="85. 不用加减乘除做加法"></a>85. 不用加减乘除做加法</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (num2) &#123;</span><br><span class="line">            <span class="keyword">int</span> sum = num1 ^ num2;</span><br><span class="line">            <span class="keyword">int</span> carry = (num1 &amp; num2) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            num1 = sum, num2 = carry;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="191-位1的个数"><a href="#191-位1的个数" class="headerlink" title="191. 位1的个数"></a>191. 位1的个数</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=n&amp;<span class="number">1</span>;</span><br><span class="line">            n=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季6】1497. 树的遍历 &amp; 341. 扁平化嵌套列表迭代器</title>
    <url>/p/c520.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1499/" target="_blank" rel="noopener">Day6 AcWing 1497. 树的遍历</a><br><a href="https://leetcode-cn.com/problems/flatten-nested-list-iterator/" target="_blank" rel="noopener">Day6 LeetCode 341. 扁平化嵌套列表迭代器</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>二叉树</li>
<li>树的遍历</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="1497-树的遍历"><a href="#1497-树的遍历" class="headerlink" title="1497. 树的遍历"></a>1497. 树的遍历</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> postorder[N], inorder[N];</span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; l, r, pos;</span><br><span class="line"><span class="keyword">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> il, <span class="keyword">int</span> ir, <span class="keyword">int</span> pl, <span class="keyword">int</span> pr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> root = postorder[pr];</span><br><span class="line">    <span class="keyword">int</span> k = pos[root];</span><br><span class="line">    <span class="keyword">if</span> (il &lt; k) l[root] = build(il, k - <span class="number">1</span>, pl, pl + (k - <span class="number">1</span> - il));</span><br><span class="line">    <span class="keyword">if</span> (k &lt; ir) r[root] = build(k + <span class="number">1</span>, ir, pl + (k - <span class="number">1</span> - il) + <span class="number">1</span>, pr - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line">    q[<span class="number">0</span>] = root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q[hh ++ ];</span><br><span class="line">        <span class="keyword">if</span> (l.count(t)) q[ ++ tt] = l[t];</span><br><span class="line">        <span class="keyword">if</span> (r.count(t)) q[ ++ tt] = r[t];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; q[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ ) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; q[i];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; postorder[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; inorder[i];</span><br><span class="line">        pos[inorder[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> root = build(<span class="number">0</span>, n - <span class="number">1</span>, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    bfs(root);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="341-扁平化嵌套列表迭代器"><a href="#341-扁平化嵌套列表迭代器" class="headerlink" title="341. 扁平化嵌套列表迭代器"></a>341. 扁平化嵌套列表迭代器</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NestedIterator</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// pair 中存储的是列表的当前遍历位置，以及一个尾后迭代器用于判断是否遍历到了列表末尾</span></span><br><span class="line">    <span class="built_in">stack</span>&lt;pair&lt;<span class="built_in">vector</span>&lt;NestedInteger&gt;::iterator, <span class="built_in">vector</span>&lt;NestedInteger&gt;::iterator&gt;&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    NestedIterator(<span class="built_in">vector</span>&lt;NestedInteger&gt; &amp;nestedList) &#123;</span><br><span class="line">        stk.emplace(nestedList.<span class="built_in">begin</span>(), nestedList.<span class="built_in">end</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 由于保证调用 next 之前会调用 hasNext，直接返回栈顶列表的当前元素，然后迭代器指向下一个元素</span></span><br><span class="line">        <span class="keyword">return</span> stk.top().first++-&gt;getInteger();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!stk.empty()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> &amp;p = stk.top();</span><br><span class="line">            <span class="keyword">if</span> (p.first == p.second) &#123; <span class="comment">// 遍历到当前列表末尾，出栈</span></span><br><span class="line">                stk.pop();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p.first-&gt;isInteger()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 若当前元素为列表，则将其入栈，且迭代器指向下一个元素</span></span><br><span class="line">            <span class="keyword">auto</span> &amp;lst = p.first++-&gt;getList();</span><br><span class="line">            stk.emplace(lst.<span class="built_in">begin</span>(), lst.<span class="built_in">end</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>二叉树</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题10】AcWing 1208. 翻硬币</title>
    <url>/p/9b99.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1210/" target="_blank" rel="noopener">Day10 AcWing 1208. 翻硬币</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>递推$O(n)$</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/97/" target="_blank" rel="noopener">AcWing 95. 费解的开关</a> $O(n2^n)$</li>
<li><a href="https://www.acwing.com/problem/content/210/" target="_blank" rel="noopener">AcWing 208. 开关问题</a> $O(n6)$</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s[i]= s[i]==<span class="string">'*'</span>?<span class="string">'o'</span>:<span class="string">'*'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=t[i])</span><br><span class="line">        &#123;</span><br><span class="line">            res++;</span><br><span class="line">            swap(i),swap(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>递推</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题 春季7】131. 直方图中最大的矩形 &amp; 456. 132模式</title>
    <url>/p/b887.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/133/" target="_blank" rel="noopener">Day7 AcWing 131. 直方图中最大的矩形</a><br><a href="https://leetcode-cn.com/problems/132-pattern/" target="_blank" rel="noopener">Day7 LeetCode 456. 132模式</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>单调栈</li>
</ol>
<p><img src="https://www.acwing.com/media/article/image/2019/01/14/19_eac6c46017-2559_1.jpg" alt="直方图中最大的矩形"></p>
<h5 id="132模式-单调栈"><a href="#132模式-单调栈" class="headerlink" title="132模式 单调栈"></a>132模式 单调栈</h5><p>$a_i &lt; a_j &gt; a_k$<br>从右往左扫描，右侧维护一个单调栈，当<strong>栈非空</strong>的时候，只要 $a_j$ 大于左边的元素 $a_i$ ，则满足132模式</p>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram/" target="_blank" rel="noopener">LeetCode 84. 柱状图中最大的矩形</a></li>
<li><a href="https://www.acwing.com/activity/content/code/content/43105/" target="_blank" rel="noopener">单调栈</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="131-直方图中最大的矩形"><a href="#131-直方图中最大的矩形" class="headerlink" title="131. 直方图中最大的矩形"></a>131. 直方图中最大的矩形</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> h[N], l[N], r[N];</span><br><span class="line"><span class="keyword">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n), n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;h[i]);</span><br><span class="line">        h[<span class="number">0</span>] = h[n + <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 求左边界</span></span><br><span class="line">        <span class="keyword">int</span> tt = <span class="number">0</span>;</span><br><span class="line">        q[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (h[q[tt]] &gt;= h[i]) tt -- ;</span><br><span class="line">            l[i] = q[tt];</span><br><span class="line">            q[ ++ tt] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 求右边界</span></span><br><span class="line">        tt = <span class="number">0</span>;</span><br><span class="line">        q[<span class="number">0</span>] = n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; i -- )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (h[q[tt]] &gt;= h[i]) tt -- ;</span><br><span class="line">            r[i] = q[tt];</span><br><span class="line">            q[ ++ tt] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LL res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            res = <span class="built_in">max</span>(res, (LL)h[i] * (r[i] - l[i] - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="456-132模式-单调栈"><a href="#456-132模式-单调栈" class="headerlink" title="456. 132模式 单调栈"></a>456. 132模式 单调栈</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">find132pattern</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> right = INT_MIN;</span><br><span class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = nums.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] &lt; right) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">while</span> (stk.<span class="built_in">size</span>() &amp;&amp; stk.top() &lt; nums[i]) &#123;</span><br><span class="line">                right = <span class="built_in">max</span>(right, stk.top());</span><br><span class="line">                stk.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            stk.push(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="456-132模式-暴力解法"><a href="#456-132模式-暴力解法" class="headerlink" title="456. 132模式 暴力解法"></a>456. 132模式 暴力解法</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">find132pattern</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> base=nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=n<span class="number">-1</span>;k&gt;j;k--)</span><br><span class="line">                <span class="keyword">if</span>(base&lt;nums[k] &amp;&amp; nums[k]&lt;nums[j]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            base=<span class="built_in">min</span>(base,nums[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>LeetCode</tag>
        <tag>单调栈</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题12】AcWing 1341. 十三号星期五</title>
    <url>/p/a330.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1343/" target="_blank" rel="noopener">Day12 AcWing 1341. 十三号星期五</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>打表/枚举</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://baike.baidu.com/item/%E5%9F%BA%E5%A7%86%E6%8B%89%E5%B0%94%E6%A3%AE%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F" target="_blank" rel="noopener">基姆拉尔森计算公式</a>(Kim larsen calculation formula)</li>
<li>闰年判断 <code>year % 100 &amp;&amp; year % 4 == 0 || year % 400 == 0</code></li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li><a href="https://www.acwing.com/problem/content/1366/" target="_blank" rel="noopener">AcWing 1364. 序言页码</a></li>
<li><a href="https://www.acwing.com/problem/content/1570/" target="_blank" rel="noopener">AcWing 1568. 中文读数字</a></li>
<li><a href="https://www.acwing.com/problem/content/700/" target="_blank" rel="noopener">AcWing 698. 读电话号码</a></li>
<li><a href="https://www.acwing.com/problem/content/438/" target="_blank" rel="noopener">AcWing 436. 立体图</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="按月份枚举"><a href="#按月份枚举" class="headerlink" title="按月份枚举"></a>按月份枚举</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> month[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;  <span class="comment">// 打表</span></span><br><span class="line"><span class="keyword">int</span> weekday[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> days = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> year = <span class="number">1900</span>; year &lt; <span class="number">1900</span> + n; year ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            weekday[(days + <span class="number">12</span>) % <span class="number">7</span>] ++ ;</span><br><span class="line">            days += month[i];</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (year % <span class="number">100</span> &amp;&amp; year % <span class="number">4</span> == <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">                    days ++ ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>, j = <span class="number">0</span>; j &lt; <span class="number">7</span>; i = (i + <span class="number">1</span>) % <span class="number">7</span>, j ++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; weekday[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="按天枚举"><a href="#按天枚举" class="headerlink" title="按天枚举"></a>按天枚举</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> months[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;  <span class="comment">// 打表</span></span><br><span class="line"><span class="keyword">int</span> weekday[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m != <span class="number">2</span>) <span class="keyword">return</span> months[m];</span><br><span class="line">    <span class="keyword">if</span> (year % <span class="number">100</span> &amp;&amp; year % <span class="number">4</span> == <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> week = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> year = <span class="number">1900</span>, month = <span class="number">1</span>, day = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (year &lt; <span class="number">1900</span> + n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (day == <span class="number">13</span>) weekday[week] ++ ;</span><br><span class="line">        week = (week + <span class="number">1</span>) % <span class="number">7</span>;</span><br><span class="line">        day ++ ;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">get</span>(year, month) &lt; day) month ++, day = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (month &gt; <span class="number">12</span>) month = <span class="number">1</span>, year ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>, j = <span class="number">0</span>; j &lt; <span class="number">7</span>; i = (i + <span class="number">1</span>) % <span class="number">7</span>, j ++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; weekday[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>枚举</tag>
        <tag>基姆拉尔森公式</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题11】AcWing 1532. 找硬币</title>
    <url>/p/d6a1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1534/" target="_blank" rel="noopener">Day11 AcWing 1532. 找硬币</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>哈希表</li>
<li>双指针</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/2818/" target="_blank" rel="noopener">AcWing 2816. 判断子序列</a></li>
<li><a href="https://www.acwing.com/problem/content/1238/" target="_blank" rel="noopener">AcWing 1236. 递增三元组</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> a[N];</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">find</span>=<span class="number">0</span>;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        mp[a[i]]--;</span><br><span class="line">        <span class="built_in">find</span>=m-a[i];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(mp[<span class="built_in">find</span>]&gt;<span class="number">0</span> <span class="keyword">and</span> <span class="built_in">find</span>&gt;a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="built_in">find</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"No Solution"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>哈希表</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题13】AcWing 754. 平方矩阵 II</title>
    <url>/p/77e1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/756/" target="_blank" rel="noopener">Day13 AcWing 754. 平方矩阵 II</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>找规律</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/755/" target="_blank" rel="noopener">AcWing 753. 平方矩阵 I</a></li>
<li><a href="https://www.acwing.com/problem/content/757/" target="_blank" rel="noopener">AcWing 755. 平方矩阵 III</a></li>
<li><a href="https://www.acwing.com/problem/content/729/" target="_blank" rel="noopener">AcWing 727. 菱形</a></li>
<li><a href="https://www.acwing.com/problem/" target="_blank" rel="noopener">AcWing 748 - 752</a></li>
<li><a href="https://www.acwing.com/problem/content/3157/" target="_blank" rel="noopener">AcWing 3154. 打印大X</a></li>
<li><a href="https://www.acwing.com/problem/content/120/" target="_blank" rel="noopener">AcWing 118. 分形</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="算法1"><a href="#算法1" class="headerlink" title="算法1"></a>算法1</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n, n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i, k = <span class="number">1</span>; j &lt;= n; j ++, k ++ )</span><br><span class="line">            &#123;</span><br><span class="line">                a[i][j] = k;</span><br><span class="line">                a[j][i] = k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; a[i][j] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="算法2"><a href="#算法2" class="headerlink" title="算法2"></a>算法2</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n, n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt;= <span class="number">1</span>; j -- ) <span class="built_in">cout</span> &lt;&lt; j &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j ++ ) <span class="built_in">cout</span> &lt;&lt; j - i + <span class="number">1</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="算法3"><a href="#算法3" class="headerlink" title="算法3"></a>算法3</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n, n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">abs</span>(i - j) + <span class="number">1</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>数组</tag>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题14】AcWing 1432. 棋盘挑战 </title>
    <url>/p/48e1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1434/" target="_blank" rel="noopener">Day14 AcWing 1432. 棋盘挑战</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>DFS</li>
<li>剪枝</li>
<li>对角线判断<br> $y=x+b$   $\Rightarrow$   $b=y-x+n$(防止负数)<br> $y=-x+b$   $\Rightarrow$   $b=y+x$</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>八皇后问题</li>
<li>Dancing Links</li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li><a href="https://www.acwing.com/problem/content/168/" target="_blank" rel="noopener">AcWing 166. 数独</a></li>
<li><a href="https://www.acwing.com/problem/content/171/" target="_blank" rel="noopener">Acwing 169. 数独2</a></li>
<li><a href="https://www.acwing.com/problem/content/185/" target="_blank" rel="noopener">AcWing 183. 靶形数独</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> col[N], d[N * <span class="number">2</span>], ud[N * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> ans, path[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans ++ ;</span><br><span class="line">        <span class="keyword">if</span> (ans &lt;= <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">cout</span> &lt;&lt; path[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">1</span>; y &lt;= n; y ++ )</span><br><span class="line">        <span class="keyword">if</span> (!col[y] &amp;&amp; !d[x + y] &amp;&amp; !ud[x - y + n])</span><br><span class="line">        &#123;</span><br><span class="line">            col[y] = d[x + y] = ud[x - y + n] = <span class="literal">true</span>;</span><br><span class="line">            path[x] = y;</span><br><span class="line">            dfs(x + <span class="number">1</span>);</span><br><span class="line">            col[y] = d[x + y] = ud[x - y + n] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>DFS</tag>
        <tag>八皇后</tag>
        <tag>Dancing Links</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题15】AcWing 1371. 货币系统</title>
    <url>/p/775e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1373/" target="_blank" rel="noopener">Day15 AcWing 1371. 货币系统</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>背包问题</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>, M = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">LL f[N][M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= v) f[i][j] += f[i][j - v];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[n][m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="一维空间写法"><a href="#一维空间写法" class="headerlink" title="一维空间写法"></a>一维空间写法</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>, M = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">LL f[M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = v; j &lt;= m; j ++ )</span><br><span class="line">            f[j] = f[j] + f[j - v];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题17】AcWing 1353.滑雪场设计</title>
    <url>/p/5370.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1355/" target="_blank" rel="noopener">Day17 AcWing 1353.滑雪场设计</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>枚举，答案在(0,17) - (83,100) 一共84个不同的区间</li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li>小数 <a href="https://www.acwing.com/problem/content/1422/" target="_blank" rel="noopener">1420.通电围栏</a> 三分、模拟退火</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N =<span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> h[N];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt; h[i];</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">1e8</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i+<span class="number">17</span>&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cost=<span class="number">0</span>,l=i,r=i+<span class="number">17</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(h[j]&lt;l) cost+=(l-h[j]) * (l-h[j]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(h[j]&gt;r) cost+=(h[j]-r) * (h[j]-r);</span><br><span class="line">        res=<span class="built_in">min</span>(res,cost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题18】AcWing 1603. 整数集合划分</title>
    <url>/p/7141.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1605/" target="_blank" rel="noopener">Day18 AcWing 1603. 整数集合划分</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>贪心</li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li><a href="https://www.acwing.com/problem/content/173/" target="_blank" rel="noopener">AcWing 171. 送礼物</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N= <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> n, w[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">    <span class="keyword">int</span> s1=<span class="number">0</span>,s2=<span class="number">0</span>;</span><br><span class="line">    sort(w,w+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n/<span class="number">2</span>;i++) s1+=w[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">2</span>;i&lt;n;i++) s2+=w[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n%<span class="number">2</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;s2-s1;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题16】AcWing 1381. 阶乘</title>
    <url>/p/86b7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1383/" target="_blank" rel="noopener">Day16 AcWing 1381. 阶乘</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>设$n!$末尾有$k$个0，求$\frac {n!}{10^k} mod 10$</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/199/" target="_blank" rel="noopener">AcWing 197. 阶乘分解</a></li>
<li><a href="https://blog.csdn.net/select_alter_drop/article/details/80032651" target="_blank" rel="noopener">LaTex数学公式笔记—数学结构</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>, d2 = <span class="number">0</span>, d5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = i;</span><br><span class="line">        <span class="keyword">while</span> (x % <span class="number">2</span> == <span class="number">0</span>) x /= <span class="number">2</span>, d2 ++ ;</span><br><span class="line">        <span class="keyword">while</span> (x % <span class="number">5</span> == <span class="number">0</span>) x /= <span class="number">5</span>, d5 ++ ;</span><br><span class="line">        res = res * x % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; d2 - d5; i ++ ) res = res * <span class="number">2</span> % <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>数论</tag>
        <tag>同余</tag>
        <tag>因式分解</tag>
        <tag>LaTex</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题19】AcWing 482. 合唱队形</title>
    <url>/p/c718.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/484/" target="_blank" rel="noopener">Day19 AcWing 482. 合唱队形</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>dp</li>
<li>最长上升子序列</li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li><a href="https://www.acwing.com/problem/content/897/" target="_blank" rel="noopener">895. 最长上升子序列</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">110</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> h[N];</span><br><span class="line"><span class="keyword">int</span> f[N], g[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;h[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (h[j] &lt; h[i])</span><br><span class="line">                f[i] = <span class="built_in">max</span>(f[i], f[j] + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; i -- )</span><br><span class="line">    &#123;</span><br><span class="line">        g[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &gt; i; j -- )</span><br><span class="line">            <span class="keyword">if</span> (h[j] &lt; h[i])</span><br><span class="line">                g[i] = <span class="built_in">max</span>(g[i], g[j] + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) res = <span class="built_in">max</span>(res, f[i] + g[i] - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n - res);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题1】AcWing 104. 货仓选址</title>
    <url>/p/a74f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/106/" target="_blank" rel="noopener">Day1 AcWing 104. 货仓选址</a></p>
<a id="more"></a>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>中位数是最优解</p>
<h4 id="相关题目"><a href="#相关题目" class="headerlink" title="相关题目"></a>相关题目</h4><ul>
<li>一维拓展二维：<a href="https://www.acwing.com/problem/content/3170/" target="_blank" rel="noopener">3167. 星星还是树</a></li>
<li>拓展n维：模拟退火算法</li>
</ul>
<h4 id="拓展知识"><a href="#拓展知识" class="headerlink" title="拓展知识"></a>拓展知识</h4><ul>
<li>将第n个数放在正确的位置上<a href="https://blog.csdn.net/sugarbliss/article/details/88050145" target="_blank" rel="noopener">nth_element</a></li>
<li><code>nth_element(nums.begin(),nums.begin()+k,nums.end(),greater&lt;int&gt;());</code> 第k大的数</li>
<li>位运算 i&gt;&gt;1</li>
<li>for() shift 9 0，快速退出括号</li>
</ul>
<h4 id="nth-element拓展"><a href="#nth-element拓展" class="headerlink" title="nth_element拓展"></a>nth_element拓展</h4><ol>
<li><a href="https://leetcode-cn.com/problems/sliding-window-median/submissions/" target="_blank" rel="noopener">2021/2/3 lc 480.滑动窗口中位数</a></li>
<li>直接将求完的nth_element保存，不要连续求两次</li>
<li><del>若需要将两个数据放在正确的位置，先对后面的数求nth_element，再求前面的</del><br><code>nth_element(nums.begin(),nums.begin()+n+1,nums.end());</code><br><code>nth_element(nums.begin(),nums.begin()+n,nums.end());</code></li>
<li><del>先排前面再排后面，会导致前面已经排好序的位置被打乱。</del></li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">7</span> <span class="number">1</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">5</span> <span class="comment">//初始</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="comment">//先排n</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="comment">//再排n+1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="comment">//正确排序</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">7</span> <span class="number">1</span> <span class="number">3</span> <span class="number">8</span> <span class="number">4</span> <span class="number">5</span> <span class="comment">//初始</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="comment">//先排n+1</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="comment">//再排n</span></span><br></pre></td></tr></table></figure>

<h4 id="写法1-O-nlogn"><a href="#写法1-O-nlogn" class="headerlink" title="写法1  $O(nlogn)$"></a>写法1  $O(nlogn)$</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    sort(a, a + n);</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) res += <span class="built_in">abs</span>(a[i] - a[n / <span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="写法2-O-nlogn"><a href="#写法2-O-nlogn" class="headerlink" title="写法2  $O(nlogn)$"></a>写法2  $O(nlogn)$</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    sort(a, a + n);</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) res += <span class="built_in">abs</span>(a[i] - a[i / <span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="写法3-O-n"><a href="#写法3-O-n" class="headerlink" title="写法3  $O(n)$"></a>写法3  $O(n)$</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    nth_element(a, a + n / <span class="number">2</span>, a + n);</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) res += <span class="built_in">abs</span>(a[i] - a[n / <span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>绝对值不等式</tag>
        <tag>nth_element</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题20】AcWing 420. 火星人</title>
    <url>/p/9ef7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/422/" target="_blank" rel="noopener">Day20 AcWing 420. 火星人</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li><a href="https://blog.csdn.net/ac_gibson/article/details/45308645" target="_blank" rel="noopener">next_permutation 全排列</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="next-permutation"><a href="#next-permutation" class="headerlink" title="next_permutation"></a>next_permutation</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q[i]);</span><br><span class="line">    <span class="keyword">while</span>(m--) next_permutation(q,q+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="手动实现next-permutation"><a href="#手动实现next-permutation" class="headerlink" title="手动实现next_permutation"></a>手动实现next_permutation</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (q[k - <span class="number">1</span>] &gt; q[k]) k -- ;</span><br><span class="line">        k -- ;</span><br><span class="line">        <span class="keyword">int</span> t = k;</span><br><span class="line">        <span class="keyword">while</span> (t + <span class="number">1</span> &lt; n &amp;&amp; q[t + <span class="number">1</span>] &gt; q[k]) t ++ ;</span><br><span class="line">        swap(q[t], q[k]);</span><br><span class="line">        reverse(q + k + <span class="number">1</span>, q + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">printf</span>(<span class="string">"%d "</span>, q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>next_permutation</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题21】AcWing 1015. 摘花生</title>
    <url>/p/680f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/1017/" target="_blank" rel="noopener">Day21 AcWing 1015. 摘花生</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>dp</li>
<li>滚动数组，单数<code>&amp;1</code>就是用数组第1行，双数就是第2行<br><code>3&amp;1=1</code>,<code>2&amp;1=0</code></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="算法1-dp-O-n-2"><a href="#算法1-dp-O-n-2" class="headerlink" title="算法1 dp $O(n^2)$"></a>算法1 dp $O(n^2)$</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> a[N][N], f[N][N];</span><br><span class="line"><span class="keyword">int</span> q, row, col;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; row &gt;&gt; col;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= row; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= col; j++)&#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// f[i][j]指的是到(i, j)的最大花生数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= row; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= col; j++)&#123;</span><br><span class="line">                f[i][j] = <span class="built_in">max</span>(f[i<span class="number">-1</span>][j], f[i][j<span class="number">-1</span>]) + a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; f[row][col] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="算法2-滚动数组，-O-n"><a href="#算法2-滚动数组，-O-n" class="headerlink" title="算法2 滚动数组，$O(n)$"></a>算法2 滚动数组，$O(n)$</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][N], f[<span class="number">2</span>][N], q, n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; q;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; a[i&amp;<span class="number">1</span>][j];</span><br><span class="line">                f[i&amp;<span class="number">1</span>][j] = <span class="built_in">max</span>(f[i&amp;<span class="number">1</span>][j<span class="number">-1</span>], f[(i<span class="number">-1</span>)&amp;<span class="number">1</span>][j]) + a[i&amp;<span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; f[n&amp;<span class="number">1</span>][m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(f, <span class="number">0</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题23】AcWing 126. 最大的和</title>
    <url>/p/7df7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/128/" target="_blank" rel="noopener">Day23 AcWing 126. 最大的和</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>前缀和</li>
<li>枚举</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 -2 -7  0</span><br><span class="line">9  2 -6  2</span><br><span class="line">-4 1 -4  1</span><br><span class="line">-1 8  0 -2</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> [i-1] [k]</span><br><span class="line"> 0  -2 -7  0 </span><br><span class="line"> i</span><br><span class="line"> 9   2 -6  2 </span><br><span class="line"></span><br><span class="line">-4   1 -4  1 </span><br><span class="line"> j   k</span><br><span class="line">-1   8  0 -2  [j][k]</span><br></pre></td></tr></table></figure>

<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li>一维版本  <a href="https://www.acwing.com/problem/content/50/" target="_blank" rel="noopener">55. 连续子数组的最大和</a></li>
<li><a href="https://www.acwing.com/problem/content/1053/" target="_blank" rel="noopener">1051. 最大的和</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; g[i][j];</span><br><span class="line">            g[i][j] += g[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = INT_MIN;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )  <span class="comment">//上界</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n; j ++ )  <span class="comment">//下界</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> last = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k ++ )  <span class="comment">//向右枚举</span></span><br><span class="line">            &#123;</span><br><span class="line">                last = <span class="built_in">max</span>(last, <span class="number">0</span>) + g[j][k] - g[i - <span class="number">1</span>][k]; </span><br><span class="line">                <span class="comment">//g[j][k]为一维数组枚举的每个元素 g[i-1][k]为上界上方的元素</span></span><br><span class="line">                <span class="comment">//减去之后的前缀和才是当前上下界矩阵的前缀和</span></span><br><span class="line">                res = <span class="built_in">max</span>(res, last);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>前缀和</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题24】AcWing 426. 开心的金明</title>
    <url>/p/beff.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/428/" target="_blank" rel="noopener">Day24 AcWing 426. 开心的金明</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>01背包</li>
<li>转换后<ul>
<li>总钱数相当于背包总容量</li>
<li>每件物品的价格相当于体积</li>
<li>每件物品的价格乘以重要度相当于价值</li>
</ul>
</li>
<li>01背包问题的时间复杂度是 $O(nm)$，其中 $n$ 是物品个数，$m$ 是背包容量。</li>
</ol>
<h4 id="类似题目"><a href="#类似题目" class="headerlink" title="类似题目"></a>类似题目</h4><ol>
<li><a href="https://www.acwing.com/problem/content/2/" target="_blank" rel="noopener">01背包问题</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>, M = <span class="number">30010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> f[M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v, w;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        w = v * w;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= v; j -- )</span><br><span class="line">            f[j] = <span class="built_in">max</span>(f[j], f[j - v] + w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>背包</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题25】AcWing 703. 数独检查</title>
    <url>/p/4f39.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/705/" target="_blank" rel="noopener">Day25 AcWing 703. 数独检查</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/solution/content/3843/" target="_blank" rel="noopener">dancing links</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> w[N][N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check_row</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = w[i][j];</span><br><span class="line">            <span class="keyword">if</span> (t &lt; <span class="number">1</span> || t &gt; m) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (st[t]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            st[t] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check_col</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = w[j][i];</span><br><span class="line">            <span class="keyword">if</span> (t &lt; <span class="number">1</span> || t &gt; m) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (st[t]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            st[t] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check_cell</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; m; x += n)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; m; y += n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> dx = <span class="number">0</span>; dx &lt; n; dx ++ )</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> dy = <span class="number">0</span>; dy &lt; n; dy ++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> t = w[x + dx][y + dy];</span><br><span class="line">                    <span class="keyword">if</span> (t &lt; <span class="number">1</span> || t &gt; m) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (st[t]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    st[t] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> C = <span class="number">1</span>; C &lt;= T; C ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        m = n * n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i][j]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (check_row() &amp;&amp; check_col() &amp;&amp; check_cell())</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case #%d: Yes\n"</span>, C);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case #%d: No\n"</span>, C);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
        <tag>Algorithm</tag>
        <tag>Dancing Links</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题26】AcWing 1101. 献给阿尔吉侬的花束</title>
    <url>/p/c4b8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/1103/" target="_blank" rel="noopener">Day26 AcWing 1101. 献给阿尔吉侬的花束</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>bfs求最短路径<ul>
<li>队列实现bfs</li>
</ul>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> r,c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> maze[N][N];</span><br><span class="line"><span class="keyword">int</span> dist[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(PII start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;PII&gt; q;</span><br><span class="line">    q.push(start);</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    dist[start.x][start.y]=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x=t.x+dx[i],y=t.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt; r &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; c &amp;&amp; maze[x][y] != <span class="string">'#'</span> &amp;&amp; dist[x][y] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[x][y] = dist[t.x][t.y] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (maze[x][y] == <span class="string">'E'</span>)</span><br><span class="line">                    <span class="keyword">return</span> dist[x][y];</span><br><span class="line">                q.push(&#123;x, y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;r&gt;&gt;c;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        PII start;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;c;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;maze[i][j];</span><br><span class="line">                <span class="keyword">if</span>(maze[i][j]==<span class="string">'S'</span>) start=&#123;i,j&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=bfs(start);</span><br><span class="line">        <span class="keyword">if</span>(ans!=<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"oop!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>队列</tag>
        <tag>BFS</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题28】AcWing 433. ISBN号码</title>
    <url>/p/b994.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/435/" target="_blank" rel="noopener">Day28 AcWing 433. ISBN号码</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>字符串操作</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>string.back()</li>
<li>puts</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> summ=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c=<span class="string">'X'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=<span class="string">'-'</span>&amp;&amp;n&lt;<span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            summ+=(s[i]-<span class="string">'0'</span>)*n;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    summ%=<span class="number">11</span>;</span><br><span class="line">    <span class="keyword">if</span>(summ&lt;<span class="number">10</span>) c=<span class="string">'0'</span>+summ;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(c==s.back()) <span class="built_in">puts</span>(<span class="string">"Right"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        s.back()=c;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>字符串</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题27】AcWing 89. a^b</title>
    <url>/p/f7b0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/91/" target="_blank" rel="noopener">Day27 AcWing 89. a^b</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li><a href="https://blog.csdn.net/qq_19782019/article/details/85621386" target="_blank" rel="noopener">快速幂算法</a></li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2035" target="_blank" rel="noopener">求A^B的最后三位数表示的整数</a><blockquote>
<p>求后三位 %1000 两位 %100 </p>
</blockquote>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qmi</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span> % p; <span class="comment">//模为1时 res=0</span></span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = (LL)res * a % p; <span class="comment">//&amp;与运算 b&amp;1==0 偶数 / b&amp;1==1奇数</span></span><br><span class="line">        a = (LL)a * a % p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, p;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; p;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; qmi(a, b, p) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>数论</tag>
        <tag>快速幂</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题29】AcWing 428. 数列</title>
    <url>/p/d77e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/430/" target="_blank" rel="noopener">Day29 AcWing 428. 数列</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>二进制映射</li>
<li>位运算<br><a href="https://www.acwing.com/solution/content/4421/" target="_blank" rel="noopener">算法</a><br>将序列中的每个数，唯一映射到一个二进制数：</li>
</ol>
<ul>
<li>如果第 $i$ 个方幂存在，则二进制位的第 $i$ 位为1，否则为0<br>由上述引理，序列中任意两数的大小关系，和映射成二进制数后的大小关系相同。<br>因此我们可以先求出第 $n$ 个二进制数，然后再反射出原数即可。</li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">get</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b -- ) res *= a;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (n &gt;&gt; i &amp; <span class="number">1</span>)</span><br><span class="line">            res += <span class="built_in">get</span>(k, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>位运算</tag>
        <tag>二进制映射</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题2】AcWing 898. 数字三角形</title>
    <url>/p/4030.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/900/" target="_blank" rel="noopener">Day2 AcWing 898. 数字三角形</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>动态规划</li>
<li>自下向上的dp更简单  </li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/1017/" target="_blank" rel="noopener">1015. 摘花生</a></li>
<li><a href="https://www.acwing.com/problem/content/1029/" target="_blank" rel="noopener">1027. 方格取数</a></li>
<li><a href="https://www.acwing.com/problem/content/384/" target="_blank" rel="noopener">382. K取方格数</a></li>
</ol>
<h4 id="个人方法"><a href="#个人方法" class="headerlink" title="个人方法"></a>个人方法</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[N][N];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=i; j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][j]+=<span class="built_in">max</span>(a[i+<span class="number">1</span>][j],a[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="标准方法"><a href="#标准方法" class="headerlink" title="标准方法"></a>标准方法</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">510</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j ++ )</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; f[i][j];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i; i -- )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j ++ )</span><br><span class="line">            f[i][j] += <span class="built_in">max</span>(f[i + <span class="number">1</span>][j], f[i + <span class="number">1</span>][j + <span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题30】AcWing 421. 陶陶摘苹果</title>
    <url>/p/fbd1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/423/" target="_blank" rel="noopener">Day30 AcWing 421. 陶陶摘苹果</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
<li>水水水 </li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> h=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;h;</span><br><span class="line">    h+=<span class="number">30</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) <span class="keyword">if</span>(h&gt;=a[i]) cnt++;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题31】AcWing 417. 不高兴的津津</title>
    <url>/p/d97e.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/419/" target="_blank" rel="noopener">Day31 AcWing 417. 不高兴的津津</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
<li>水水水 </li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> s[N],m[N];</span><br><span class="line"><span class="keyword">int</span> value,day=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">7</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i]&gt;&gt;m[i];</span><br><span class="line">        m[i]+=s[i];</span><br><span class="line">        <span class="keyword">if</span>(m[i]&gt;<span class="number">8</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(value&lt;m[i]<span class="number">-8</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                value=m[i]<span class="number">-8</span>;</span><br><span class="line">                day=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;day&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题33】AcWing 425. 明明的随机数</title>
    <url>/p/5749.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/427/" target="_blank" rel="noopener">Day33 AcWing 425. 明明的随机数</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>STL:set集合 自动去重、排序（从小到大） </li>
<li>插入数据 <code>insert()</code> 时间复杂度$O(n)$</li>
<li>获取集合大小 <code>size()</code> 时间复杂度$O(1)$</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>自定义排序方式<blockquote>
<p><a href="https://www.acwing.com/problem/content/431/" target="_blank" rel="noopener">【每日一题9】AcWing 429. 奖学金</a></p>
</blockquote>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        s.insert(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.<span class="built_in">size</span>()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i: s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>STL</tag>
        <tag>set</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题35】AcWing 441. 数字统计</title>
    <url>/p/7acb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/443/" target="_blank" rel="noopener">Day35 AcWing 441. 数字统计</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>枚举</li>
<li>取模</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; l &gt;&gt; r;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j; j /= <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> (j % <span class="number">10</span> == <span class="number">2</span>)</span><br><span class="line">                res ++ ;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题34】AcWing 458. 比例简化</title>
    <url>/p/e10d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/460/" target="_blank" rel="noopener">Day34 AcWing 458. 比例简化</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>枚举</li>
<li><a href="https://www.acwing.com/solution/content/3894/" target="_blank" rel="noopener">题解</a></li>
</ol>
<p>由于 $L$ 在100以内，枚举 $A’$ ,$B’$ 的所有组合，然后进行判断  </p>
<ul>
<li>$\frac {A’} {B’}$是否大于等于$\frac A B$，并且最小</li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> A, B, L;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B &gt;&gt; L;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= L; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= L; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (gcd(i, j) == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">double</span> x = i * <span class="number">1.0</span> / j;</span><br><span class="line">                <span class="keyword">double</span> X = A * <span class="number">1.0</span> / B;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (x &gt;= X &amp;&amp; x - X &lt; delta)</span><br><span class="line">                &#123;</span><br><span class="line">                    delta = x - X;</span><br><span class="line">                    a = i, b = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">' '</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>枚举</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题36】AcWing 449. 质因数分解</title>
    <url>/p/7856.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/451/" target="_blank" rel="noopener">Day36 AcWing 449. 质因数分解</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>暴力枚举</li>
<li>求模</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; ; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n / i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题37】AcWing 445. 数字反转</title>
    <url>/p/92b3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/447/" target="_blank" rel="noopener">Day37 AcWing 445. 数字反转</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
<li>判断正负</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>字符串操作<code>str.back()</code></li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> a=<span class="string">"abcd"</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>获取字符串最后一个字符</span><br><span class="line"><span class="keyword">auto</span> b=a.back(); <span class="comment">//结果为 b='d';</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>修改字符串最后一个字符</span><br><span class="line">a.back()=<span class="string">'!'</span>; <span class="comment">//结果为 a="abc!";</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>获取字符串第一个字符</span><br><span class="line"><span class="keyword">auto</span> b=a.front(); <span class="comment">//结果为 b='a';</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>修改字符串第一个字符</span><br><span class="line">a.front()=<span class="string">'!'</span>; <span class="comment">//结果为 a="!bcd";</span></span><br></pre></td></tr></table></figure>

<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">0</span>)&#123;  <span class="comment">//判断负数</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">'-'</span>;</span><br><span class="line">        n=-n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;n;n/=<span class="number">10</span>) res=res*<span class="number">10</span>+n%<span class="number">10</span>;<span class="comment">//数字反转直接忽略前导0，方便</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="方法二-STL"><a href="#方法二-STL" class="headerlink" title="方法二 STL"></a>方法二 STL</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"></span><br><span class="line">    reverse(str.<span class="built_in">begin</span>(), str.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">if</span> (str.back() == <span class="string">'-'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">'-'</span>;</span><br><span class="line">        str.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//去掉前导0</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (k + <span class="number">1</span> &lt; str.<span class="built_in">size</span>() &amp;&amp; str[k] == <span class="string">'0'</span>) k ++ ;</span><br><span class="line">    <span class="keyword">while</span> (k &lt; str.<span class="built_in">size</span>()) <span class="built_in">cout</span> &lt;&lt; str[k ++ ];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>字符串</tag>
        <tag>模拟</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题38】1477. 拼写正确</title>
    <url>/p/aa83.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/1479/" target="_blank" rel="noopener">Day38 AcWing 1477. 拼写正确</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : n) s += c - <span class="string">'0'</span>;  <span class="comment">// 计算每一位的总和</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> str = to_string(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> <span class="keyword">word</span>[<span class="number">10</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">        <span class="string">"zero"</span>, <span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>, <span class="string">"four"</span>,</span><br><span class="line">        <span class="string">"five"</span>, <span class="string">"six"</span>, <span class="string">"seven"</span>, <span class="string">"eight"</span>, <span class="string">"nine"</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="keyword">word</span>[str[<span class="number">0</span>] - <span class="string">'0'</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; str.<span class="built_in">size</span>(); i ++ ) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; <span class="keyword">word</span>[str[i] - <span class="string">'0'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题39】3208. Z字形扫描</title>
    <url>/p/af2f.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3211/" target="_blank" rel="noopener">Day39 AcWing 3208. Z字形扫描</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<p><img src="https://github.com/Olvi73/Blog-Photo/raw/master/Day39%20AcWing%203208.png" alt></p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">510</span>;</span><br><span class="line"><span class="keyword">int</span> q[N][N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;q[i][j];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n * <span class="number">2</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j ++ )</span><br><span class="line">                <span class="keyword">if</span> (j &gt;= <span class="number">1</span> &amp;&amp; j &lt;= n &amp;&amp; i - j &gt;= <span class="number">1</span> &amp;&amp; i - j &lt;= n)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d "</span>, q[j][i - j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j; j -- )</span><br><span class="line">                <span class="keyword">if</span> (j &gt;= <span class="number">1</span> &amp;&amp; j &lt;= n &amp;&amp; i - j &gt;= <span class="number">1</span> &amp;&amp; i - j &lt;= n)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d "</span>, q[j][i - j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题3】AcWing 756. 蛇形矩阵</title>
    <url>/p/bb43.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/758/" target="_blank" rel="noopener">Day3 AcWing 756. 蛇形矩阵</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>偏移量 <code>int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};</code></li>
<li>动点d，移动方式：右下左上</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/846/" target="_blank" rel="noopener">AcWing 844. 走迷宫</a></li>
<li><a href="https://www.acwing.com/problem/content/1104/" target="_blank" rel="noopener">AcWing 1102. 移动骑士</a></li>
<li><a href="https://www.acwing.com/problem/content/1423/" target="_blank" rel="noopener">AcWing 1421. 威斯康星方形牧场</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> q[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, d = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n * m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        q[x][y] = i;</span><br><span class="line">        <span class="keyword">int</span> a = x + dx[d], b = y + dy[d];</span><br><span class="line">        <span class="keyword">if</span> (a &lt; <span class="number">0</span> || a &gt;= n || b &lt; <span class="number">0</span> || b &gt;= m || q[a][b])</span><br><span class="line">        &#123;</span><br><span class="line">            d = (d + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">            a = x + dx[d], b = y + dy[d];</span><br><span class="line">        &#125;</span><br><span class="line">        x = a, y = b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; q[i][j] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
        <tag>Algorithm</tag>
        <tag>数组</tag>
        <tag>偏移量技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题40】3203. 画图</title>
    <url>/p/cce9.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3206/" target="_blank" rel="noopener">Day40 AcWing 3203. 画图</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>暴力模拟</li>
<li>bool数组</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li>扫描线 <a href="https://www.acwing.com/problem/content/description/249/" target="_blank" rel="noopener">247. 亚特兰蒂斯</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> st[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x1, y1, x2, y2;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = x1; i &lt; x2; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = y1; j &lt; y2; j ++ )</span><br><span class="line">                st[i][j] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j ++ )</span><br><span class="line">            res += st[i][j];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题41】3232. 最大波动</title>
    <url>/p/b57d.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3235/" target="_blank" rel="noopener">Day41 AcWing 3232. 最大波动</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> b=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="built_in">abs</span>(a[i]-b);</span><br><span class="line">        ans=cur&gt;ans?cur:ans;</span><br><span class="line">        b=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题42】3227. 折点计数</title>
    <url>/p/5b0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3230/" target="_blank" rel="noopener">Day42 AcWing 3227. 折点计数</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">3</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> b,c=<span class="number">0</span>;</span><br><span class="line">    b=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c=a[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;b&amp;&amp;a[i]&gt;c) cnt++;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;b&amp;&amp;a[i]&lt;c) cnt++;</span><br><span class="line">        b=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>yxc</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; q[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = q[i - <span class="number">1</span>], b = q[i], c = q[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (b &lt; a &amp;&amp; b &lt; c || b &gt; a &amp;&amp; b &gt; c)</span><br><span class="line">            res ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题43】3257. 跳一跳</title>
    <url>/p/c8c8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/3260/" target="_blank" rel="noopener">Day43 AcWing 3257. 跳一跳</a></p>
<a id="more"></a>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="keyword">int</span> cur=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s,s!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p+=<span class="number">1</span>;</span><br><span class="line">            cur=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cur+=<span class="number">2</span>;</span><br><span class="line">            p+=cur;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;p&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题5】AcWing 1346. 回文平方</title>
    <url>/p/ecc.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1348/" target="_blank" rel="noopener">Day5 AcWing 1346. 回文平方</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>十进制转化成其他进制：短除法</li>
<li>其他进制转化成十进制：秦九韶算法</li>
<li>其他进制转化成其他进制<br> （1）十进制过渡<br>（2）短除法</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/description/126/" target="_blank" rel="noopener">AcWing 124. 数的进制转换</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">9</span>) <span class="keyword">return</span> x+<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> x<span class="number">-10</span>+<span class="string">'A'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">base</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> num;</span><br><span class="line">    <span class="keyword">while</span>(n)num+=<span class="built_in">get</span>(n%b),n/=b;</span><br><span class="line">    reverse(num.<span class="built_in">begin</span>(),num.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="built_in">string</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=num.<span class="built_in">size</span>()<span class="number">-1</span>;i&lt;j;i++,j--)</span><br><span class="line">        <span class="keyword">if</span>(num[i]!=num[j])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">300</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> num= base(i*i,b);</span><br><span class="line">        <span class="keyword">if</span>(check(num))</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;base(i,b)&lt;&lt;<span class="string">' '</span>&lt;&lt;num&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题4】AcWing 1113. 红与黑</title>
    <url>/p/b9fb.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/1115/" target="_blank" rel="noopener">Day4 AcWing 1113. 红与黑</a></p>
<a id="more"></a>

<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/search/1/?csrfmiddlewaretoken=XKcNdHqpQVdaTpUaIbRuRbqYkuZsUC8HkFo78ttwVNaC1vaHpBEb9YkXfVaZrvXk&search_content=flood+fill" target="_blank" rel="noopener">flood fill</a><ul>
<li>bfs</li>
<li>dfs</li>
</ul>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="宽搜"><a href="#宽搜" class="headerlink" title="宽搜"></a>宽搜</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> sx, <span class="keyword">int</span> sy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;PII&gt; q;</span><br><span class="line">    q.push(&#123;sx, sy&#125;);</span><br><span class="line">    g[sx][sy] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        res ++ ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x = t.x + dx[i], y = t.y + dy[i];</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= n || y &lt; <span class="number">0</span> || y &gt;= m || g[x][y] != <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">            g[x][y] = <span class="string">'#'</span>;</span><br><span class="line">            q.push(&#123;x, y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n, n || m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; g[i];</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">                <span class="keyword">if</span> (g[i][j] == <span class="string">'@'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; bfs(x, y) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="深搜"><a href="#深搜" class="headerlink" title="深搜"></a>深搜</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> g[N][N];</span><br><span class="line"><span class="keyword">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    g[x][y] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = x + dx[i], b = y + dy[i];</span><br><span class="line">        <span class="keyword">if</span> (a &gt;= <span class="number">0</span> &amp;&amp; a &lt; n &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; m &amp;&amp; g[a][b] == <span class="string">'.'</span>)</span><br><span class="line">            res += dfs(a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n, n || m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; g[i];</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">                <span class="keyword">if</span> (g[i][j] == <span class="string">'@'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dfs(x, y) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>DFS</tag>
        <tag>Floor Fill</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题6】AcWing 680. 剪绳子</title>
    <url>/p/d313.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/682/" target="_blank" rel="noopener">Day6 AcWing 680. 剪绳子</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>浮点二分</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/792/" target="_blank" rel="noopener">AcWing 790. 数的三次方根</a></li>
<li>整数二分</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> w[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            cnt+=w[i]/mid;</span><br><span class="line">    <span class="keyword">return</span> cnt&gt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;w[i];</span><br><span class="line">    <span class="keyword">double</span> l=<span class="number">0</span>,r=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">1e-4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>,r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题7】AcWing 1227. 分巧克力  </title>
    <url>/p/80a7.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/description/1229/" target="_blank" rel="noopener">Day7 AcWing 1227. 分巧克力  </a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li><p><a href="https://www.acwing.com/blog/content/31/" target="_blank" rel="noopener">整数二分</a></p>
<ul>
<li><p>向下取整</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>向上取整</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.acwing.com/problem/content/791/" target="_blank" rel="noopener">AcWing 789. 数的范围</a></li>
<li><a href="https://www.acwing.com/problem/content/20/" target="_blank" rel="noopener">AcWing 22. 旋转数组的最小数字</a>，不具有单调性，但具有二段性</li>
<li><a href="https://www.acwing.com/problem/content/description/115/" target="_blank" rel="noopener">AcWing 113. 特殊排序</a>，没有单调性，但可以二分</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> h[N], w[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        res += (LL)h[i] / mid * (w[i] / mid);</span><br><span class="line">        <span class="keyword">if</span> (res &gt;= m) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;h[i], &amp;w[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题8】AcWing 422. 校门外的树</title>
    <url>/p/6bc0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/424/" target="_blank" rel="noopener">Day8 AcWing 422. 校门外的树</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>区间合并</li>
<li>(暴力) bool数组遍历</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><p>区间合并算法</p>
</li>
<li><p>bool数组初始化方法</p>
<ul>
<li><p>全部初始化为false  </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> a[N]=&#123;<span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>全部初始化为true</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> a[N];</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">1</span>,<span class="keyword">sizeof</span>(a));<span class="comment">//#include&lt;cstring&gt; or #include&lt;bits/stdc++.h&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>注：bool hashTable[256] = {1};不报错，这样只会把第一个bool值初始化为true，其他都是false  </p>
</blockquote>
</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="bool数组"><a href="#bool数组" class="headerlink" title="bool数组"></a>bool数组</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10010</span>;</span><br><span class="line"><span class="keyword">bool</span> a[N];</span><br><span class="line"><span class="keyword">int</span> l,m;</span><br><span class="line"><span class="keyword">int</span> lp,rp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=l;i++)</span><br><span class="line">    a[i]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;m;</span><br><span class="line">    init(l);</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;lp&gt;&gt;rp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=lp;i&lt;=rp;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=l;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="literal">true</span>)</span><br><span class="line">        res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="bool标准"><a href="#bool标准" class="headerlink" title="bool标准"></a>bool标准</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i ++ ) st[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (!st[i])</span><br><span class="line">            res ++ ;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="区间合并"><a href="#区间合并" class="headerlink" title="区间合并"></a>区间合并</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">PII seg[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">cin</span> &gt;&gt; seg[i].first &gt;&gt; seg[i].second;</span><br><span class="line"></span><br><span class="line">    sort(seg, seg + n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = m + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> st = seg[<span class="number">0</span>].first, ed = seg[<span class="number">0</span>].second;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (seg[i].first &lt;= ed) ed = <span class="built_in">max</span>(seg[i].second, ed);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            res -= ed - st + <span class="number">1</span>;</span><br><span class="line">            st = seg[i].first, ed = seg[i].second;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    res -= ed - st + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>模拟</tag>
        <tag>Algorithm</tag>
        <tag>区间合并</tag>
        <tag>memset</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日一题9】AcWing 429. 奖学金</title>
    <url>/p/e3b8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.acwing.com/problem/content/431/" target="_blank" rel="noopener">Day9 AcWing 429. 奖学金</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>重载小于号</li>
<li>自定义比较函数</li>
<li>lambda表达式写法</li>
</ol>
<h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><ol>
<li><a href="https://www.luogu.com.cn/problem/T160509" target="_blank" rel="noopener">T160509 C - 志愿者</a></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="重载小于号"><a href="#重载小于号" class="headerlink" title="重载小于号"></a>重载小于号</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, sum, a, b, c;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Person&amp; t) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum != t.sum) <span class="keyword">return</span> sum &gt; t.sum;</span><br><span class="line">        <span class="keyword">if</span> (a != t.a) <span class="keyword">return</span> a &gt; t.a;</span><br><span class="line">        <span class="keyword">return</span> id &lt; t.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        q[i] = &#123;i, a + b + c, a, b, c&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(q + <span class="number">1</span>, q + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; q[i].id &lt;&lt; <span class="string">' '</span> &lt;&lt; q[i].sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="自定义比较函数"><a href="#自定义比较函数" class="headerlink" title="自定义比较函数"></a>自定义比较函数</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, sum, a, b, c;</span><br><span class="line">&#125;q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Person&amp; a, Person&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">    <span class="keyword">if</span> (a.a != b.a) <span class="keyword">return</span> a.a &gt; b.a;</span><br><span class="line">    <span class="keyword">return</span> a.id &lt; b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        q[i] = &#123;i, a + b + c, a, b, c&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(q + <span class="number">1</span>, q + n + <span class="number">1</span>, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; q[i].id &lt;&lt; <span class="string">' '</span> &lt;&lt; q[i].sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="lambda表达式写法"><a href="#lambda表达式写法" class="headerlink" title="lambda表达式写法"></a>lambda表达式写法</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id, sum, a, b, c;</span><br><span class="line"></span><br><span class="line">&#125;q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, c;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        q[i] = &#123;i, a + b + c, a, b, c&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(q + <span class="number">1</span>, q + n + <span class="number">1</span>, [](Person&amp; a, Person&amp; b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">        <span class="keyword">if</span> (a.a != b.a) <span class="keyword">return</span> a.a &gt; b.a;</span><br><span class="line">        <span class="keyword">return</span> a.id &lt; b.id;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i ++ )</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; q[i].id &lt;&lt; <span class="string">' '</span> &lt;&lt; q[i].sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>AcWing</tag>
        <tag>Algorithm</tag>
        <tag>重载运算符</tag>
        <tag>lambda表达式</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【洛谷】P1002 过河卒</title>
    <url>/p/2142.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.luogu.com.cn/problem/P1002" target="_blank" rel="noopener">P1002 [NOIP2002 普及组] 过河卒</a></p>
<a id="more"></a>

<p><img src="https://cdn.luogu.com.cn/upload/image_hosting/vg6k477j.png" alt="过河卒"></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h5 id="dp-动态规划"><a href="#dp-动态规划" class="headerlink" title="dp/动态规划"></a>dp/动态规划</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">A <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> X <span class="number">0</span> X <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> X <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> X <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> M <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> X <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> X <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> X <span class="number">0</span> X <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> B</span><br></pre></td></tr></table></figure>

 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> X <span class="number">1</span> X <span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> X <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> X <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> M <span class="number">1</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> X <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> X <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> X <span class="number">1</span> X <span class="number">0</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>

<p><code>map[i][j] = map[i - 1][j] + map[i][j - 1];</code></p>
<h5 id="dfs"><a href="#dfs" class="headerlink" title="dfs"></a><del>dfs</del></h5><ol>
<li>得分 60 Unaccepted</li>
<li>#3 TLE #4 TLE</li>
<li>P1002_3.in <code>20 20 4 0</code></li>
<li>P1002_3.out <code>56477364570</code></li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="dp"><a href="#dp" class="headerlink" title="dp"></a>dp</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, x, y;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">map</span>[<span class="number">42</span>][<span class="number">42</span>] = &#123;&#123;<span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">bool</span> horse[<span class="number">42</span>][<span class="number">42</span>];</span><br><span class="line"><span class="keyword">int</span> hx[<span class="number">9</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-2</span>&#125;,</span><br><span class="line">    hy[<span class="number">9</span>] = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> xx = x + hx[i], yy = y + hy[i];</span><br><span class="line">        <span class="keyword">if</span> (xx &gt; n || xx &lt; <span class="number">0</span> || yy &gt; m || yy &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        horse[xx][yy] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!horse[<span class="number">0</span>][++k] &amp;&amp; k &lt;= m)</span><br><span class="line">        <span class="built_in">map</span>[<span class="number">0</span>][k] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!horse[++l][<span class="number">0</span>] &amp;&amp; l &lt;= n)</span><br><span class="line">        <span class="built_in">map</span>[l][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">if</span> (!horse[i][j])</span><br><span class="line">                <span class="built_in">map</span>[i][j] = <span class="built_in">map</span>[i - <span class="number">1</span>][j] + <span class="built_in">map</span>[i][j - <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">map</span>[n][m] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="dfs-偏移量技巧-60分"><a href="#dfs-偏移量技巧-60分" class="headerlink" title="dfs+偏移量技巧 60分"></a>dfs+偏移量技巧 60分</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">21</span>;</span><br><span class="line"><span class="keyword">int</span> dx[]=&#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">2</span>,&#125;, dy[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ddx[]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,ddy[]=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> p[N][N];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(p[i],<span class="number">0</span>,<span class="keyword">sizeof</span>(p[i]));</span><br><span class="line">    &#125;	</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">horse</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a &lt;= n &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt;= m)</span><br><span class="line">        p[a][b]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a=x+ddx[i],b=y+ddy[i];</span><br><span class="line">        <span class="keyword">if</span>(a==n <span class="keyword">and</span> b==m)</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">if</span>(a &gt;= <span class="number">0</span> &amp;&amp; a &lt;= n &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt;= m &amp;&amp;p[a][b]!=<span class="number">1</span>)</span><br><span class="line">            dfs(a,b);	</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    init();</span><br><span class="line">    horse(x,y);</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
        <tag>DFS</tag>
        <tag>dp</tag>
        <tag>偏移量技巧</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title>【洛谷】T160513 E - 运气</title>
    <url>/p/fd33.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.luogu.com.cn/problem/T160513" target="_blank" rel="noopener">T160513 E - 运气</a></p>
<a id="more"></a>


<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>dfs取数，然后判断当前数是否为符合题目要求</li>
<li>将枚举的所有数字组合成一个整数  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum=sum*<span class="number">10</span>+s[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ol>
<li>7.70s/632.00KB/487B C++</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">15</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        temp=temp*<span class="number">10</span>+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(temp%k==<span class="number">0</span>)res++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==n)&#123;</span><br><span class="line">        check();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)&#123;</span><br><span class="line">        a[u]=i;</span><br><span class="line">        dfs(u+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res%mod&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>8.17s /  624.00KB /  466B C++11</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> MOD=(<span class="number">1000000000</span>+<span class="number">7</span>);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(len==n)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            sum=sum*<span class="number">10</span>+s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(sum%k==<span class="number">0</span>)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">            ans=ans%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)&#123;</span><br><span class="line">        s[len]=i;</span><br><span class="line">        dfs(len+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        dfs(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title>【洛谷】第三届传智杯决赛B组</title>
    <url>/p/409.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.luogu.com.cn/contest/42343" target="_blank" rel="noopener">第三届传智杯决赛B组</a></p>
<a id="more"></a>

<h3 id="A-课程"><a href="#A-课程" class="headerlink" title="A 课程"></a>A 课程</h3><p><a href="https://www.luogu.com.cn/problem/T172096?contestId=42343" target="_blank" rel="noopener">T172096 课程</a></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>枚举 </li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        a[t]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        a[t]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">25</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=<span class="number">2</span>) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="B-序列"><a href="#B-序列" class="headerlink" title="B 序列"></a>B 序列</h3><p><a href="https://www.luogu.com.cn/problem/T172097?contestId=42343" target="_blank" rel="noopener">T172097 序列</a></p>
<h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><ol>
<li>枚举</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> n,k;</span><br><span class="line"><span class="keyword">float</span> a[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">float</span> temp=k/a[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;=a[j]) cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C-子串"><a href="#C-子串" class="headerlink" title="C 子串"></a>C 子串</h3><p><a href="https://www.luogu.com.cn/problem/T172098?contestId=42343" target="_blank" rel="noopener">T172098 子串</a></p>
<h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><ol>
<li>模拟+枚举 </li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">500510</span>;</span><br><span class="line"><span class="keyword">char</span> a1[N],b1[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> a[N],<span class="keyword">char</span> b[N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r=<span class="number">0</span>,l=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> head=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[r]==b[l]||a[r]+<span class="number">32</span>==b[l]||a[r]==b[l]+<span class="number">32</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(r==n<span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                r=<span class="number">0</span>;</span><br><span class="line">                head++;</span><br><span class="line">                l=head;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                r++;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            head++;</span><br><span class="line">            r=<span class="number">0</span>;</span><br><span class="line">            l=head;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a1[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) <span class="built_in">cin</span>&gt;&gt;b1[i];</span><br><span class="line">        ans.push_back(check(a1,b1));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:ans) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="D-打牌"><a href="#D-打牌" class="headerlink" title="D 打牌"></a>D 打牌</h3><p><a href="https://www.luogu.com.cn/problem/T172099?contestId=42343" target="_blank" rel="noopener">T172099 打牌</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="E-商店"><a href="#E-商店" class="headerlink" title="E 商店"></a>E 商店</h3><p><a href="https://www.luogu.com.cn/problem/T172100?contestId=42343" target="_blank" rel="noopener">T172100 商店</a></p>
<h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><ol>
<li>排序+模拟</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    sort(b,b+m);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m<span class="number">-1</span>,j=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&lt;=a[j])</span><br><span class="line">        &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>模拟</tag>
        <tag>枚举</tag>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title>【鬼才代码】12 Days of Christmas</title>
    <url>/p/4959.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>那些令人虎躯一震的代码【1】</p>
<a id="more"></a>


    <div id="aplayer-wUmloydM" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="29541352" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *a;main(<span class="keyword">int</span> t,<span class="keyword">int</span> _,<span class="keyword">char</span>* a)&#123;<span class="keyword">return</span>!<span class="number">0</span>&lt;t?t&lt;<span class="number">3</span>?main(<span class="number">-79</span>,<span class="number">-13</span>,a+main(<span class="number">-87</span>,<span class="number">1</span>-_,</span><br><span class="line"></span><br><span class="line">main(<span class="number">-86</span>,<span class="number">0</span>,a+<span class="number">1</span>)+a)):<span class="number">1</span>,t&lt;_?main(t+<span class="number">1</span>,_,a):<span class="number">3</span>,main(<span class="number">-94</span>,<span class="number">-27</span>+t,a)&amp;&amp;t==<span class="number">2</span>?_&lt;<span class="number">13</span>?</span><br><span class="line"></span><br><span class="line">main(<span class="number">2</span>,_+<span class="number">1</span>,<span class="string">"%s %d %d\n"</span>):<span class="number">9</span>:<span class="number">16</span>:t&lt;<span class="number">0</span>?t&lt;<span class="number">-72</span>?main(_,t,</span><br><span class="line"></span><br><span class="line"><span class="string">"@n'+,#'/*&#123;&#125;w+/w#cdnr/+,&#123;&#125;r/*de&#125;+,/*&#123;*+,/w&#123;%+,/w#q#n+,/#&#123;l+,/n&#123;n+,/+#n+,/#;#q#n+,/+k#;*+,/'r :'d*'3,&#125;&#123;w+K w'K:'+&#125;e#';dq#'l q#'+d'K#!/+k#;q#'r&#125;eKK#&#125;w'r&#125;eKK&#123;nl]'/#;#q#n')&#123;)#&#125;w')&#123;)&#123;nl]'/+#n';d&#125;rw' i;# )&#123;nl]!/n&#123;n#'; r&#123;#w'r nc&#123;nl]'/#&#123;l,+'K &#123;rw' iK&#123;;[&#123;nl]'/w#q#n'wk nw' iwk&#123;KK&#123;nl]!/w&#123;%'l##w#' i; :&#123;nl]'/*&#123;q#'ld;r'&#125;&#123;nlwb!/*de&#125;'c ;;&#123;nl'-&#123;&#125;rw]'/+,&#125;##'*&#125;#nc,',#nw]'/+kd'+e&#125;+;#'rdq#w! nr'/ ') &#125;+&#125;&#123;rl#'&#123;n' ')# &#125;'+&#125;##(!!/"</span>)</span><br><span class="line"></span><br><span class="line">:t&lt;<span class="number">-50</span>?_==*a?<span class="built_in">putchar</span>(<span class="number">31</span>[a]):main(<span class="number">-65</span>,_,a+<span class="number">1</span>):main((*a==<span class="string">'/'</span>)+t,_,a+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">:<span class="number">0</span>&lt;t?main(<span class="number">2</span>,<span class="number">2</span>,<span class="string">"%s"</span>):*a==<span class="string">'/'</span>||main(<span class="number">0</span>,main(<span class="number">-61</span>,*a,</span><br><span class="line"></span><br><span class="line"><span class="string">"!ek;dc i@bK'(q)-[w]*%n+r3#l,&#123;&#125;:\nuwloca-O;m .vpbks,fxntdCeghiry"</span>),a+<span class="number">1</span>);&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>运行结果<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">On the first day of Christmas my true love gave to me</span><br><span class="line">a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the second day of Christmas my true love gave to me</span><br><span class="line">two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the third day of Christmas my true love gave to me</span><br><span class="line">three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the fourth day of Christmas my true love gave to me</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the fifth day of Christmas my true love gave to me</span><br><span class="line">five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the sixth day of Christmas my true love gave to me</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the seventh day of Christmas my true love gave to me</span><br><span class="line">seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the eigth day of Christmas my true love gave to me</span><br><span class="line">eight maids a-milking, seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the ninth day of Christmas my true love gave to me</span><br><span class="line">nine ladies dancing, eight maids a-milking, seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the tenth day of Christmas my true love gave to me</span><br><span class="line">ten lords a-leaping,</span><br><span class="line">nine ladies dancing, eight maids a-milking, seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the eleventh day of Christmas my true love gave to me</span><br><span class="line">eleven pipers piping, ten lords a-leaping,</span><br><span class="line">nine ladies dancing, eight maids a-milking, seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br><span class="line"></span><br><span class="line">On the twelfth day of Christmas my true love gave to me</span><br><span class="line">twelve drummers drumming, eleven pipers piping, ten lords a-leaping,</span><br><span class="line">nine ladies dancing, eight maids a-milking, seven swans a-swimming,</span><br><span class="line">six geese a-laying, five gold rings;</span><br><span class="line">four calling birds, three french hens, two turtle doves</span><br><span class="line">and a partridge in a pear tree.</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>【鬼才算法】只出现一次的数字</title>
    <url>/p/9509.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>那些令人拍案叫绝的算法【1】</p>
<a id="more"></a>

<h3 id="Single-Number-I"><a href="#Single-Number-I" class="headerlink" title="Single Number I"></a>Single Number I</h3><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。<br><strong>说明：</strong>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？<br>示例一：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[2,2,1]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure>

<p>示例二：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[4,1,2,1,2]</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure>

<hr>
<p>正确解法：利用异或运算的交换律，将数组中的所有数进行比较，因为交换律，将数组中的各个值交换位置后，相同的值异或结果为1，只出现一次的值不断与1异或，最后被留下来。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            nums[<span class="number">0</span>]^=nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>鬼才解法：将数组中所有不同的值取出来，求和之后乘以2，减去原数组求和</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> sum(set(nums))*<span class="number">2</span>-sum(nums)    <span class="comment">#set() 函数创建一个无序不重复元素集</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Single-Number-II"><a href="#Single-Number-II" class="headerlink" title="Single Number II"></a>Single Number II</h3><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现三次。找出那个只出现了一次的元素。<br><strong>说明：</strong>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？<br>示例一：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[2,2,3,2]</span><br><span class="line">输出：3</span><br></pre></td></tr></table></figure>

<p>示例二：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：[0,1,0,1,0,1,99]</span><br><span class="line">输出：99</span><br></pre></td></tr></table></figure>

<hr>
<p>解法：与上同理，取出无序不重复元素集求和乘3，减去原数组和，最后除以2</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> (sum(set(nums))*<span class="number">3</span>-sum(nums))//<span class="number">2</span>      <span class="comment"># "/" 为浮点数除法，返回浮点结果 "//" 表示整数除法，返回不大于结果的一个最大整数</span></span><br></pre></td></tr></table></figure>

<p>算法出处：Leetcode<br><a href="https://leetcode-cn.com/problems/single-number/" target="_blank" rel="noopener">Single Number I</a><br><a href="https://leetcode-cn.com/problems/single-number-ii/" target="_blank" rel="noopener">Single Number II</a></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第十二届蓝桥杯省赛C++ B组题解</title>
    <url>/p/9a5.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>第十二届蓝桥杯省赛C++ B组题解</p>
<a id="more"></a>
<h3 id="A-空间"><a href="#A-空间" class="headerlink" title="A.空间"></a>A.空间</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/A%E7%A9%BA%E9%97%B4.png" alt></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>256MB=256 * 1024 * 1024 B</p>
<p>一个字节(Byte)等于8位(Bit)，所以一个32位二进制数占4B</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="number">256</span> * <span class="number">1024</span> * <span class="number">1024</span> / <span class="number">4</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">67108864</span></span><br></pre></td></tr></table></figure>

<h3 id="B-卡片"><a href="#B-卡片" class="headerlink" title="B.卡片"></a>B.卡片</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/B%E5%8D%A1%E7%89%87.png" alt></p>
<h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>用一个数组储存卡片个数，从1开始枚举，将每次枚举的数所需要的卡片分割出来，当储存卡片的数组小于零时，说明该数<strong>拼不出来</strong>，答案为上一个数。</p>
<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> ( -- s[t] &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++ ) s[i] = <span class="number">2021</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; ; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (!check(i))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i - <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">3181</span></span><br></pre></td></tr></table></figure>

<h3 id="C-直线"><a href="#C-直线" class="headerlink" title="C.直线"></a>C.直线</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/C%E7%9B%B4%E7%BA%BF.png" alt></p>
<h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>根据斜率判断不同的直线，当两条直线的k和b大于一个非常小的数(<code>1e-8</code>即$ 10^{-8} $)时，判断这两条线不是同一条直线。</p>
<p>k不存在的情况不枚举，最后加上二十条垂直x轴的线，<code>x=0,1,2...19</code></p>
<h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Line</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> k, b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line&amp; t) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k != t.k) <span class="keyword">return</span> k &lt; t.k;</span><br><span class="line">        <span class="keyword">return</span> b &lt; t.b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;l[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x1 = <span class="number">0</span>; x1 &lt; <span class="number">20</span>; x1 ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y1 = <span class="number">0</span>; y1 &lt; <span class="number">21</span>; y1 ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x2 = <span class="number">0</span>; x2 &lt; <span class="number">20</span>; x2 ++ )</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> y2 = <span class="number">0</span>; y2 &lt; <span class="number">21</span>; y2 ++ )</span><br><span class="line">                    <span class="keyword">if</span> (x1 != x2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">double</span> k = (<span class="keyword">double</span>)(y2 - y1) / (x2 - x1);</span><br><span class="line">                        <span class="keyword">double</span> b = y1 - k * x1;</span><br><span class="line">                        l[n ++ ] = &#123;k, b&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">    sort(l, l + n);</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(l[i].k - l[i - <span class="number">1</span>].k) &gt; <span class="number">1e-8</span> || <span class="built_in">fabs</span>(l[i].b - l[i - <span class="number">1</span>].b) &gt; <span class="number">1e-8</span>)</span><br><span class="line">            res ++ ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res + <span class="number">20</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">40257</span></span><br></pre></td></tr></table></figure>

<h3 id="D-货物摆放"><a href="#D-货物摆放" class="headerlink" title="D.货物摆放"></a>D.货物摆放</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/D%E8%B4%A7%E7%89%A9%E6%91%86%E6%94%BE.png" alt></p>
<h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><p>暴力枚举<code>n</code>的所有因数，三重循环枚举所有可能的情况，如果<code>a*b*c==n</code>，答案数++</p>
<h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;LL&gt; d;</span><br><span class="line">    <span class="keyword">for</span> (LL i = <span class="number">1</span>; i * i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            d.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> (n / i != i) d.push_back(n / i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> a: d)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> b: d)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> c: d)</span><br><span class="line">                <span class="keyword">if</span> (a * b * c == n)</span><br><span class="line">                    res ++ ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">2430</span></span><br></pre></td></tr></table></figure>

<h3 id="E-路径"><a href="#E-路径" class="headerlink" title="E.路径"></a>E.路径</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/E%E8%B7%AF%E5%BE%84.png" alt></p>
<h4 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h4><p>最短路径算法(spfa floyd dijkstra)</p>
<h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2200</span>, M = N * <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> h[N], e[M], w[M], ne[M], idx;</span><br><span class="line"><span class="keyword">int</span> q[N], dist[N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span>  <span class="comment">// 欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span>  <span class="comment">// 添加一条边a-&gt;b，边权为c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span>  <span class="comment">// 求1号点到n号点的最短路距离</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    q[tt ++ ] = <span class="number">1</span>;</span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (hh != tt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q[hh ++ ];</span><br><span class="line">        <span class="keyword">if</span> (hh == N) hh = <span class="number">0</span>;</span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                <span class="keyword">if</span> (!st[j])     <span class="comment">// 如果队列中已存在j，则不需要将j重复插入</span></span><br><span class="line">                &#123;</span><br><span class="line">                    q[tt ++ ] = j;</span><br><span class="line">                    <span class="keyword">if</span> (tt == N) tt = <span class="number">0</span>;</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="number">2021</span>;</span><br><span class="line">    <span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">max</span>(<span class="number">1</span>, i - <span class="number">21</span>); j &lt;= <span class="built_in">min</span>(n, i + <span class="number">21</span>); j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> d = gcd(i, j);</span><br><span class="line">            add(i, j, i * j / d);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    spfa();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dist[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">10266837</span></span><br></pre></td></tr></table></figure>

<h3 id="F-时间显示"><a href="#F-时间显示" class="headerlink" title="F.时间显示"></a>F.时间显示</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/F%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA.png" alt></p>
<h4 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h4><p>先将毫秒转换成秒，然后求小时(86400=60*60*24)、分钟(3600=60*60)、秒</p>
<h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    n /= <span class="number">1000</span>;</span><br><span class="line">    n %= <span class="number">86400</span>;</span><br><span class="line">    <span class="keyword">int</span> h = n / <span class="number">3600</span>;</span><br><span class="line">    n %= <span class="number">3600</span>;</span><br><span class="line">    <span class="keyword">int</span> m = n / <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">int</span> s = n % <span class="number">60</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d\n"</span>, h, m, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="G-砝码称重"><a href="#G-砝码称重" class="headerlink" title="G.砝码称重"></a>G.砝码称重</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/G%E7%A0%9D%E7%A0%81%E7%A7%B0%E9%87%8D.png" alt></p>
<h4 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h4><p>dp<br>拓展<a href="https://www.luogu.com.cn/problem/P1441" target="_blank" rel="noopener">P1441 砝码称重</a></p>
<h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">200010</span>, B = M / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> w[N];</span><br><span class="line"><span class="keyword">bool</span> f[N][M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]), m += w[i];</span><br><span class="line"></span><br><span class="line">    f[<span class="number">0</span>][B] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = -m; j &lt;= m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j + B] = f[i - <span class="number">1</span>][j + B];</span><br><span class="line">            <span class="keyword">if</span> (j - w[i] &gt;= -m) f[i][j + B] |= f[i - <span class="number">1</span>][j - w[i] + B];</span><br><span class="line">            <span class="keyword">if</span> (j + w[i] &lt;= m) f[i][j + B] |= f[i - <span class="number">1</span>][j + w[i] + B];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )</span><br><span class="line">        <span class="keyword">if</span> (f[n][j + B])</span><br><span class="line">            res ++ ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>回溯法，超时</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">back_trace</span><span class="params">(<span class="keyword">int</span> <span class="built_in">size</span>,<span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">if</span>(sum!=<span class="number">0</span>)</span><br><span class="line">    st.insert(<span class="built_in">abs</span>(sum));</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">size</span>==n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        back_trace(<span class="built_in">size</span>+<span class="number">1</span>,sum+a[<span class="built_in">size</span>]);</span><br><span class="line">        back_trace(<span class="built_in">size</span>+<span class="number">1</span>,sum-a[<span class="built_in">size</span>]);</span><br><span class="line">        back_trace(<span class="built_in">size</span>+<span class="number">1</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    back_trace(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;st.<span class="built_in">size</span>()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="H-杨辉三角形"><a href="#H-杨辉三角形" class="headerlink" title="H.杨辉三角形"></a>H.杨辉三角形</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/H%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2.png" alt></p>
<h4 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h4><p>二分+找规律</p>
<h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = a, j = <span class="number">1</span>; j &lt;= b; i --, j ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        res = res * i / j;</span><br><span class="line">        <span class="keyword">if</span> (res &gt; n) <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL l = k * <span class="number">2</span>, r = <span class="built_in">max</span>((LL)n, l);</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        LL mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (C(mid, k) &gt;= n) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (C(r, k) != n) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r * (r + <span class="number">1</span>) / <span class="number">2</span> + k + <span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">16</span>; ; k -- )</span><br><span class="line">        <span class="keyword">if</span> (check(k))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="I-双向排序"><a href="#I-双向排序" class="headerlink" title="I.双向排序"></a>I.双向排序</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/I%E5%8F%8C%E5%90%91%E6%8E%92%E5%BA%8F.png" alt></p>
<h4 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h4><ol>
<li>栈</li>
<li><code>sort()</code>暴力</li>
</ol>
<h4 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">PII stk[N];</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> p, q;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;p, &amp;q);</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (top &amp;&amp; stk[top].x == <span class="number">0</span>) q = <span class="built_in">max</span>(q, stk[top -- ].y);</span><br><span class="line">            <span class="keyword">while</span> (top &gt;= <span class="number">2</span> &amp;&amp; stk[top - <span class="number">1</span>].y &lt;= q) top -= <span class="number">2</span>;</span><br><span class="line">            stk[ ++ top] = &#123;<span class="number">0</span>, q&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (top)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (top &amp;&amp; stk[top].x == <span class="number">1</span>) q = <span class="built_in">min</span>(q, stk[top -- ].y);</span><br><span class="line">            <span class="keyword">while</span> (top &gt;= <span class="number">2</span> &amp;&amp; stk[top - <span class="number">1</span>].y &gt;= q) top -= <span class="number">2</span>;</span><br><span class="line">            stk[ ++ top] = &#123;<span class="number">1</span>, q&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = n, l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (stk[i].x == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">while</span> (r &gt; stk[i].y &amp;&amp; l &lt;= r) ans[r -- ] = k -- ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (l &lt; stk[i].y &amp;&amp; l &lt;= r) ans[l ++ ] = k -- ;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; r) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (top % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) ans[l ++ ] = k -- ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">while</span> (l &lt;= r) ans[r -- ] = k -- ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="J-括号序列"><a href="#J-括号序列" class="headerlink" title="J.括号序列"></a>J.括号序列</h3><p><img src="https://gitee.com/Olvi73/img/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9BC++%20B%E7%BB%84/J%E6%8B%AC%E5%8F%B7%E5%BA%8F%E5%88%97.png" alt></p>
<h4 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h4><p>dp</p>
<h4 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5010</span>, MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line">LL f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'('</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                f[i][j] = f[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            f[i][<span class="number">0</span>] = (f[i - <span class="number">1</span>][<span class="number">0</span>] + f[i - <span class="number">1</span>][<span class="number">1</span>]) % MOD;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                f[i][j] = (f[i - <span class="number">1</span>][j + <span class="number">1</span>] + f[i][j - <span class="number">1</span>]) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (f[n][i])</span><br><span class="line">            <span class="keyword">return</span> f[n][i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str + <span class="number">1</span>);</span><br><span class="line">    n = <span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line">    LL l = work();</span><br><span class="line">    reverse(str + <span class="number">1</span>, str + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'('</span>) str[i] = <span class="string">')'</span>;</span><br><span class="line">        <span class="keyword">else</span> str[i] = <span class="string">'('</span>;</span><br><span class="line">    LL r = work();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, l * r % MOD);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
        <tag>dp</tag>
        <tag>二分</tag>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理考试总结</title>
    <url>/p/c34b.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://www.bilibili.com/video/BV1ft4y1X7p6" target="_blank" rel="noopener">期末复习</a></p>
<a id="more"></a>

<h3 id="构造文法"><a href="#构造文法" class="headerlink" title="构造文法"></a>构造文法</h3><ol>
<li>G[S]={VN,VT,P,S}<br>VN：非终结符号集  A B C<br>VT：终结符号集  a b c<br>P：产生式集<br>S：开始符号</li>
</ol>
<h3 id="二义性判断"><a href="#二义性判断" class="headerlink" title="二义性判断"></a>二义性判断</h3><ol>
<li>对于文法的某一个句子，具有两颗不同的语法树</li>
</ol>
<h3 id="NFA-DFA"><a href="#NFA-DFA" class="headerlink" title="NFA/DFA"></a>NFA/DFA</h3><p>1.构建正规式<br>2.构造NFA<br>3.确定化NFA-&gt;DFA<br>4.DFA最小化</p>
<h3 id="SLR-1-LR-1"><a href="#SLR-1-LR-1" class="headerlink" title="SLR(1)/LR(1)"></a>SLR(1)/LR(1)</h3><blockquote>
<p>前置知识求FIRST FOLLOW SELECT集  </p>
</blockquote>
<p>1.消除左递归<br>2.提取左公因子<br>3.构造分析表  </p>
<ul>
<li>拓广文法</li>
<li>识别全部活前缀</li>
<li>构造分析表</li>
<li>识别字符串</li>
</ul>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
  </entry>
  <entry>
    <title>如何超过大多数人</title>
    <url>/p/7c30.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a86ea358d5dc1c84565f5e7f92d84a8150c640d4c4b03846f9c2fa1b5b2d4134"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-wave">
      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">请输入密码...</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Whimsy</category>
      </categories>
      <tags>
        <tag>whimsy</tag>
      </tags>
  </entry>
  <entry>
    <title>数据挖掘复习</title>
    <url>/p/4757.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>期末复习</p>
<a id="more"></a>

<h1 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h1><h2 id="数据挖掘基本任务"><a href="#数据挖掘基本任务" class="headerlink" title="数据挖掘基本任务"></a>数据挖掘基本任务</h2><p>数据挖掘的基本任务包括利用分类与预测、聚类分析、关联规则、时序模式、偏差检测、智能推荐等方法，帮助企业提取数据中蕴含的商业价值，提高企业的竞争力。</p>
<h2 id="数据挖掘建模过程"><a href="#数据挖掘建模过程" class="headerlink" title="数据挖掘建模过程"></a>数据挖掘建模过程</h2><ol>
<li>定义挖掘目标</li>
<li>数据取样</li>
<li>数据探索</li>
<li>数据预处理</li>
<li>挖掘建模</li>
<li>模型评价</li>
</ol>
<h3 id="1-目标定义"><a href="#1-目标定义" class="headerlink" title="1.目标定义"></a>1.目标定义</h3><ol>
<li><p>任务理解</p>
</li>
<li><p>指标明确</p>
</li>
</ol>
<h3 id="2-数据采集"><a href="#2-数据采集" class="headerlink" title="2.数据采集"></a>2.数据采集</h3><ol>
<li>建模抽样</li>
<li>质量把控</li>
<li>实时采集</li>
</ol>
<h3 id="3-数据整理"><a href="#3-数据整理" class="headerlink" title="3.数据整理"></a>3.数据整理</h3><ol>
<li>数据探索</li>
<li>数据清洗</li>
<li>数据变换</li>
</ol>
<h3 id="4-构建模型"><a href="#4-构建模型" class="headerlink" title="4.构建模型"></a>4.构建模型</h3><ol>
<li>模式发现</li>
<li>构建模型</li>
<li>验证模型</li>
</ol>
<h3 id="5-模型评价"><a href="#5-模型评价" class="headerlink" title="5.模型评价"></a>5.模型评价</h3><ol>
<li>设定评价标准</li>
<li>多模型对比</li>
<li>模型优化</li>
</ol>
<h3 id="6-模型发布"><a href="#6-模型发布" class="headerlink" title="6.模型发布"></a>6.模型发布</h3><ol>
<li>模型部署</li>
<li>模型重构</li>
</ol>
<h2 id="数据探索"><a href="#数据探索" class="headerlink" title="数据探索"></a>数据探索</h2><p><strong>需要考虑的问题</strong></p>
<ol>
<li>样本数据集的数量和质量是否满足模型构建的要求？</li>
<li>有没有出现从未设想过的数据状态？</li>
<li>其中有没有明显的规律和趋势？</li>
<li>各因素之间有什么样的关联性？</li>
</ol>
<h3 id="1-数据质量分析"><a href="#1-数据质量分析" class="headerlink" title="1.数据质量分析"></a>1.数据质量分析</h3><h4 id="主要任务"><a href="#主要任务" class="headerlink" title="主要任务"></a>主要任务</h4><p>检查原始数据中是否存在脏数据，脏数据一般指不符合要求以及不能直接进行相应分析的数据，如缺失值、异常值、不一致值、重复数据及含有特殊符号的数据</p>
<h4 id="缺失值分析"><a href="#缺失值分析" class="headerlink" title="缺失值分析"></a>缺失值分析</h4><h5 id="产生的原因"><a href="#产生的原因" class="headerlink" title="产生的原因"></a>产生的原因</h5><ol>
<li>信息暂时无法获取，或者获取信息的代价太大</li>
<li>信息被遗漏，包括人为因素遗漏及数据采集设备故障导致的非人为因素遗漏</li>
<li>属性值不存在，如一个未婚者的配偶姓名，一个儿童的固定收入</li>
</ol>
<h5 id="缺失值的影响"><a href="#缺失值的影响" class="headerlink" title="缺失值的影响"></a>缺失值的影响</h5><ol>
<li>数据挖掘建模将丢失大量的有用信息</li>
<li>数据挖掘模型所变现出的不确定性更加显著，规律更难把握</li>
<li>包含空值的数据回事建模过程陷入混乱，导致不可靠的输出</li>
</ol>
<h5 id="缺失值的分析"><a href="#缺失值的分析" class="headerlink" title="缺失值的分析"></a>缺失值的分析</h5><ol>
<li>使用简单的统计分析，可以得到含有缺失值的属性的个数及每个属性的未缺失数、缺失数与缺失率等</li>
<li>对缺失值的处理<ul>
<li>删除存在缺失值的记录</li>
<li>对可能值进行插补</li>
<li>不处理</li>
</ul>
</li>
</ol>
<h4 id="异常值分析"><a href="#异常值分析" class="headerlink" title="异常值分析"></a>异常值分析</h4><p>异常值分析是检验数据是否有录入错误，是否含有不合常理的数据。</p>
<p>异常值是指样本中的个别值，其数值明显偏离其他的观测值。</p>
<p>异常值也称为<strong>离群点</strong>，异常值分析也称为<strong>离群点分析</strong></p>
<h5 id="1-简单统计量分析"><a href="#1-简单统计量分析" class="headerlink" title="1. 简单统计量分析"></a>1. 简单统计量分析</h5><p>对变量进行描述性统计，进而查看哪些数据是不合理的，如统计最大值和最小值，用来判断这个变量的取值是否超出了合理范围。</p>
<h5 id="2-3σ准则"><a href="#2-3σ准则" class="headerlink" title="2. 3σ准则"></a>2. 3σ准则</h5><blockquote>
<p>在 <a href="http://www.baike.com/sowiki/正态分布?prd=content_doc_search" target="_blank" rel="noopener">正态分布</a> 中σ代表 <a href="http://www.baike.com/sowiki/标准差?prd=content_doc_search" target="_blank" rel="noopener">标准差</a> ,μ代表 <a href="http://www.baike.com/sowiki/均值?prd=content_doc_search" target="_blank" rel="noopener">均值</a> 。x=μ即为图像的对称轴<br>3σ原则为<br>数值分布在（μ-σ,μ+σ)中的概率为0.6826<br>数值分布在（μ-2σ,μ+2σ)中的概率为0.9544<br>数值分布在（μ-3σ,μ+3σ)中的概率为0.9974<br>可以认为，Y 的取值几乎全部集中在（μ-3σ,μ+3σ)] <a href="http://www.baike.com/sowiki/区间?prd=content_doc_search" target="_blank" rel="noopener">区间</a>内，超出这个范围的可能性仅占不到0.3%.</p>
</blockquote>
<p>3σ准则是建立在正态分布的等精度重复测量基础上而造成奇异数据的干扰或噪声难以满足正态分布.如果一组测量数据中某个测量值的残余误差的绝对值 νi＞3σ,则该测量值为坏值,应剔除.通常把等于 ±3σ的误差作为极限误差,对于正态分布的随机误差,落在 ±3σ以外的概率只有 0.27%,它在有限次测量中发生的可能性很小,故存在3σ准则.3σ准则是最常用也是最简单的粗大误差判别准则,它一般应用于测量次数充分多( n ≥30)或当 n＞10做粗略判别时的情况.</p>
<h5 id="3-箱型图分析"><a href="#3-箱型图分析" class="headerlink" title="3. 箱型图分析"></a>3. 箱型图分析</h5><p><img src="https://bkimg.cdn.bcebos.com/pic/aa18972bd40735fade9ad1029e510fb30f240826?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto" alt="箱型图"></p>
<h4 id="一致性分析"><a href="#一致性分析" class="headerlink" title="一致性分析"></a>一致性分析</h4><p>数据不一致性是指数据的矛盾性、不相容性。直接对不一致的数据进行挖掘，可能会产生与实际相违背的挖掘结果。</p>
<p>在数据挖掘过程中，不一致的数据的产生主要发生在数据集成的过程中，可能是由于被挖掘数据来自于不同的数据源，对于重复存放的数据未能进行一致性更新造成的。</p>
<h3 id="2-数据特征分析"><a href="#2-数据特征分析" class="headerlink" title="2. 数据特征分析"></a>2. 数据特征分析</h3><h4 id="1-分布分析"><a href="#1-分布分析" class="headerlink" title="1. 分布分析"></a>1. 分布分析</h4><h5 id="1-定量数据的分布分析"><a href="#1-定量数据的分布分析" class="headerlink" title="1. 定量数据的分布分析"></a>1. 定量数据的分布分析</h5><ol>
<li>求极差</li>
<li>决定组距和组数</li>
<li>决定分点</li>
<li>列出频率分布表</li>
<li>绘制频率分布直方图</li>
</ol>
<p><strong>要求</strong></p>
<ol>
<li>各组之间必须是相互排斥的</li>
<li>各组必须将所有的数据包括在内</li>
<li>各组的组宽最好相等</li>
</ol>
<h5 id="2-定性数据分析"><a href="#2-定性数据分析" class="headerlink" title="2. 定性数据分析"></a>2. 定性数据分析</h5><p>对于定性变量，常常根据变量的分类类型来分组。</p>
<h4 id="2-对比分析"><a href="#2-对比分析" class="headerlink" title="2. 对比分析"></a>2. 对比分析</h4><ol>
<li>绝对数比较</li>
<li>相对数比较<ol>
<li>结构相对数：将同一总体内的部分数值与全部数值进行对比求得比重，用以说明事物的性质、结构或质量</li>
<li>比例相对数：将同一总体内不同部分的数值进行对比，表明总体内各部分的比例关系。</li>
<li>比较相对数：将同一时期两个性质相同的指标数值进行对比，说明同类现象在不同空间条件下的数量对比关系。</li>
<li>强度相对数：将两个性质不同但有一定联系的总量指标进行对比，用以说明现象的强度、密度和普遍程度。</li>
<li>计划完成程度相对数：将某一时期实际完成数与计划完成数进行对比用以说明计划完成程度。</li>
<li>动态相对数：将同一现象在不同时期的指标数值进行对比，用以说明发展法向和变化速度，如发展速度、增长速度等。</li>
</ol>
</li>
</ol>
<h4 id="3-统计量分析"><a href="#3-统计量分析" class="headerlink" title="3. 统计量分析"></a>3. 统计量分析</h4><h5 id="1-集中趋势程度"><a href="#1-集中趋势程度" class="headerlink" title="1. 集中趋势程度"></a>1. 集中趋势程度</h5><ol>
<li>均值</li>
<li>中位数</li>
<li>众数</li>
</ol>
<h5 id="2-离中趋势度量"><a href="#2-离中趋势度量" class="headerlink" title="2. 离中趋势度量"></a>2. 离中趋势度量</h5><ol>
<li>极差</li>
<li>标准差</li>
<li>变异系数</li>
<li>四分位数间距</li>
</ol>
<h4 id="4-周期性分析"><a href="#4-周期性分析" class="headerlink" title="4. 周期性分析"></a>4. 周期性分析</h4><p>周期性分析是探索某个变量是否随着时间的变化而呈现出某种周期变化趋势。</p>
<h4 id="5-贡献度分析"><a href="#5-贡献度分析" class="headerlink" title="5. 贡献度分析"></a>5. 贡献度分析</h4><p>贡献度分析又称帕累托分析，它的原理是帕累托法则，又称20/80定律。同样的投入放在不同的地方会产生不同的效益，例如，对一个公司来讲，80%的利润常常来自于20%最畅销的产品，而其他80%的产品只产生了20%的利润。</p>
<h4 id="6-相关性分析"><a href="#6-相关性分析" class="headerlink" title="6. 相关性分析"></a>6. 相关性分析</h4><h5 id="1-直接绘制散点图"><a href="#1-直接绘制散点图" class="headerlink" title="1. 直接绘制散点图"></a>1. 直接绘制散点图</h5><p>判断两个变量是否具有线性相关关系最直观的方法 是直接绘制散点图</p>
<h5 id="2-绘制散点图矩阵"><a href="#2-绘制散点图矩阵" class="headerlink" title="2. 绘制散点图矩阵"></a>2. 绘制散点图矩阵</h5><h5 id="3-计算相关系数"><a href="#3-计算相关系数" class="headerlink" title="3. 计算相关系数"></a>3. 计算相关系数</h5><p>为了更加准确地描述变量之间的线性相关程度，可以通过相关系数的计算来进行相关分析</p>
<ol>
<li>Pearson相关系数（要求连续变量的取值服从正态分布）</li>
<li>Spearman秩相关系数（不服从正态分布的变量或等级变量之间的关系）</li>
<li>判定系数，判定系数是相关系数的平方，用$r^2$表示。$r^2$越接近1，表明x与y之间的相关性越强，$r^2$越接近0，表明x与y之间几乎没有直线相关关系</li>
</ol>
<h3 id="Python主要数据探索函数"><a href="#Python主要数据探索函数" class="headerlink" title="Python主要数据探索函数"></a>Python主要数据探索函数</h3><h4 id="1-基本统计特征函数"><a href="#1-基本统计特征函数" class="headerlink" title="1. 基本统计特征函数"></a>1. 基本统计特征函数</h4><table>
<thead>
<tr>
<th align="center">方法名</th>
<th align="center">函数功能</th>
<th align="center">所属库</th>
</tr>
</thead>
<tbody><tr>
<td align="center">sum()</td>
<td align="center">计算数据样本的总和</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">mean()</td>
<td align="center">计算数据样本的算术平均数</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">var()</td>
<td align="center">计算数据样本的方差</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">std()</td>
<td align="center">计算数据样本的标准差</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">corr()</td>
<td align="center">计算数据样本的Spearman(Pearson)相关系数矩阵</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">cov()</td>
<td align="center">计算数据样本的协方差矩阵</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">skew()</td>
<td align="center">样本值的偏度（三阶矩）</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">kurt()</td>
<td align="center">样本值的峰度（四阶矩）</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">describe()</td>
<td align="center">给出样本的基本描述（基本统计量如均值、标准差等）</td>
<td align="center">pandas</td>
</tr>
</tbody></table>
<h4 id="2-拓展统计特征函数"><a href="#2-拓展统计特征函数" class="headerlink" title="2. 拓展统计特征函数"></a>2. 拓展统计特征函数</h4><p>累计计算(<code>cum</code>)和滚动计算(<code>pd.rolling_</code>)，如<code>cumsum()</code> 依次给出前1,2，… n个数的和，<code>rolling(2).sum()</code>依次对相邻的两项求和</p>
<h4 id="3-统计绘图函数"><a href="#3-统计绘图函数" class="headerlink" title="3. 统计绘图函数"></a>3. 统计绘图函数</h4><table>
<thead>
<tr>
<th align="center">绘图函数名</th>
<th align="center">绘图函数功能</th>
<th align="center">所属工具箱</th>
</tr>
</thead>
<tbody><tr>
<td align="center">plot()</td>
<td align="center">绘制线性二维图，折线图</td>
<td align="center">Matplotlib/pandas</td>
</tr>
<tr>
<td align="center">pie()</td>
<td align="center">绘制饼图</td>
<td align="center">Matplotlib/pandas</td>
</tr>
<tr>
<td align="center">hist()</td>
<td align="center">绘制二维条形直方图，可显示数据的分配情形</td>
<td align="center">Matplotlib/pandas</td>
</tr>
<tr>
<td align="center">boxplot()</td>
<td align="center">绘制样本数据的箱型图</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">plot(logy = True)</td>
<td align="center">绘制y轴的对数图形</td>
<td align="center">pandas</td>
</tr>
<tr>
<td align="center">plot(yerr = error)</td>
<td align="center">绘制误差条形图</td>
<td align="center">pandas</td>
</tr>
</tbody></table>
<h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><h3 id="1-数据清洗"><a href="#1-数据清洗" class="headerlink" title="1. 数据清洗"></a>1. 数据清洗</h3><p>数据清洗主要是删除原始数据集中的无关数据、重复数据，平滑噪声数据，筛选掉与挖掘主题无关的数据，处理缺失值、异常值等</p>
<h4 id="1-缺失值处理"><a href="#1-缺失值处理" class="headerlink" title="1. 缺失值处理"></a>1. 缺失值处理</h4><p>处理方法可分为三类：删除记录、数据插补和不处理</p>
<table>
<thead>
<tr>
<th>插补方法</th>
<th>方法描述</th>
</tr>
</thead>
<tbody><tr>
<td>均值、中位数、众数插补</td>
<td>根据属性值的类型，用该属性取值的平均数、中位数、众数进行插补</td>
</tr>
<tr>
<td>使用固定值</td>
<td>将缺失的属性值用一个常量替换</td>
</tr>
<tr>
<td>最近临插补</td>
<td>在记录中找到与缺失样本最接近的样本的该属性卡值插补</td>
</tr>
<tr>
<td>回归方法</td>
<td>对带有缺失值的变量，根据已有数据和与其有关的其他变量（因变量）的数据建立拟合模型来预测确实的属性值</td>
</tr>
<tr>
<td>插值法</td>
<td>插值法是利用已知点建立合适的插值函数$f(x)$，未知数由对应点$x_i$求出的函数值$f(x_i)$近似代替</td>
</tr>
</tbody></table>
<h5 id="1-拉格朗日插值法"><a href="#1-拉格朗日插值法" class="headerlink" title="1. 拉格朗日插值法"></a>1. 拉格朗日插值法</h5><h5 id="2-牛顿插值法"><a href="#2-牛顿插值法" class="headerlink" title="2. 牛顿插值法"></a>2. 牛顿插值法</h5><h4 id="2-异常值处理"><a href="#2-异常值处理" class="headerlink" title="2. 异常值处理"></a>2. 异常值处理</h4><table>
<thead>
<tr>
<th>异常值处理方法</th>
<th>方法描述</th>
</tr>
</thead>
<tbody><tr>
<td>删除含有异常值的记录</td>
<td>直接将含有异常值的记录删除</td>
</tr>
<tr>
<td>视为缺失值</td>
<td>将异常值视为缺失值，利用缺失值处理的方法进行处理</td>
</tr>
<tr>
<td>平均值修正</td>
<td>可用前后两个观测值修正该异常值</td>
</tr>
<tr>
<td>不处理</td>
<td>直接在具有异常值的数据集上进行挖掘建模</td>
</tr>
</tbody></table>
<h3 id="2-数据集成"><a href="#2-数据集成" class="headerlink" title="2. 数据集成"></a>2. 数据集成</h3><p>数据挖掘需要的数据往往分布在不同的数据源中，数据集成就是将多个数据源合并存放在一个一致的数据储存位置（如数据仓库）中的过程。</p>
<h4 id="1-实体识别"><a href="#1-实体识别" class="headerlink" title="1. 实体识别"></a>1. 实体识别</h4><ol>
<li>同名异义：数据源A中的属性ID和数据源B三的属性ID分别描述的是菜品编号和订单编号，即描述的是不同的实体</li>
<li>异名同义：数据源A中的sales_dt和数据源B中的sales_date都是描述销售日期的</li>
<li>单位不统一：描述同一个实体时分别用的是国际单位和中国传统的计量单位</li>
</ol>
<h4 id="2-冗余属性识别"><a href="#2-冗余属性识别" class="headerlink" title="2. 冗余属性识别"></a>2. 冗余属性识别</h4><ol>
<li>同一属性多次出现</li>
<li>同一属性命名不一致导致重复</li>
</ol>
<h4 id="3-数据变换"><a href="#3-数据变换" class="headerlink" title="3. 数据变换"></a>3. 数据变换</h4><p>主要是对数据进行规范化处理，将数据转换成“适当的”形式，以适用于挖掘任务和算法的需要。</p>
<ol>
<li><p>简单函数变换，对原始数据进行某些数学函数变换，包括平方、取对数、差分运算等</p>
</li>
<li><p>规范化</p>
<ol>
<li><p>最小-最大规范化，也叫离差标准化，对原始数据的线性变换，将数值映射到[0,1]之间。</p>
<p>$$ x^*=\frac{(x-min)}{(max-min)} $$</p>
</li>
<li><p>0-均值规范化，也叫标准差标准化，经过处理的数据均值为0，标准差为1。</p>
<p>$$ x^*= \frac{x-\overline{x}}{σ} $$</p>
</li>
<li><p>小数定标规范化，通过移动属性值的小数位数，将属性值映射到[-1,1]之间，移动的小数位数取决于属性值绝对值的最大值</p>
<p>$$ x^*=\frac{x}{10^k} $$</p>
</li>
</ol>
</li>
<li><p>连续属性离散化，如某些分类算法，ID3算法、Apriori算法，要求数据是分类属性形式。</p>
<ol>
<li>离散化的过程，连续属性离散化就是在数据的取值范围内设定若干个离散的划分点，将取值范围划分为一些离散化的区间，最后用不同的符号或整数值代表落在每个子区间中的数据值</li>
<li>常用的离散化方法，等宽法和（一维）聚类。</li>
</ol>
<ul>
<li>等宽法，将属性的值域分成具有相同宽度的区间，区间的个数由数据本身的特点决定或者用户指定，类似与制作频率分布表</li>
<li>等频法，将相同数量的记录放进每个区间<ul>
<li>这两种方法简单，易于操作，但都需要认为规定划分区间的个数。同时，等宽法缺点在于它对离群点比较敏感，倾向于不均匀地把属性值分布到各个区间。有些区间包含许多数据，而另外一些区间的数据极少，这样会严重损坏建立的决策模型。等频法虽然避免了上述问题的产生，却可能将相同的数据值分布到不同的区间，以满足每个区间中固定的数据个数</li>
</ul>
</li>
<li>基于聚类分析的方法，一维聚类方法包括两个步骤：首先将连续属性的值用聚类算法（如K-Means算法)进行聚类，然后再将聚类得到的簇进行处理，合并到一个簇的连续属性值做同一标记。聚类分析的离散化方法也需要用户制定簇的个数，从而决定产生的区间数。</li>
</ul>
</li>
<li><p>属性构造，利用已有的属性集构造新的属性，并加入到现有的属性集合中。</p>
</li>
<li><p>小波变换 P(88)，信号分析手段</p>
</li>
</ol>
<h3 id="3-数据规约"><a href="#3-数据规约" class="headerlink" title="3. 数据规约"></a>3. 数据规约</h3><p>在大数据集上进行复杂的数据分析和挖掘需要很长时间。数据规约产生更小且保持原数据完整性的新数据集，在规约后的数据集上进行分析和挖掘将提高效率。</p>
<p><strong>意义</strong></p>
<ol>
<li>降低无效、错误数据对建模的影响，提高建模的准确性</li>
<li>少量却具有代表性的数据将大幅缩减数据挖掘的时间</li>
<li>降低储存数据的成本</li>
</ol>
<h4 id="1-属性规约"><a href="#1-属性规约" class="headerlink" title="1. 属性规约"></a>1. 属性规约</h4><p>属性规约通过属性合并创建新属性维数，或者通过直接删除不相关的属性（维）来减少数据维数，从而提高数据挖掘的效率，降低计算成本。属性规约的目标是寻找最小的属性子集并确保新数据子集的概率分布尽可能接近原来的数据集的概率分布。</p>
<table>
<thead>
<tr>
<th>属性规约方法</th>
<th>方法描述</th>
<th>方法解析</th>
</tr>
</thead>
<tbody><tr>
<td>合并属性</td>
<td>将一些旧属性合并为新属性</td>
<td>初始属性集：{$A_1,A_2,A_3,B_1,B_2,B_3,C$},{$A_1,A_2,A_3$}-&gt;$A$ {$B_1,B_2,B_3$}-&gt;$B$ 规约后属性集{$A,B,C$}</td>
</tr>
<tr>
<td>逐步向前选择</td>
<td>从一个空属性集开始，每次从原来属性集合中选择一个当前最优的属性添加到当前属性子集中。直到无法选出最优属性或满足一定阈值约束为止</td>
<td>初始属性集：{$A_1,A_2,A_3,A_4,A_5,A_6$},{}-&gt;{$A_1$}-&gt;{$A_1,A_4$} 规约后属性集{$A_1,A_4,A_6$}</td>
</tr>
<tr>
<td>逐步向后删除</td>
<td>从一个全属性集开始，每次从当前属性子集中选择一个当前最差的属性并将其从当前属性子集中消去。直到无法选出最差属性为止或满足一定阈值约束为止</td>
<td>初始属性集：{$A_1,A_2,A_3,A_4,A_5,A_6$},{$A_1,A_3,A_4,A_5,A_6$}-&gt;{$A_1,A_4,A_5,A_6$}   规约后属性集{$A_1,A_4,A_6$}</td>
</tr>
<tr>
<td>决策树归纳</td>
<td>利用决策树的归纳方法对初始数据进行分类归纳学习，获得一个初始决策树，所有没有出现在这个决策树上的属性均可认为是无关属性，因此将这些属性从初始集合中删除，就可以获得一个较优的属性子集</td>
<td>略</td>
</tr>
<tr>
<td>主成分分析</td>
<td>用较少的变量去解释原始数据中的大部分变量，即将许多线性相关性很高的变量转化成彼此互相独立或不相关的变量</td>
<td>略</td>
</tr>
</tbody></table>
<p>逐步向前选择、逐步向后删除和决策树归纳是属于直接删除不相关属性（维）的方法。主成分分析法是一种用于连续属性的数据降维方法，它构造了原始数据的一个正交变换，新空间的基底去除了原始空间基底下数据的相关性，只需要使用少数新变量就能解释原始数据中的大部分变异。</p>
<p>在应用中，通常是选出比原始变量个数少，能解释大部分数据中的变量的几个新变量，即所谓主成分，来代替原始变量进行建模。</p>
<h5 id="主成分分析计算步骤"><a href="#主成分分析计算步骤" class="headerlink" title="主成分分析计算步骤"></a>主成分分析计算步骤</h5><ol>
<li><p>设原始变量$X_1,X_2,…,X_p$的$n$次观测数据矩阵为式<br>$$<br>X=\begin{Bmatrix}<br>X_{11} &amp; X_{12} &amp; \dots &amp; X_{13} \\<br>X_{21} &amp; X_{22} &amp; \dots &amp; X_{23} \\<br>\dots &amp; \dots &amp; \dots &amp; \dots \\<br>X_{n1} &amp; X_{n2} &amp; \dots &amp; X_{np} \\<br>\end{Bmatrix}=(X_1,X_2,\dots,X_P)<br>$$</p>
</li>
<li><p>将数据矩阵按列进行中心标准化。</p>
</li>
<li><p>求相关系数矩阵 $\mathbf{R}$ ，$ \mathbf{R} = (r_{ij})_ {p\times p} $ ， $r_{ij}$定义为式，其中$r_{ij}=r_{ji},r_{ij}=1$<br>$$<br>r_{rj}=<br>\sum\nolimits_{k=1}^n (x_{ki}-\overline{x_i})(x_{kj}-\overline{x_j})<br>/<br>\sqrt{<br>\sum\nolimits_{k=1}^n (x_{ki}-\overline{x_i})^2<br>\sum\nolimits_{k=1}^n (x_{kj}-\overline{x_j})^2<br>}<br>$$</p>
</li>
<li><p>求$\mathbf{R}$的特征方程 $ det(\mathbf{R}-λ\mathbf{E})=0 $ 的特征根$λ_1\geλ_2\ge…λ_p&gt;0$</p>
</li>
<li><p>确定主成分个数，α根据实际问题确定，一般取80%<br>$$<br>m:<br>\frac{\sum\nolimits_{i=1}^m \lambda_i}<br>{\sum\nolimits_{i=1}^p \lambda_i}<br>\ge<br>\alpha<br>$$</p>
</li>
<li><p>计算m个相应的单位特征向量，如式<br>$$<br> \mathbf{\beta_1}=\begin{pmatrix}<br> \beta_1 \\ \beta_2 \\ …\\ \beta_{p1}<br> \end{pmatrix}<br> ,<br> \mathbf{\beta_2}=\begin{pmatrix}<br> \beta_{12} \\ \beta_{22} \\ …\\ \beta_{p2}<br> \end{pmatrix}<br> ,<br> \mathbf{\beta_m}=\begin{pmatrix}<br> \beta_{1m} \\ \beta_{2m} \\ …\\ \beta_{pm}<br> \end{pmatrix}<br>$$</p>
</li>
</ol>
<ol start="7">
<li>计算主成分，如式<br>$$<br>Z_i=\beta_{1i}X_1+\beta_{2i}X_2+…+\beta_{pi}X_p (i=1,2,…,m)<br>$$</li>
</ol>
<p>python中主成分分析函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sklearn.decomposition.PCA(n_components=<span class="literal">None</span>, copy=<span class="literal">True</span>, whiten=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数名称</th>
<th>意义</th>
<th>类型</th>
</tr>
</thead>
<tbody><tr>
<td>n_components</td>
<td>PCA算法中索要保留的主成分个数n，就是保留下来的特征个数n</td>
<td>int/str</td>
</tr>
<tr>
<td>copy</td>
<td>表示是否在运行算法时，将原始训练数据复制一份</td>
<td>bool</td>
</tr>
<tr>
<td>whiten</td>
<td>白化，使得每个特征具有相同的方差</td>
<td>bool</td>
</tr>
</tbody></table>
<h4 id="2-数值规约"><a href="#2-数值规约" class="headerlink" title="2. 数值规约"></a>2. 数值规约</h4><p>数值规约通过选择代替的、较小的数据来减少数据量，包括有参数方法和无参数方法两类。有参数方法是使用一个模型来评估数据，只需存放参数，而不需要存放实际数据，例如回归（线性回归和多元回归）和对数线性模型（近似离散属性集中的多维概率分布）。无参数方法就需要存放实际数据，如直方图、聚类、抽样（采样）。</p>
<ol>
<li>直方图</li>
<li>聚类</li>
<li>抽样<ul>
<li>常用抽样方法<ol>
<li>s个样本无放回简单随机抽样</li>
<li>s个样本有放回地简单随机抽样</li>
<li>聚类抽样</li>
<li>分层抽样</li>
</ol>
</li>
</ul>
</li>
<li>参数回归</li>
</ol>
<h3 id="4-Python主要数据预处理函数"><a href="#4-Python主要数据预处理函数" class="headerlink" title="4. Python主要数据预处理函数"></a>4. Python主要数据预处理函数</h3>]]></content>
      <categories>
        <category>数据挖掘</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>机器学习</tag>
        <tag>数据挖掘</tag>
      </tags>
  </entry>
</search>
